<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>İlkay Günel - Blog</title>
    <description>İlkay Günel Blog</description>
    <link>http://ilkaygunel.com/</link>
    <atom:link href="http://ilkaygunel.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 14 May 2020 18:52:10 +0300</pubDate>
    <lastBuildDate>Thu, 14 May 2020 18:52:10 +0300</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Prototype Design Pattern Ve Java İle Örneklemesi</title>
        <description>&lt;p&gt;Merhaba. Bu yazıda size &lt;strong&gt;&lt;em&gt;Prototype Design Pattern&lt;/em&gt;&lt;/strong&gt; nedir ve Java ile nasıl örneklenir bundan bahsedeceğim.&lt;/p&gt;

&lt;p&gt;Öncelikle nasıl bir sorunumuz olduğuna bakalım.&lt;/p&gt;

&lt;p&gt;Diyelim ki yazdığınız uygulamada business logic içerisinde öyle bir an geliyor ki sizin aynı değerlere sahip ve aynı tipte olan 2 objeye sahip olmanız ihtiyacı doğuyor. Bu durumda ne yapabiliriz? 
1-) Mevcutta var olan objeyi yenisine atama yapabiliriz. Yani Obje yeniObje = mevcutObje; diyebiliriz fakat bu istediğimiz durum olmaz çünkü ikisinin de referansı aynı, birinde yapılan değişiklik diğerini de etkiler. 
2-) Yeni objeyi sıfırdan oluşturup mevcut objenin değerlerini atayabiliriz. Ama burada da başka bir sorun çıkıyor. Private değişkenler ne olacak? Onlara erişemeyebilir ve dolayısı ile değerlerini alamayabiliriz.&lt;/p&gt;

&lt;p&gt;Prototype design pattern bu 2 yöntemle de çözemediğimiz obje klonlama konusunda bize yardımcı oluyor.&lt;/p&gt;

&lt;p&gt;Şimdi kodlama ile örnekleyelim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shape.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Shape sınıfı bizim üst sınıf olarak kullanacağımız bir sınıf. Diğer sınıflarımızı Shape sınıfından kalıtacağız. 
Shape sınıfı içerisinde iki boyutlu şekillerin sahip olduğu x,y ve renk bilgilerini tutan değişkenler mevcut. 
Parametre alan yapılandırıcısı gelen parametredeki değerleri sınıftaki değişkenlere atıyor. 
&lt;strong&gt;&lt;em&gt;abstract&lt;/em&gt;&lt;/strong&gt; tipte bir clone metodu mevcut. Shape sınıfını kalıtan sınıflar bu metodu override edecek.
&lt;strong&gt;&lt;em&gt;equals&lt;/em&gt;&lt;/strong&gt; metodu da önce obje tiplerine ardından da ojenin değerlerine bakarak iki objenin aynı olup olmadığına bakıyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Circle.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Circle sınıfımız Shape abstract sınıfını kalıtan bir sınıf. 
Shape’den gelen değişkenlerin yanında kendisine özel &lt;strong&gt;&lt;em&gt;radius&lt;/em&gt;&lt;/strong&gt; değişkeni mevcut. 
Parametreli ve parametresiz iki yapılandırıcısı mevcut. Parametreli yapılandırıcı önce Shape sınıfının yapılandırıcısını çağırarak Shape sınıfındaki değişkenleri dolduruyor ardından da radius değişkenini. 
Shape sınıfında abstract olarak tanımlanmış olan &lt;strong&gt;&lt;em&gt;clone()&lt;/em&gt;&lt;/strong&gt; metodunun override edildiğini görüyoruz. Bu metodun yaptığı işlem Circle sınıfının o anki halini parametreli yapılandırıcısına vererek yeni bir obje oluşturma işlemi. 
&lt;strong&gt;&lt;em&gt;equals&lt;/em&gt;&lt;/strong&gt; metodu da yine override edilen sınıf. Objenin Circle tipinde olup olmadğına ve Shape içindeki equals metodunun döneceği değere bakılıyor, ikisi de true dönerse radius kontrolü yapılıyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rectangle.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rectangle sınıfımız da Shape sınıfımızı kalıtıyor. 
Kendisine ait width ve height özellikleri var. 
Parametre alan yapılandırıcısı önce Shape sınıfının yapılandırıcısını çağırıyor, ardından da kendisine ait width ve height özelliklerini dolduruyor. 
Circle sınıfı gibi Rectangle sınıfı da &lt;strong&gt;&lt;em&gt;clone()&lt;/em&gt;&lt;/strong&gt; metodunu override ediyor ve sınıfın o anki halini parametre alan yapılandırıcıya geçirerek yeni bir Rectangle nesnesi oluşturuyor. 
&lt;strong&gt;&lt;em&gt;equals&lt;/em&gt;&lt;/strong&gt; metodu da obje tipi ve Shape içindeki equals ile kontrollerini yapıyor ve devamında width ve height kontrolleri ile eşitlik kontrolü yapıyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MainClass.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;anotherCircle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anotherCircle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cloneAndCompare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cloneAndCompare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapesListSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastElementInShapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapesListSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastElementInShapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastElementInShapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;: Shapes are different objects&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapesCopy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;: And they are identical&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;: But they are not identical&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;: Shape objects are the same&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;MainClass sınıfımız içindeki main metot içerisinde shapes ve shapesCopy isminde 2 listemiz var. Birisi orjinal objeleri tutarken diğeri klonlanmış objeleri tutacak. 
new operatörü ile bir Circle objesi oluşturup x,y,radius ve color bilgilerini atıyoruz. Akabinde de shapes listesine ekliyoruz. Devam eden kısımda da circle objesi üzerinden clone metodunu çağırıyoruz ve bize orjinal circle objesi ile aynı değerlere sahip farklı bir obje dönüyor. Dönen yeni objeyi de shapes listesine ekliyoruz.&lt;/p&gt;

&lt;p&gt;Rectangle sınıfından da bir obje üretip alanlarını dolduruyoruz ve shapes listesine ekliyoruz.&lt;/p&gt;

&lt;p&gt;Main metodunun sonunda &lt;strong&gt;&lt;em&gt;cloneAndCompare(…)&lt;/em&gt;&lt;/strong&gt; metodunu çağırıyoruz. cloneAndCompare metodu çağırılmadan önce shapes listemizde 3 eleman var ve shapesCopy listemiz boş. cloneAndCompare metodu öncelikle shapes listesindeki elemanlar üzerinden clone metodunu çağırarak shapesCopy listesini dolduruyor. Ardından shapes listesinin son sırasındaki elemanı hem shapes listesine tekrar ekliyor hem de bu elemanı shapesCopy listesine ekliyor. 
Devam eden kısımda ise for döngüsü içerisinde bir if-else yer alıyor. if şartı içerisinde bir != ifadesi görüyoruz. Bildiğimiz üzere Java’da != ifadesi objeler üzerinde kullanılırsa bu referans kontrolü anlamına gelir. Bu nedenle buradaki if kısmı objelerin aynı obje olup olmadığına bakar, else kısmında zaten objelerin aynı olduğuna mesaj yazdırılıyor. 
if kısmının içerisinde ise önce objelerin farklı objeler olduğuna dair mesaj yazdırılıyor ardından objeler üzerinden equals çağırılarak objelerin aynı değerlere sahip olup olmadığına bakıyor. Burada Circle ve Rectangle’ın kendilerine ait equals metotları çalıştırılacak. Eğer değerler birbirini tutuyorsa aynı olduklarına dair mesaj yazdırılıyor, aksi takdirde aynı olmadıklarına dair mesaj yazdırılıyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ekran Görüntüsü&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/designPattern/prototypeDesignPattern.PNG&quot;&gt;
    &lt;img src=&quot;/images/designPattern/prototypeDesignPattern.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Konsol çıktısında görebileceğimiz gibi listedeki ilk 3 eleman için farklı objeler oldukları fakat aynı değerleri içerdiklerine dair mesaj yazdırılıyor. Fakat son eleman için aynı olduğuna diar bir mesaj yazdırılmış çünkü iki listede de son elaman aynı bellek gözünü işaret ediyor.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

</description>
        <pubDate>Wed, 13 May 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/prototype-design-pattern/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/prototype-design-pattern/</guid>
        
        <category>Prototype design pattern</category>
        
        <category>Prototype design pattern with java</category>
        
        <category>Prototype design pattern example with java</category>
        
        <category>java generic class</category>
        
        <category>java generic</category>
        
        <category>how to use java generic class</category>
        
        <category>java generic nedir?</category>
        
        <category>java generic class nasıl kullanılır</category>
        
        <category>Singleton pattern</category>
        
        <category>Singleton pattern in java</category>
        
        <category>utc date in java</category>
        
        <category>utc date time in java</category>
        
        <category>utc date time in java 8</category>
        
        
      </item>
    
      <item>
        <title>The Big Bang Theory Dizisi Üzerine</title>
        <description>&lt;p&gt;Merhabalar. Bu yazıda sizlere The Big Bang Theory dizisinden bahsetmek istiyorum. Yazı içeriği diziyi duymuş ama izlememiş kişiler için spoiler içermektedir 🙂&lt;/p&gt;

&lt;p&gt;İlk bölümü 24 Eylül 2007 tarihinde, son bölümü de 16 Mayıs 2019 tarihinde yayınlanmış bir komedi dizisidir TBBT. 12 sezon sürmüş olan dizinin bölümleri ortalama 20 dakika sürmüştür.&lt;/p&gt;

&lt;p&gt;Dizideki karakterlerden biraz bahsedeyim.&lt;/p&gt;

&lt;p&gt;TBBT dizisinde başlangıçta ana karakter sayısı 5 idi. Bunlar aynı evi paylaşan teorik fizikçi Sheldon Cooper, deneysel fizikçi Leonard Hofstadter, onların yakın arkadaşları uzay mühendisi Howard Wolowitz ile astrofizikçi Rajesh Koothrappali ve karşı dairelerine taşınan Penny’dir. Penny karakterinin asıl soyadı bilinmemektedir. İlerleyen kısımlarda diziye Howard’ın eşi olacak Bernadette Rostenkowski ve adeta Sheldon’ın kız versiyonu olan Amy Farrah Fowler karakterlerinin dahil olması ile ana karakter sayısı 7’ye çıkmıştır. Bu ana karakterlerin yanında her bölümde yer almayan ama çoğu bölümde yer alan çizgi roman dükkanı sahibi Stuart karakteri var.&lt;/p&gt;

&lt;p&gt;Bu dizi ile özdeşleşen karakter kimdir denilse belki cevapların %99’u Sheldon Cooper olacaktır. Sheldon karakteri dizinin başlarında diğer karakterlerin önüne geçmiş bir karakter değildi. Diğer karakterler ile aynı seviyede bir karakter idi. Fakat arkadaşlarına göre sosyal ikişkilerindeki zayıf olması, IQ olarak çok yüksek seviyede olmasına kaşın EQ olarak iyi seviyede olmaması onu diğer karakterlerden biraz öne çıkardı zamanla ve dizi bu minvalde Sheldon’a odaklanmaya yöneldi. Dizi aslında bu minvalde de bizi Sheldon’ın olağan üstü değişimini anlattı bize. İnsanlara karşı nerede ise hiç sevgi beslemeyen Sheldon karakteri zaman için evlenmek isteyen bir karaktere dönüştü.&lt;/p&gt;

&lt;p&gt;Dizi içerisinde devamlı inişli çıkışlı ilişkisi olan ayrılıp barışan çiftimiz olan Penny-Leonard ilişkisinde de benim kendi görüşüm Penny karakterinin Leonard’ı hak etmediğidir. Sorumsuz ve nankör bir karakter olduğunu düşündüğüm bu karakterin Leonard gibi naif ve iyi bir karakter ile evlenmesi benim en hoşuma gitmeyen anlardan birisi idi. Ekşi sözlükteki &lt;a href=&quot;https://eksisozluk.com/entry/94804962&quot;&gt;#94804962&lt;/a&gt; numaralı entry’de bahsedilen konu da bu konuda söylemek istediğim bir konu aslında. Bu çift ile ilgili son bölümde&lt;/p&gt;

&lt;p&gt;Howard-Bernadette çifti ise Howard’a göre çok daha olgun olan Bernadette’in adeta Howard’ı adam etmesi ile geçti bölümlerde. Howard yaşına rağmen belki de annesinin de etkisi ile takılı kaldığı çocuksu hallerinden Bernadette sayesinde sıyrılıp 2 çocuk babası olabilecek hale gelmiştir. Bu arada bu 2 çocuk final bölümüne kadar hiçbir bölümde gösterilmemiş sadece final bölümünde insan karşısına çıkartılmışlardır. Howard’ın annesi de sadece ses olarak dizide yer almış, kamera önüne çıkan bir karakter olmamıştır.&lt;/p&gt;

&lt;p&gt;Astrofizikçi Rajesh Koothrappali ise 12 sezon boyunca maalesef diğer karakterler gibi evlilikle neticelenecek bir kız bulamadı. Diğer tüm karakterler için mutlu son yazılırken Rajesh için yazılamamış olması da ilginç bir nokta olarak kaldı.&lt;/p&gt;

&lt;p&gt;Dizi hakkında yorumlarımdan biraz bahsedeyim.&lt;/p&gt;

&lt;p&gt;Dizi 1. sezondan 7. sezona kadar oldukça komik bölümler içermiş ve durağan olmayan bölümler ile devam etmiştir. Fakat 7. sezondan itibaren dizi durgunluk dönemine girmiştir ve 8. sezondan itibaren komedi açısından eski sezonlara göre daha düşük bir seviyeye gelmiştir. Ara ara çok güzel bölümler çıksa da dizi bu sezonlar boyunca bence gereksiz uzatılma hatasının kurbanı olan bir dizi olmuş.&lt;/p&gt;

&lt;p&gt;Dizideki 4 erkek ana karakterimiz modern tabir ile &lt;strong&gt;&lt;em&gt;nerd&lt;/em&gt;&lt;/strong&gt; olan kişiler. Bu da onlar ile ilgili anlatılabilecek şeyleri aslında meslekleri ile kısıtlıyor. Bu noktada çoğu kişi aslında diziye Bernadette ve Amy karakterlerinin dahil olmasından sonra dizinin bozduğunu söyleseler de benim düşüncem farklı yönde. Bu 2 kadın karakterin diziye dahil olması karakterlerin meslekleri ile sıkışmış oldukları dünyadan çıkarıp daha fazla anlatılabilecek şey elde etmesi, karakterlerin karşılacakları durumlar karşısında değişimlerinin yansıtılması amacı taşıyordu bence.&lt;/p&gt;

&lt;p&gt;Dizinin final bölümü çok güzel bir bitirme bölümü olmuştur. Çoğu insanın gözünden yaş getirecek kadar duygusal bir atmosfere sahip olmuştur. Sheldon çocukluk hayali olan Nobel ödülü almış, Leonard çocuk sahibi olacağının sevincini yaşamıştır. Gerek karakterlerin değişimlerinin noktalanması gerek 12 koca yıl süren bir maceranın sona ermesi bu atmosferin oluşmasında etkili olmuştur.&lt;/p&gt;

&lt;p&gt;İzlememiş herkese izlemesini tavsiye edebileceğim çok güzel bir dizi idi.&lt;/p&gt;

&lt;p&gt;Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p&gt;Görüşmek üzere.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Apr 2020 20:40:22 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/tbbt-uzerine/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/tbbt-uzerine/</guid>
        
        <category>the big bang theory</category>
        
        <category>the big bang theory dizisi üzerine</category>
        
        <category>big bang theory</category>
        
        
      </item>
    
      <item>
        <title>Spring Boot İle Unit Test Yazalım</title>
        <description>&lt;p&gt;Merhabalar.&lt;/p&gt;

&lt;p&gt;Bu yazıda sizlere bir Spring Boot projesinde nasıl unit test yazabileceğimizden bahsedeceğim.&lt;/p&gt;

&lt;p&gt;Daha önceleri size bahsettiğim bir projem olan MemberRestAPIProject projesi üzerinden bu yazımı örnekleyeceğim. MemberRestAPIPRoject içerisinde kullanıcı ekleme servisi eğer sistemde ekleme işi için gelen e-posta adresi ile kayıtlı bir kullanıcı var ise sistem bu işlemi reddeder. Biz test işleminde kayıtlı olduğunu bildiğimiz bir e-posta adresi ile kayıt işlemi deneyeceğiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pom.xml’e Eklenecek Bağımlılık&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;pom.xml dosyamıza sadece &lt;strong&gt;&lt;em&gt;spring-boot-starter-test&lt;/em&gt;&lt;/strong&gt; bağımlılığımızı eklemek yeterlidir. Bu bağımlılık test işlemi için kullanacağımız JUnit ve Mockito kütüphanelerini projemize ekleyecek.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Test Kodumuz&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MockitoJUnitRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberSaveServiceTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;MemberRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ResourceBundleMessageManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceBundleMessageManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;MemberUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@InjectMocks&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;MemberSaveService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberSaveService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testSavingWithExistingEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TEST1234&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ilkgunel93@gmail.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;memberList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memberRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ilkgunel93@gmail.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;memberSaveService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAdminMember&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memberList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CustomException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ErrorCodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ERROR_06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getErrorCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getErrorCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MessagingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messaginException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//Ignore it&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test kodumuz içerisinde yapılan işlemlere adım adım bakalım:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Test sınıfımızı &lt;strong&gt;&lt;em&gt;@RunWith&lt;/em&gt;&lt;/strong&gt; notasyonu ile işaretliyoruz ve notasyona &lt;strong&gt;&lt;em&gt;MockitoJUnitRunner&lt;/em&gt;&lt;/strong&gt; sınıfını parametre olarak geçiyoruz. Bu işlem sınıfımızın bir Mockito test sınıfı olarak örneklenmesini ve çalıştırılmasını sağlayacak.&lt;/li&gt;
  &lt;li&gt;Test edeceğimiz işlem MemberSaveService sınıfı içerisinde yer aldığı için MemberSaveService sınıfının ihtiyaç duyduğu bazı objeleri test sınıfı içerisinde &lt;strong&gt;&lt;em&gt;@Mock&lt;/em&gt;&lt;/strong&gt; notasyonu ile mock’luyoruz. Testin çalıştırılması sırasında bu objeler Mockito tarafından oluşturulacak.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;@InjectMocks&lt;/em&gt;&lt;/strong&gt; notasyonu ile de @Mock notasyonu ile işaretlediğimiz objelerin enjekte edilmesi işlemini sağlıyoruz. Bu notasyon ile MemberSaveService sınıfı ihtiyaç duyduğu objelere sahip olmuş olacak.&lt;/li&gt;
  &lt;li&gt;@Test notasyonu ile işaretli metodumuz JUnit’den gelen bildiğimiz test metodumuz.&lt;/li&gt;
  &lt;li&gt;testSavingWithExistingEmail metodumuz içerisinde bir member objesi oluşturup parola ve email alanlarını dolduruyoruz. Akabinde bir memberList listesi oluşturup oluşturduğumuz member objesini bu listeye ekliyoruz.&lt;/li&gt;
  &lt;li&gt;Mockito’dan gelen &lt;strong&gt;&lt;em&gt;when&lt;/em&gt;&lt;/strong&gt; metodu çağırımı ile şu metot çağırıldığında şöyle sonuç versin diye metodu simüle edebiliyoruz. &lt;strong&gt;&lt;em&gt;when(memberRepository.findByEmail(“ilkgunel93@gmail.com”)).thenReturn(Optional.of(member))&lt;/em&gt;&lt;/strong&gt; dediğimiz zaman memberRepository içerisindeki findByEmail metodu ilkgunel93@gmail.com parametresi ile çağırıldığı zaman bize Optional tipinde olacak şekilde az önce oluşturduğumuz member objesi dönülecek.&lt;/li&gt;
  &lt;li&gt;try bloğunun içerisinde bir liste kabul eden addAdminMember metodunu memberSaveService objesi üzerinden çağırıyoruz. addAdminMember metodu kendi akışı içerisinde kayıtlı e-posta adresi olup olmadığını memberRepository üzerinden kontrol ediyor. Bu noktada da simüle ettiğimiz değer bize dönecek ve sistemde bu e-posta adresi ile kayıtlı kullanıcı varmış gibi davranacak.&lt;/li&gt;
  &lt;li&gt;Veri tabanında var olan e-posta adresi ile kayıt talebi geldiğinde  sistem &lt;strong&gt;&lt;em&gt;ERROR-06&lt;/em&gt;&lt;/strong&gt; kodu ile bir CustomException fırlatıyor. Burada catch bloğu içinde de bu hata yakalanıp gelen hata kodunun beklediğimiz hata kodu olup olmadığına &lt;strong&gt;&lt;em&gt;assertEquals&lt;/em&gt;&lt;/strong&gt; metodu ile bakıyoruz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SONUÇ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu yazı ile birlikte Spring Boot projesinde nasıl Unit Test yazılabileceğine dair bilgi edinmiş olduk. Başka yazıda görüşene kadar sağlıacakla olun.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Apr 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/unit-test-with-spring-boot/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/unit-test-with-spring-boot/</guid>
        
        <category>spring boot test</category>
        
        <category>mockito test</category>
        
        <category>spring boot mockito test</category>
        
        <category>spring boot mockito</category>
        
        <category>spring boot unit test</category>
        
        <category>mockito unit test</category>
        
        <category>spring boot mockito unit test</category>
        
        
      </item>
    
      <item>
        <title>Spring Boot - Harici Config Dosyası Kullanımı</title>
        <description>&lt;p&gt;Bu yazı içerisinde size bir Spring Boot uygulamasında uygulamanın kaynak kodu dışındaki bir yerde yer alan config dosyasının kullanımından bahsedeceğim.&lt;/p&gt;

&lt;p&gt;Bildiğimiz gibi Spring Boot src/main/resources altında yer alan application.properties dosyası ile çok sayıda config tanımı yapıp kullanmaya imkan tanıyor. Örneğin Spring Data kullanımı sırasında veritabanı bağlantı bilgileri bu dosyada yer alıyor, mail gönderim işlemleri için tanımlanması gereken property’ler bu dosya içinde yer alıyor gibi.&lt;/p&gt;

&lt;p&gt;Şimdi biz bir demo uygulama üzerinden önce kaynak kod içindeki application.properties dosyası ile uygulamayı ayağa kaldıracağız akabinde de harici lokasyondaki application.properties dosyası ile uygulamayı ayağa kaldıracağız.&lt;/p&gt;

&lt;p&gt;Lokaldeki MySQL veritabanı sunucumda &lt;strong&gt;&lt;em&gt;internaldb&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;externaldb&lt;/em&gt;&lt;/strong&gt; adında 2 adet veri tabanım var ve bu veri tabanları içerinde de &lt;strong&gt;&lt;em&gt;Drivers&lt;/em&gt;&lt;/strong&gt; adında bir tablom var. internaldb veri tabanı uygulama içi application.properties, externaldb de harici lokasyondaki application.properties için kullanılacak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/springbootexternalconfiguration/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/springbootexternalconfiguration/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
    &amp;lt;figcaption&amp;gt;InternalDB içerisindeki Drivers tablosunda tutulan veriler&amp;lt;/figcaption&amp;gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/springbootexternalconfiguration/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/springbootexternalconfiguration/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
    &amp;lt;figcaption&amp;gt;ExternalDB içerisindeki Drivers tablosunda tutulan veriler&amp;lt;/figcaption&amp;gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uygulamanın kaynak kodu içerisinde yer alan application.properties dosyası içeriği de şöyle:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://localhost:3306/INTERNALDB?useUnicode=yes&amp;amp;characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu application.properties dosyasından göreceğimiz gibi uygulama içi properties dosyası INTERNALDB’ye bağlantı sağlayacak.&lt;/p&gt;

&lt;p&gt;Şimdi ben uygulamamı kaynak kod içerisinde yer alan &lt;strong&gt;&lt;em&gt;Application.java&lt;/em&gt;&lt;/strong&gt; sınıfı üzerinden başlatıyorum. http://localhost:8080/drivers/all adresine browser üerinden istek gönderdiğimde aşağıdaki ekran görüntüsünde de görebileceğimiz gibi INTERNALDB içerisinde yer alan Drivers tablosundaki kayıtlar geliyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/springbootexternalconfiguration/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/springbootexternalconfiguration/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
    &amp;lt;figcaption&amp;gt;INTERNAL içerisindeki Drivers tablosunda tutulan veriler ekrana geldi&amp;lt;/figcaption&amp;gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi harici lokasyondaki dosya kullanımı için olarak pom.xml dosyası içerisinde build tag’i altında aşağıdaki resource tanımını yapıyoruz.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;src/main/resources&lt;span class=&quot;nt&quot;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;filtering&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filtering&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;excludes&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;**/application.properties&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu işlem aslında zorunlu olduğumuz bir işlem değil fakat kaynak koddan elde edeceğimiz jar içerisinde kullanılmayan gereksiz bir dosyasının yer almaması için yapıyoruz bu işlemi.&lt;/p&gt;

&lt;p&gt;Akabinde &lt;strong&gt;&lt;em&gt;mvn clean install&lt;/em&gt;&lt;/strong&gt; komutu ile bir jar çıkarıyoruz. Target dizini altına çıkan jar dosyasını istediğiniz herhangi bir yere kopyalayın. Ben Documents altında &lt;strong&gt;&lt;em&gt;Spring Boot External Config Test&lt;/em&gt;&lt;/strong&gt; adında bir klasöre kopyaladım.&lt;/p&gt;

&lt;p&gt;Spring Boot uygulaması default olarak appliation.properties dosyasına jar ile aynı dizinde mi yoksa jar ile aynı dizinde yer alan config klasörü altında mı diye bakar. Şimdi biz Spring Boot External Config Test klasörü içine aşağıdaki içeriğe sahip bir application.properties dosyası koyalım.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://localhost:3306/EXTERNALDB?useUnicode=yes&amp;amp;characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu application.properties dosyasından göreceğimiz gibi harici properties dosyası EXTERNALDB’ye bağlantı sağlayacak.&lt;/p&gt;

&lt;p&gt;Şimdi komut satırı üzerinden ilgili klasöre geliyorum ve &lt;strong&gt;&lt;em&gt;java -jar SpringBootExternalConfiguration-1.0-SNAPSHOT.jar&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırıyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/springbootexternalconfiguration/4.PNG&quot;&gt;
    &lt;img src=&quot;/images/springbootexternalconfiguration/4.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
    &amp;lt;figcaption&amp;gt;Spring Boot uygulaması başarılı bir şekilde ayağa kalktı&amp;lt;/figcaption&amp;gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi tekrar http://localhost:8080/drivers/all adresine gidelim ve ekrana gelen verileri kontrol edelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/springbootexternalconfiguration/5.PNG&quot;&gt;
    &lt;img src=&quot;/images/springbootexternalconfiguration/5.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
    &amp;lt;figcaption&amp;gt;EXTERNAL içerisindeki Drivers tablosunda tutulan veriler ekrana geldi&amp;lt;/figcaption&amp;gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran görüntüsünden gördüğümüz gibi bize EXTERNALDB içerisinde yer alan kayıtlar getirildi. Eğer bunun yerine Spring Boot External Config Test klasörü içinde bir &lt;strong&gt;&lt;em&gt;config&lt;/em&gt;&lt;/strong&gt; klasörü oluşturup application.properties dosyasını oraya taşısaydık ve yeninden java -jar komutunu çalıştırsaydık yine uygulamamız başarılı bir şekilde çalışacaktı.&lt;/p&gt;

&lt;p&gt;Peki bu noktada şöyle bir soru soralım. Bu şekilde jar’ın olduğu klasöre bağımlı kalmak istemiyorsak ne yapmalıyız?&lt;/p&gt;

&lt;p&gt;Bu durumda da java -jar komutumuza ilave parametre geçerek sorunumuzu çözebiliriz. application.properties dosyasının Downloads klasörü altında olduğunu ve jar ile aynı dizinde bir properties dosyası olmadığını düşünürsek şu komut ile uygulamamızı ayağa kaldırabiliriz:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java -jar -Dspring.config.location=C:\Users\igunel\Downloads\application.properties SpringBootExternalConfiguration-1.0-SNAPSHOT.jar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;-D komutu ile Java’ya parametre geçebiliyoruz ve yukarıdaki kısımda da &lt;strong&gt;&lt;em&gt;spring.config.location&lt;/em&gt;&lt;/strong&gt; parametresi ile uygulamaya Downloads klasörü altındaki application.properties dosyasını kullanarak ayağa kalkmasını söylüyoruz.&lt;/p&gt;

&lt;p&gt;Bu işlemin yanında eğer uygulamamız birden fazla properties dosyası kullanıyorsa ve biz de onları komut satırından geçirmek istersek şu komut ile name ve location ayrıştırması yapabiliriz:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java -jar -Dspring.config.name=application,jdbc -Dspring.config.location=C:\Users\igunel\Downloads\ SpringBootExternalConfiguration-1.0-SNAPSHOT.jar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki komutumuzda spring.config.name parametresine application ve jdbc property isimlerini veriyoruz. Bu noktada bizim application.properties ve jdbc.properties isminde iki dosyamız olduğunu düşünebiliriz. Akabinde spring.config.location paramtresine bu application ve jdbc property dosyalarının yer aldığı klasörü veriyoruz. Böylece uygulamamız C:\Users\igunel\Downloads\ klasörünü tarayıp application ve jdbc property dosyalarını alıyor. Ardından da bu dosyalardaki bilgiler ile uygulama ayağa kalkıyor.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım da bu kadar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Başka yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Feb 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/external-config-file-in-spring-boot/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/external-config-file-in-spring-boot/</guid>
        
        <category>spring rest api</category>
        
        <category>spring rest api get example</category>
        
        <category>spring rest api get örneği</category>
        
        <category>spring rest pagination</category>
        
        <category>spring rest sayfalama</category>
        
        <category>spring rest api pagination</category>
        
        <category>spring rest api sayfalama</category>
        
        <category>rest api pagination</category>
        
        <category>rest api sayfalama</category>
        
        <category>spring boot</category>
        
        <category>spring mongodb</category>
        
        <category>spring boot mongodb</category>
        
        <category>spring boot ve mongdb'nin birlikte kullanımı</category>
        
        <category>spring boot ve mongodb entegrasyonu</category>
        
        <category>spring boot war</category>
        
        <category>deploying war from spring boot</category>
        
        <category>deploying war of spring boot app to tomcat</category>
        
        <category>deploying spring boot war to tomcat</category>
        
        <category>spring boot external config</category>
        
        <category>spring boot external properties</category>
        
        <category>spring boot external application properties</category>
        
        <category>spring boot external properties</category>
        
        <category>spring boot external property setting</category>
        
        
      </item>
    
      <item>
        <title>Spring Boot Yazıları</title>
        <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/member-rest-api-project/&quot;&gt;Spring Boot Tabanlı MemberRestAPI Projesi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2020/external-config-file-in-spring-boot/&quot;&gt;Spring Boot - Harici Config Dosyası Kullanımı&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2020/deploying-spring-boot-war-tomcat/&quot;&gt;Spring Boot Uygulamasından WAR Elde Edilip Tomcat’e Deploy Edilmesi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2019/spring-boot-and-mongodb/&quot;&gt;Spring Boot ve MongoDB’nin Birlikte Kullanımı&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2019/pagination-on-rest-api/&quot;&gt;Rest API Üzerinde Pagination İşlemi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/schedules-tasks-with-spring-boot/&quot;&gt;Schedules Tasks With Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/sending-email-on-spring-boot-project/&quot;&gt;Spring Boot Tabanlı Projede E-Mail Gönderimi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/localization-in-spring-framework/&quot;&gt;Spring Framework Yerelleştirme (Localization)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/securing-rest-web-service-spring-security-spring-boot-jwt/&quot;&gt;Spring Boot ve Spring Security İle Rest Servisi Koruma 3 - JSON Web Token İle Doğrulama&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2018/securing-rest-webservice-spring-security-spring-boot-database/&quot;&gt;Spring Boot ve Spring Security İle Rest Servisi Koruma 2 - Database’de Tanımlı Kullanıcılar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2017/securing-rest-service-spring-security-spring-boot-inmemory/&quot;&gt;Spring Boot ve Spring Security İle Rest Servisi Koruma 1 - InMemory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2017/caching-with-spring/&quot;&gt;Spring’in Cache Mekanizmasına Göz Atalım&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2017/spring-rest-post-example/&quot;&gt;Spring Rest - POST Örneği&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilkaygunel.com/blog/2016/spring-rest-get-example/&quot;&gt;Spring Rest - GET Örneği&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 28 Feb 2020 19:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/spring-boot-yazilari/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/spring-boot-yazilari/</guid>
        
        <category>spring rest api</category>
        
        <category>spring rest api get example</category>
        
        <category>spring rest api get örneği</category>
        
        <category>spring rest pagination</category>
        
        <category>spring rest sayfalama</category>
        
        <category>spring rest api pagination</category>
        
        <category>spring rest api sayfalama</category>
        
        <category>rest api pagination</category>
        
        <category>rest api sayfalama</category>
        
        <category>spring boot</category>
        
        <category>spring mongodb</category>
        
        <category>spring boot mongodb</category>
        
        <category>spring boot ve mongdb'nin birlikte kullanımı</category>
        
        <category>spring boot ve mongodb entegrasyonu</category>
        
        <category>spring boot war</category>
        
        <category>deploying war from spring boot</category>
        
        <category>deploying war of spring boot app to tomcat</category>
        
        <category>deploying spring boot war to tomcat</category>
        
        <category>spring boot external config</category>
        
        <category>spring boot external properties</category>
        
        <category>spring boot external application properties</category>
        
        <category>spring boot external properties</category>
        
        <category>spring boot external property setting</category>
        
        
      </item>
    
      <item>
        <title>Spring Boot Uygulamasından WAR Elde Edilip Tomcat'e Deploy Edilmesi</title>
        <description>&lt;p&gt;Merhabalar.&lt;/p&gt;

&lt;p&gt;08.02.2020 tarihinde https://www.youtube.com/watch?v=ljC-1KmIAKY&amp;amp;t=28s adresinde bir Spring Boot uygulamasından WAR paketi elde edilip Tomcat’e deploy edilmesi konusunu anlatmıştım. Bu yazıda da videonun yazılı halini sizinle paylaşacağım.&lt;/p&gt;

&lt;p&gt;Bildiğimiz gibi @SpringBootApplication notasyonu ile işaretli sınıftan Spring Boot uygulamamızı başlatabiliyoruz. Fakat uygulamadan bir WAR elde edip bir Tomcat’e deploy etme ihtiyacı duyduğumuzda sınıfımızda ayarlama yapmamız gerekecektir.&lt;/p&gt;

&lt;p&gt;Şimdi benim elimde basit bir demo Spring Boot uygulaması var. Bu uygulamayı @SpringBootApplication notasyonu ile işaretli sınıftan başlattığım zaman  http://localhost:8080/api/drivers adresi üzerinden erişebildiğim ve bana aşağıdaki bir cevap dönen servisim var.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/SpringBootWARTomcat/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/SpringBootWARTomcat/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ben bu Spring Boot uygulamasından bir IDE içerisinde ya da komut satırı üzerinde &lt;strong&gt;&lt;em&gt;mvn clean install&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırarak bir WAR dosyası elde ediyorum ve akabinde kullanacağım Tomcat’in &lt;strong&gt;&lt;em&gt;webapps&lt;/em&gt;&lt;/strong&gt; dizini altına elde ettiğim WAR dosyasını koyuyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/SpringBootWARTomcat/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/SpringBootWARTomcat/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kullanacağım Tomcat’in dizininin içindeki bin dizininde bir adet &lt;strong&gt;&lt;em&gt;startup.bat&lt;/em&gt;&lt;/strong&gt; dosyası yer alıyor. Komut satırı aracılığı ile bu dosyayı çalıştırdığımda webapps altında yer alan WAR dosyaları Tomcat’e deploy ediliyor. .bat dosyasını çalıştırdıktan sonra browser’dan http://localhost:8080/DemoSpringBootProject-1.0-SNAPSHOT/api/drivers adresine gittiğimde 404 Not Found hatası alıyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/SpringBootWARTomcat/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/SpringBootWARTomcat/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bunun sebebi de @SpringBootApplication notasyonu ile işaretli sınıfın konfigüre edilmemiş olmasıdır. Bu konfigürasyon işlemi de oldukça basit. Sınıfımızı aşağıdaki şekilde &lt;strong&gt;&lt;em&gt;SpringBootServletInitializer&lt;/em&gt;&lt;/strong&gt; sınıfından kalıtırsak ve &lt;strong&gt;&lt;em&gt;configure&lt;/em&gt;&lt;/strong&gt; metodunu da override edersek uygulamamız WAR elde edilip Tomcat’e deploy edilecek hale gelecektir.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.builder.SpringApplicationBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.web.servlet.support.SpringBootServletInitializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpringBootServletInitializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpringApplicationBuilder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringApplicationBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu değişiklik akabinde mevcut sunucuyu durdurup webapps dizini altındaki WAR dosyası ve deploy edilmiş klasörü silip mvn clean install komutu ile uygulamadan tekrar WAR dosyası elde ediyoruz ve webapps dizini altına bu WAR dosyasını koyup Tomcat’i yeniden başlatıyorum.&lt;/p&gt;

&lt;p&gt;Şimdi tekrardan http://localhost:8080/DemoSpringBootProject-1.0-SNAPSHOT/api/drivers adresine istekte bulunduğumda uygulamanın çalıştığını görüyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/SpringBootWARTomcat/4.PNG&quot;&gt;
    &lt;img src=&quot;/images/SpringBootWARTomcat/4.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım da bu kadar arkadaşlar. Başka yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Feb 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/deploying-spring-boot-war-tomcat/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/deploying-spring-boot-war-tomcat/</guid>
        
        <category>spring rest api</category>
        
        <category>spring rest api get example</category>
        
        <category>spring rest api get örneği</category>
        
        <category>spring rest pagination</category>
        
        <category>spring rest sayfalama</category>
        
        <category>spring rest api pagination</category>
        
        <category>spring rest api sayfalama</category>
        
        <category>rest api pagination</category>
        
        <category>rest api sayfalama</category>
        
        <category>spring boot</category>
        
        <category>spring mongodb</category>
        
        <category>spring boot mongodb</category>
        
        <category>spring boot ve mongdb'nin birlikte kullanımı</category>
        
        <category>spring boot ve mongodb entegrasyonu</category>
        
        <category>spring boot war</category>
        
        <category>deploying war from spring boot</category>
        
        <category>deploying war of spring boot app to tomcat</category>
        
        <category>deploying spring boot war to tomcat</category>
        
        
      </item>
    
      <item>
        <title>Vue.js Yazıları 4 - Handling User Inputs</title>
        <description>&lt;p&gt;Vue.js içerisinde kullanıcıların uygulamamız ile etkileşim içerisine girebilmesi için &lt;strong&gt;&lt;em&gt;v-on&lt;/em&gt;&lt;/strong&gt; özelliğini kullanabiliriz. v-on özelliği ile Vue örneği içerisinde tanımlanmış methodları event listener olarak ekleyip kullanabiliriz. Şimdi durumu örnekleyelim.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:v-on=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;handlingUserInputApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ message }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-on:click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;reverseMessage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Reverse Message&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handlingUserInputApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;#handlingUserInputApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Text for reversing.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;reverseMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki örneğimizde handlingUserInputApp id bilgisine sahip div içinde öncelikle Vue örneği içerisindeki message değişkenini ekrana yazdırıyoruz. Bir alt satırda ise bir buton tanımı mevcut. Bu butonda göreceğimiz üzere bir v-on özelliği kullanımı mevcut. v-on özelliğine : ifadesinden sonra click ifadesi eklenmiş. Klasik HTML ve JS tarafından hatırladığımız onClick özelliğine denk geliyor aslında bu ifade. Butona tıklanma anında Vue örneği içerisindeki &lt;strong&gt;&lt;em&gt;reverseMessage&lt;/em&gt;&lt;/strong&gt; metodu çağırılacak ve message değişkeninin değeri ters çevrilip yeniden message değişkenine atanacak.&lt;/p&gt;

&lt;p&gt;Uygulamayı çalıştırdığımızda ekranda message değişkeninin değerini görüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/handlingUserInput/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/handlingUserInput/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reverse Message butonuna tıkladığımızda ise mesajımızın ters çevrilmiş halde yazdığını göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/handlingUserInput/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/handlingUserInput/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu örnekte eğer dikkat etti isek biz DOM manipülasyonuna dair bir işlem yapmadık. message değişkeni üzerinde yapılan değişiklik ekrana direk olarak yansıdı. Vue.js DOM manipülasyonları görevini kendi üstüne alarak işlemleri hallediyor.&lt;/p&gt;

&lt;p&gt;Bunun yanında Vue.js içerisinde &lt;strong&gt;&lt;em&gt;v-model&lt;/em&gt;&lt;/strong&gt; adında bir özelliğimiz daha mevcut. v-model ile siz div içerisindeki element’i Vue örneği içerisindeki bir alan ile bağlayabilirsiniz. Durumu bir örnek ile netleştirelim. Yukarıdaki örneğimizi şu şekilde değiştirelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:v-on=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;handlingUserInputApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ message }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handlingUserInputApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;#handlingUserInputApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sebastian Vettel&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu örnekte yine Vue örneği içerisindeki message değişkeninin değeri ekrana yazdırılacak ve bu değişkenin altında bir input yer alıyor. Bu input elementinde &lt;strong&gt;&lt;em&gt;v-model&lt;/em&gt;&lt;/strong&gt; özelliği kullanılmış ve v-model özelliğine message ataması yapılmış. Bu atama input elementi ile Vue örneği içerisindeki message değişkenlerini birbirne bağlayacak ve input elementinin message değişkeninin değeri ile gelmesini sağlayacak.&lt;/p&gt;

&lt;p&gt;Browser’da görüntüleme yaptığımızda input elementinin içindeki değer ile element’in üstünde yazan metnin aynı olduğunu göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/handlingUserInput/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/handlingUserInput/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Input elementi içerisindeki değeri değiştirdiğimizde v-model bağlantısından ötürü message değişkeni değeri değişecek ve bu değişim input elementi üzerindeki text’e de yansıyacak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/handlingUserInput/4.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/handlingUserInput/4.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım bu kadar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Başka yazıda görüşenece kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jan 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/handling-user-inputs/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/handling-user-inputs/</guid>
        
        <category>vue js</category>
        
        <category>vue.js</category>
        
        <category>vue js introduction</category>
        
        <category>vue.js introduction</category>
        
        <category>vue cli</category>
        
        <category>installing vue cli</category>
        
        <category>how to install vue cli</category>
        
        <category>vue cli kurulumu</category>
        
        <category>vue cli nasıl kurulur</category>
        
        <category>vue project creating</category>
        
        <category>vue cli creating project</category>
        
        <category>how to create project with vue cli</category>
        
        <category>vue cli ile proje oluşturma</category>
        
        <category>vue proje oluşturma</category>
        
        
      </item>
    
      <item>
        <title>Vue.js Yazıları 3 - Declarative Rendering, Conditionlas, Loops</title>
        <description>&lt;p&gt;Merhabalar. Bu yazı içerisinde&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Declarative Rendering&lt;/li&gt;
  &lt;li&gt;Conditionlas&lt;/li&gt;
  &lt;li&gt;Loops 
konularına değineceğiz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Declarative Rendering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vue.js bizlere declarative yani bildirmeli bir geliştirme imkanı tanıyor. Bizim bir noktada tanımladığımız bir Vue örneğimizin HTML içinde tanımlanan isim ile çağırılıp kullanılmasını sağlıyor bizlere. Bir örnek ile devam edelim.&lt;/p&gt;

&lt;p&gt;Bir önceki yazıda oluşturmuş olduğumuz projeyi herhangi bir IDE ya da metin editöründe açalım ve public altındaki index.html dosyasının içeriğini aşağıdaki içerik ile değiştirelim.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;#firstApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello Vue!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi bu dosyası içerisinde head kısmında bir vue.js kaynak dosyası eklenmiş. &lt;strong&gt;&lt;em&gt;body&lt;/em&gt;&lt;/strong&gt; tag’i içerisinde &lt;strong&gt;&lt;em&gt;firstApp&lt;/em&gt;&lt;/strong&gt; id bilgisine sahip bir div tanımlanmış ve bu div içerisinde de çift süslü parantezler arasında message değişkeni çağrılmış. Bu çift süslü parantez kullanımı terminolojide &lt;strong&gt;&lt;em&gt;interpolation&lt;/em&gt;&lt;/strong&gt; olarak geçmekte. Yani bizlerin oluşturduğumuz bir Vue değerinin içindeki bir bilgiyi alıp kullanmamız bu şekilde çift süslü parantezler arasında çağırım ile mümkün oluyor ve buna interpolation deniliyor.&lt;/p&gt;

&lt;p&gt;firstApp div’inin altında ise bir script tanımı görüyoruz. Bu script tanımı içerisinde &lt;strong&gt;&lt;em&gt;new Vue&lt;/em&gt;&lt;/strong&gt; ifadesi ile bir Vue örneğinin oluşturulduğunu görüyoruz. Bu örneğin oluşturulması sırasında = operatörünün sol kısmında klasik Javascript’ten bildiğimiz değişken isimlendirmesi yer alıyor. Vue örneğinin oluşturulmasının iç kısmında bir &lt;strong&gt;&lt;em&gt;el&lt;/em&gt;&lt;/strong&gt; tanımı görüyoruz. el tanımının karşısında yer alan &lt;strong&gt;&lt;em&gt;#firstApp&lt;/em&gt;&lt;/strong&gt; bilgisi dikkat edersek div’in id bilgisi ile aynı. İşte bu noktada bir Vue örneğinin HTML içindeki kullanımı için div’in id bilgisi ile el tanımındaki değerin aynı olması gerektiğini söylebiliriz, iki alan birbirine bu el bilgisi üzerinden bağlanacaktır.
el tanımının altında ise &lt;strong&gt;&lt;em&gt;data&lt;/em&gt;&lt;/strong&gt; tanımı görüyoruz. bu data tanımının içinde yapılan tanımlamalar aslında Vue örneğinin içinden çağırıp kullanabileceğimiz alanları barındırıyor. Örneğin biz div içinde message tanımının değerini ekrana yazdıracağız, data alanının içinde de bu message tanımı yapılıyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ekran Görüntüsü&lt;/strong&gt;
http://localhost:8080/ adresine gittiğimde ekranda message değişkenine atanmış Hello Vue! yazısını görüyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/declarativeRenderingConditionalsLoops/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/declarativeRenderingConditionalsLoops/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conditionals and Loops&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İsminden de anlayabileceğimiz gibi conditionals koşullu işlemleri, loops da döngüleri niteler. Şimdi biz koşullu ifade ve döngüler Vue.js’de nasıl kullanılır ona bakalım. Önce koşullu ifade için örnekleme yapalım:&lt;/p&gt;

&lt;p&gt;Koşullu ifadeler için biz &lt;strong&gt;&lt;em&gt;v-if&lt;/em&gt;&lt;/strong&gt; özelliğini kullanabiliriz. v-if özelliğine atanan değer true olduğunda bu özelliğin kullanıldığı element çalışacak iken atanan değer false olur ise çalışmayacaktır.&lt;/p&gt;

&lt;p&gt;Şöyle bir örneğimiz olsun:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;conditionalApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-if=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;visible&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;You can see this text!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;conditionalApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;#conditionalApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;visible&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki kodda &lt;strong&gt;&lt;em&gt;conditionalApp&lt;/em&gt;&lt;/strong&gt; id bilgisine sahip bir div’imiz var ve div içerisinde span elementinde v-if özelliği kullanılmış. v-if özelliği de &lt;strong&gt;&lt;em&gt;visible&lt;/em&gt;&lt;/strong&gt; adındaki bir değişkenin değeri ile ilişkilendirilmiş. script kısmında ise Vue örneğinin oluşturulması, el özelliğine div ile aynı ismin atanması ve data kısmında visible değişkeninin true başlangıç değeri tanımlanmasını görüyoruz.&lt;/p&gt;

&lt;p&gt;Browser’a gidip baktığımızda gördüğümüz şey &lt;strong&gt;&lt;em&gt;You can see this text!&lt;/em&gt;&lt;/strong&gt; yazısının ekranda olmasıdır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/declarativeRenderingConditionalsLoops/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/declarativeRenderingConditionalsLoops/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi Browser’da konsol kısmını açalım ve konsola &lt;strong&gt;&lt;em&gt;conditionalApp.visible = false&lt;/em&gt;&lt;/strong&gt; yazalım. Bu komutu çalıştırdığımızda ekrandaki yazının görünmez duruma geçtiğini göreceğiz. Vue.js bu şekilde reactive bir geliştirme imkanı sağladığını bizlere göstermiş oluyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/declarativeRenderingConditionalsLoops/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/declarativeRenderingConditionalsLoops/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Döngüler için de şöyle bir örneğimiz olsun:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loopApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;driver in drivers&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;conditionalApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;#loopApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;drivers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Michael Schumacher&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Felippe Massa&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Rubens Barichello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki örneğimizde loopApp isimli bir div’imiz var ve bu div içerisinde bir ordered list tanımı yapılmış. ol içerisinde ise tek bir li tag’i kullanılmış ve bu li tag’inde v-for özelliği kullanılmış. v-for özelliği sayesinde li tag’i kendini çoklayacaktır. v-for özelliğine &lt;strong&gt;&lt;em&gt;driver in drivers&lt;/em&gt;&lt;/strong&gt; değeri atanmış. Vue örneğinin oluşturulduğu kısma dikkat edersek data kısmında bir drivers arayı mevcut. driver in drivers ifadesi ile de drivers array’i içerisindeki her bir eleman driver değişkeni ile temsil edilmiş. li tag’inin içerisinde de element’in name özelliği ekrana yazdırılmış.&lt;/p&gt;

&lt;p&gt;Browser’dan kontrolümüzü yaptığımızda şöyle bir ekran göreceğiz:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/declarativeRenderingConditionalsLoops/4.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/declarativeRenderingConditionalsLoops/4.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Konsolumuz açık durumda iken &lt;strong&gt;&lt;em&gt;conditionalApp.drivers.push({name:’Fernando Alonso’});&lt;/em&gt;&lt;/strong&gt; komutunu çalıştıralım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/declarativeRenderingConditionalsLoops/5.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/declarativeRenderingConditionalsLoops/5.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Drivers array’ine yeni bir veri eklendi ve eklenen direkt olarak ekrana yansıdı.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım bu kadar arkadaşlar. Declarative Rendering, conditionals and loops konularını öğrenmiş olduk.&lt;/p&gt;

&lt;p&gt;Başka yazıda görüşenece kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/declarative-rendering-conditionals-loops/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/declarative-rendering-conditionals-loops/</guid>
        
        <category>vue js</category>
        
        <category>vue.js</category>
        
        <category>vue js introduction</category>
        
        <category>vue.js introduction</category>
        
        <category>vue cli</category>
        
        <category>installing vue cli</category>
        
        <category>how to install vue cli</category>
        
        <category>vue cli kurulumu</category>
        
        <category>vue cli nasıl kurulur</category>
        
        <category>vue project creating</category>
        
        <category>vue cli creating project</category>
        
        <category>how to create project with vue cli</category>
        
        <category>vue cli ile proje oluşturma</category>
        
        <category>vue proje oluşturma</category>
        
        
      </item>
    
      <item>
        <title>Vue.js Yazıları 2 - Vue CLI İle İlk Projemizi Oluşturalım</title>
        <description>&lt;p&gt;Vue CLI kurulumuna değindiğimiz &lt;a href=&quot;http://ilkgunel.github.io/blog/2020/introduction-to-vue-installing/&quot;&gt;önceki&lt;/a&gt; yazımızın ardından bu yazıda Vue CLI ile ilk projemizi oluşturacağız.&lt;/p&gt;

&lt;p&gt;Komut satırımızı açalım ve cd komutu ile projemizi oluştucağımız dizine geçelim. Akabinde &lt;strong&gt;&lt;em&gt;vue create vue-tutorials-project&lt;/em&gt;&lt;/strong&gt; komutunu çalıştıralım. Bu komut ile birlikte Vue CLI bizim için dizinimizde ayarları hazırlanmış bir proje oluşturacak.&lt;/p&gt;

&lt;p&gt;NOT: Komutu verdiğiniz andan sonra komut satırında hiçbir hareketlenme görmediğiniz süre uzamaya başlarsa bu anda CTRL + Z kombinasyonu uygulayıp komut satırını projeyi oluşturmaya başlamasına zorlayabilirsiniz. O geçen süre içerisinde bir takım update kontrolleri yapılıyor ve bağlantı kurmakta güçlük çeker ya da kuramaz ise süre epey fazla olabilir.&lt;/p&gt;

&lt;p&gt;Komutu çalıştırmanız akabinde Vue CLI bizden bir preset seçmemizi isteyecek. Biz default olan &lt;strong&gt;&lt;em&gt;babel, eslint&lt;/em&gt;&lt;/strong&gt; seçimi ile devam edeceğiz. Seçim oku bu seçenek üzerinde iken enter tuşuna basıp devam ediyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/creatingFirstProject/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/creatingFirstProject/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seçim sonrası Vue CLI gerekli plugin kurulumları, bağımlılık çekimleri ve proje oluşturma işlemlerini yapıyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/creatingFirstProject/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/creatingFirstProject/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi cd komutu ile oluşturduğumuz vue-tutorials-project dizinine geçelim ve akabinde &lt;strong&gt;&lt;em&gt;npm run serve&lt;/em&gt;&lt;/strong&gt; komutunu çalıştıralım. Komutun çalıştırılması akabinde bizim içim localhost:8080 adresinde uygulamanın ayağa kaldırıldığına dair bir mesaj göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/creatingFirstProject/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/creatingFirstProject/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;http://localhost:8080 adresine gittiğimizde Vue CLI ile oluşturduğumuz ilk projenin ayağa kalkmış olduğunu görebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/creatingFirstProject/4.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/creatingFirstProject/4.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım bu kadar arkadaşlar. Vue CLI ile ilk projemizi oluşturmuş olduk.&lt;/p&gt;

&lt;p&gt;Başka yazıda görüşenece kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/creating-first-project-with-vue-cli/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/creating-first-project-with-vue-cli/</guid>
        
        <category>vue js</category>
        
        <category>vue.js</category>
        
        <category>vue js introduction</category>
        
        <category>vue.js introduction</category>
        
        <category>vue cli</category>
        
        <category>installing vue cli</category>
        
        <category>how to install vue cli</category>
        
        <category>vue cli kurulumu</category>
        
        <category>vue cli nasıl kurulur</category>
        
        <category>vue project creating</category>
        
        <category>vue cli creating project</category>
        
        <category>how to create project with vue cli</category>
        
        <category>vue cli ile proje oluşturma</category>
        
        <category>vue proje oluşturma</category>
        
        
      </item>
    
      <item>
        <title>Vue.js Yazıları 1 - Vue.js Nedir? Vue CLI Kuralım</title>
        <description>&lt;p&gt;Merhabalar. Bu yazı ile birlikte Vue.js öğrenmeye başlayacağız. Hiç vue.js bilmeyen birisi olarak bu takip eden yazılar boyunca Vue.js öğrenimlerimi sizinle paylaşacağım.&lt;/p&gt;

&lt;p&gt;O halde başlayalım. Bu ilk yazımızın konusu Vue.js’in ne olduğu ve Vue.js’in daha pratik olunmasını ve hızlı hareket edilmesini sağlayan &lt;strong&gt;&lt;em&gt;Vue CLI&lt;/em&gt;&lt;/strong&gt; kurulumu olacak.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue.js Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vue.js Virtual DOM kullanan, web uarayüzleri geliştirilirken durumu basitleştirme amacında olan, açık kaynak kodlu bir JS Framework’üdür. Progressive Framework denilen basitliğin ve kendine yeterliliğin öne çıktığı bir tasarım felsefesine sahiptir.&lt;/p&gt;

&lt;p&gt;Bu arada Virtual DOM hakkında da kısaca bir iki şey söylemek gerek. Angular bir vi&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue CLI Kurulumu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vue CLI kurabilmek için öncelikle bilgisayarınızda npm ve node’un kurulu olması gerekmektedir. Benim bu yazı sırasında kuracağım en güncel Vue CLI versiyonu olan 4.1.2 versiyonu için Vue.js dökümantasyonu minimum 8.9 Node.js versiyonunun kurulu olması gerektiğini söylemekte ve 8.11.0 ile üzerindeki versiyonları ise tavsiye etmektedir.&lt;/p&gt;

&lt;p&gt;Bilgisayarımda 6.4.1 npm versiyonu ve 10.15.1 node versiyonu kurulu bulunmakta.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/introduction/1.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/introduction/1.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uygun Node versiyonu kurulu ise komut satırında &lt;strong&gt;&lt;em&gt;npm install -g @vue/cli&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırıyoruz ve komutun çalışmasının bitmesini bekliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/introduction/2.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/introduction/2.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Komutunun çalışmasının bitmesinin akabinde komut satırında &lt;strong&gt;&lt;em&gt;vue –version&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırdığımızda @vue/cli 4.1.2 yazısını görüyoruz ve Vue CLI’ın başarılı şekilde kurulduğunu anlıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/vue/introduction/3.PNG&quot;&gt;
    &lt;img src=&quot;/images/vue/introduction/3.PNG&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacağım bu kadar arkadaşlar. Vue CLI’ın kurulumundan bahsetmiş olduk.&lt;/p&gt;

&lt;p&gt;Başka yazıda görüşenece kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jan 2020 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2020/introduction-to-vue-installing/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2020/introduction-to-vue-installing/</guid>
        
        <category>vue js</category>
        
        <category>vue.js</category>
        
        <category>vue js introduction</category>
        
        <category>vue.js introduction</category>
        
        <category>vue cli</category>
        
        <category>installing vue cli</category>
        
        <category>how to install vue cli</category>
        
        <category>vue cli kurulumu</category>
        
        <category>vue cli nasıl kurulur</category>
        
        
      </item>
    
  </channel>
</rss>
