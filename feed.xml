<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>İlkay Günel - Blog</title>
    <description>İlkay Günel Blog</description>
    <link>http://ilkaygunel.com/</link>
    <atom:link href="http://ilkaygunel.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 29 Jan 2019 15:55:32 +0300</pubDate>
    <lastBuildDate>Tue, 29 Jan 2019 15:55:32 +0300</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Rest API Üzerinde Pagination İşlemi</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar, bu yazıda size Rest API üzerinde &lt;strong&gt;&lt;em&gt;Pagination&lt;/em&gt;&lt;/strong&gt; işleminin nasıl yapıldığını Spring Boot tabanlı bir proje ile anlatacağım.&lt;/p&gt;

&lt;p&gt;Bu yazıdaki uygulamanın kaynak kodlarına https://github.com/ilkgunel/RestPagination adresinden erişebilirsiniz.&lt;/p&gt;

&lt;p&gt;Kodlar üzerinden bu işlemin nasıl yapılabileceğine birlikte bakmadan önce veritabanındaki kayıtlara değinelim. Benim characters tablomda aşağıdaki görüntüdeki gibi 6 adet kayıt yer alıyor ve listeleme işlemleri için de
bu kayıtları kullanacağız.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/restPagination/4.png&quot;&gt;
&lt;img src=&quot;/images/restPagination/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi kodlara değinelim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Characters.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;CHARACTERS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Characters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCharacterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setCharacterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;characterId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCharacterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setCharacterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;characterName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCharacterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setCharacterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;characterSurname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Characters sınıfı bizim veritabanımızdaki Characters tablomuza karşılık gelen entity sınıfımızdır. Characters tablomuz da id, name, surname bilgilerini tutan bir tablodur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CharacterDao.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.repository.CrudRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.entity.Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CharacterDao&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CrudRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CharacterDao interface’imiz bizim Spring Data içerisindeki &lt;strong&gt;&lt;em&gt;CrudRepository&lt;/em&gt;&lt;/strong&gt; interface’ini kalıtarak oluşturduğumuz bir interface’dir. Kalıtma sırasında CrudRepository’e geçirilen parametrelerden
birisi bu sınıf hangi entity’e bağlı olacak, ikincisi de o entity’nin primary key alanının tipi nedir sorularına cevap olacak şekildedir. CharacterDao interface’ini biz Characters sınıfı için yazdık
ve Characters sınıfının primary key alanı da Long veri tipinde. Interface içerisinde de kendimiz custom bir metot tanımı yaptık. Bu custom metodun içinin doldurulması görevi Spring Data’ya aittir. Bizim
için Pageable tipinde parametre alan Page&lt;Characters&gt; tipinde veri dönen findAll metodu Spring Data tarafından oluşturulacaktır.&lt;/Characters&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CharacterService.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.entity.Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.exception.ResourceNotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.repository.CharacterDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.PageRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CharacterService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CharacterDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPaginatedCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;PageRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PageRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTotalPages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ResourceNotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Not Found Page Number:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CharacterService sınıfımıza az önce yazdığımız CharacterDao interface’ini @AutoWired ile inject ediyoruz. Akabinde int veri tipindeki pageNumber’ı parametre alan getPaginatedCharacters metodumuz
öncelikle gelen pageNumber parametresi ile PageRequest tipindeki pageable nesnesini oluşturuyor. &lt;strong&gt;&lt;em&gt;PageRequest.of(pageNumber - 1, 2);&lt;/em&gt;&lt;/strong&gt; ifadesineki birinci parametre gelen pageNumber parametresinin
1 azaltılmış halidir. Burada programlama dillerinde bildiğimiz klasik Array’in 0. gözden başlaması mantığı vardır. ikinci parametre ise ilgili page’de ne kadar kayıt getirileceğini söyleyen bir
parametredir. 2 değerini parametre olarak geçerek her sayfada 2 kayıt getirilmesini istemiş olduk.characterDao.findAll(pageable); ifadesi ile de gelen pageNumber’daki 2 kaydı çekip resultPage
nesnesine atıyoruz ve eğer parametre olarak gelen sayfa numarası bizim kayıtlarımızın 2’şerli şekilde gruplandığı sayfa sayısından büyük olursa ResourceNotFoundException hatası fırlatıyoruz. Eğer bir
sorun yok ise de resultPAge nesnesini dönüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CharacterRestController.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.entity.Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.service.CharacterService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CharacterRestController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CharacterService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;characters&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAllPaginated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@RequestParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pageNumber&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characterService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPaginatedCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CharacterRestController sınıfımız bir web servis isteğimizi karşılayacak metotları barındıracak olan sınıftır. Sınıf içerisinde az önce yazdığımız CharacterService sınıfımızı @Autowired ile Inject 
ediyoruz. @GetMapping(“characters”) ile &lt;strong&gt;&lt;em&gt;characters&lt;/em&gt;&lt;/strong&gt; path’ine gelecek GET isteğini findAllPaginated metodunun karşılayacağını söylüyoruz. /characters web servisi pageNumber URI’dan
RequestParam olarak geçirilerek çağırılacak bir web servistir. Gelen pageNumber servis sınıfındaki getPaginatedCharacters metoduna geçiriliyor ve o da bize Page&lt;Characters&gt; tipinde
sonucu dönüyor. Biz de onun içinden content'i dönüyoruz.&lt;/Characters&gt;&lt;/p&gt;

&lt;p&gt;Şimdi Application sınıfı üzerinden uygulamayı çalıştıralım ve Postman üzerinden uygulamamıza istekler gönderelim:&lt;/p&gt;

&lt;p&gt;http://localhost:8080/RestPagination/characters?pageNumber=1 adresine bir GET isteği gönderdiğim zaman request’teki 1 değerinden dolayı bana veritabanındaki ilk 2 kayıtı getirmiş olacak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/restPagination/1.png&quot;&gt;
&lt;img src=&quot;/images/restPagination/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Request’teki pageNumber’ı 3 yaptığım zaman da bana son 2 kaydı getirecek.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/restPagination/2.png&quot;&gt;
&lt;img src=&quot;/images/restPagination/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kayıt sayısını aşacak şekilde bir sayfa numarası gönderdiğim takdirde de bana 404 HTTP kodu ile bir hata dönecek. Örneğin sayfa numarasını 5 olarak gönderdiğimizde bu hatayı alacağız.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/restPagination/3.png&quot;&gt;
&lt;img src=&quot;/images/restPagination/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Bir sonraki yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Jan 2019 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2019/pagination-on-rest-api/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2019/pagination-on-rest-api/</guid>
        
        <category>spring rest api</category>
        
        <category>spring rest api get example</category>
        
        <category>spring rest api get örneği</category>
        
        <category>spring rest pagination</category>
        
        <category>spring rest sayfalama</category>
        
        <category>spring rest api pagination</category>
        
        <category>spring rest api sayfalama</category>
        
        <category>rest api pagination</category>
        
        <category>rest api sayfalama</category>
        
        
      </item>
    
      <item>
        <title>Angular 6 Ders 3 - Routing</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda Routing konusunu ele alacağız.&lt;/p&gt;

&lt;p&gt;Önceki yazılarda gördüğümüzden hatırlayacağımız şekilde bizim bir app.component’imiz ve app.module’ümüz vardı. Şimdi biz Angular CLI yardımı ile
create-employee ve list-employees adında iki component oluşturacağız ve Angular CLI app.module’ü bizim için güncelleyecek.&lt;/p&gt;

&lt;p&gt;Komut Satırı/Terminal üzerinden cd ile projemize geçtikten sonra &lt;strong&gt;&lt;em&gt;ng g c employee/create-employee –spec=false –flat=true&lt;/em&gt;&lt;/strong&gt; komutunu verelim.
Komuttaki ng Angular CLI’dan gelmekte, g generate, c component anlamındadır. employee/create-employee ifadesi ile de employee klasörü altında 
create-employee component’ini oluştur diyoruz. Şu an için unit testler ile ilgilenmediğimizden –spec=false dedik. –flat=true ile dedicated folder
oluşturma dedik.&lt;/p&gt;

&lt;p&gt;Akabinde bir de listeleme işlemi için component oluşturalım. Bunun için de &lt;strong&gt;&lt;em&gt;ng g c employee/list-employees –spec=false –flat=true&lt;/em&gt;&lt;/strong&gt; komutunu
verelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson3/1.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson3/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İki komut çıktısından görebileceğimiz gibi Component’lar oluşturuldu ve app.module güncellendi.&lt;/p&gt;

&lt;p&gt;Şimdi bu yazının konusu olan Routing işlemi için de bir Routing modülü oluşturalım. Yine komut satırı üzerinden
&lt;strong&gt;&lt;em&gt;ng g m app-routing –flat=true –module=app&lt;/em&gt;&lt;/strong&gt; komutunu verelim. Buradaki yukarıdaki komutlardan farklı olarak –module=app görmekteyiz, bu da 
oluşturulan yeni modülden app.module’ünden haberi olsun dememiz için kullanılmaktadır. Bu komutu verdiğimizde de yine app.module güncellenecektir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app.module.ts&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BrowserModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@angular/platform-browser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NgModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./app.component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreateEmployeeComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./employee/create-employee.component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListEmployeesComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./employee/list-employees.component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoutingModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./app-routing.module'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;NgModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;declarations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;CreateEmployeeComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ListEmployeesComponent&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;BrowserModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AppRoutingModule&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 component’i ve 1 modül’ü oluşturma işleminin ardından app.module.ts dosyamızın içeriği yukarıdaki halini alıyor. Oluşturduğumuz 2 component ve 1 modül
import edilmiş, declarations’da 2 component’i, imports’da 1 modülü görmekteyiz. &lt;strong&gt;&lt;em&gt;bootstrap&lt;/em&gt;&lt;/strong&gt; kısmında da AppComponent’i görüyoruz ki bu da uygulama
ayağa kalkarken AppComponent ile birlikte kalkacak demektir.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Şimdi sırada oluşturduğumuz iki component’i ve routing modülünü kullanma işi var. app-routing.module.ts dosyasını açalım ve aşağıdaki gibi güncelleyelim:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AppRoutingModule.ts&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NgModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RouterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@angular/router'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListEmployeesComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./employee/list-employees.component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreateEmployeeComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./employee/create-employee.component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appRoutes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Routes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'list'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListEmployeesComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'create'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CreateEmployeeComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pathMatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'full'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;NgModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;RouterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appRoutes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RouterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoutingModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki dosyayı adım adım inceleyecek olursak:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ListEmployeesComponent ve CreateEmployeeComponent componentlerini import ettik.&lt;/li&gt;
  &lt;li&gt;appRoutes ismindeki ve Routes tipindeki constant’a  path tanımlamaları yapılmış bir array atadık. Array içerisinde list path’ine gelen isteklerin 
ListEmployeesComponent’inine, create path’ine gelen isteklerin CreateEmployeeComponent’ine, default path’in de list path’ine redirect edilmesini söyledik.&lt;/li&gt;
  &lt;li&gt;@NgModule içerisinde RouterModule.forRoot(appRoutes) ifadesi ile oluşturduğumuz appRoutes’u kayda geçirdik (import ettik), RouterModule sınıfını da 
az sonra göreceğimiz &lt;router-outlet&gt;&lt;/router-outlet&gt; tag’inin tanınması için kullanacağız.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;app.component.html&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar navbar-expand-lg navbar-light bg-light&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse navbar-collapse&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navbar-nav mr-auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item active&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;routerLinkActive=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;routerLink=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;List&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;routerLinkActive=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;routerLink=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Create&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;router-outlet&amp;gt;&amp;lt;/router-outlet&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;app.component.html dosyamız bizim uygulamamızı ilk oluşturduğumuzda gelen html dosyamızdı. Diğer oluşturduğumuz component’lere ve dolayısı ile o component’lere
ait HTML dosyalarını kullanma işlemini de bu HTML dosyası üzerinden yapacağız. Dosyamız içerisinde iki adet a tag’i bulunmakta. routerLinkActive özelliği
aktif CSS sınıfı ataması yapılmak için kullanılıyor. routerLink özelliği de a tag’inin hangi component’le ilişkilendirileceğini söylüyor.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;router-outlet özelliğine gelecek olursak bizim tanımladığımız a tag’lerine tıklandığında çağıralacak component’lere ait html’ler bu router-outlet tag’inin
içerisinde yayınlanacak. Tıklandığında dinamik olarak değişim gerçekleşecektir. Biz List ya da Create butonuna tıkladığımızda onlara ait HTML sayfaları
getirilip app.component.html içindeki router-outlet tag’inin içinde yayınlanıyor.&lt;/p&gt;

&lt;p&gt;ng s -o komutunu çalıştırdımızda uygulama default list path’i ile çalışıyor olacaktır. Bu nedenle adres çubuğunda http://localhost:4200/list adresini ve
sayfa açıldığında da &lt;strong&gt;&lt;em&gt;list-employees works!&lt;/em&gt;&lt;/strong&gt; yazısını göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson3/2.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson3/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create linkine tıkladığımızda da http://localhost:4200/create adresini adres çubuğunda görecek ve &lt;strong&gt;&lt;em&gt;create-employee works!&lt;/em&gt;&lt;/strong&gt; yazısını ekranda göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson3/3.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson3/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Bir sonraki yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Jan 2019 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2019/angurlar-6-lesson-3-routing/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2019/angurlar-6-lesson-3-routing/</guid>
        
        <category>angular 6 web service</category>
        
        <category>angular 6 rest get</category>
        
        <category>angular 6 rest post</category>
        
        <category>angular 6 rest</category>
        
        <category>angular 6 calling web service</category>
        
        <category>angular 6 giriş</category>
        
        <category>angular 6 tutorials</category>
        
        <category>angular 6 hello world</category>
        
        <category>angular 6 dersleri</category>
        
        <category>angular 6 kaynak</category>
        
        <category>angular 6 türkçe kaynak</category>
        
        <category>angular 6 türkçe dersleri</category>
        
        <category>angular 6 bootstrap</category>
        
        <category>angular 6 installing bootstrap</category>
        
        <category>angular 6 install bootstrap</category>
        
        <category>angular 6 how to install bootstrap</category>
        
        <category>angular 6 routing</category>
        
        
      </item>
    
      <item>
        <title>Heroku'da Java Web Uygulamamızı Çalıştıralım</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda size Heroku’ya uygulamamızı nasıl kuracağımız, Heroku üzerinde uygulamamızı çalıştırmak için ne yapmamız
gerektiğini anlatacağım. Ben bu yazıyı anlatmak için basit bir proje yazdım ve anlatımımı o proje üzerinden yapacağım.&lt;/p&gt;

&lt;p&gt;Benim http://localhost:8080/herokudemoproject/records adresi üzerinde çalışan ve GET isteklerine aşağıdaki gibi cevap veren bir web servisim var:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/1.png&quot;&gt;
&lt;img src=&quot;/images/heroku/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ben uygulamayı Herokuya deploy edip bu GET servisini gerçek bir ortamda çalıştıracağım. Bunun için ilk ihtiyacımız olan şey bir &lt;strong&gt;&lt;em&gt;Procfile&lt;/em&gt;&lt;/strong&gt; dosyasıdır. 
Herhangiz bir uzantısı olmayan, proje klasörümüzün kök dizininde bulunan,
sadece adı &lt;strong&gt;&lt;em&gt;Procfile&lt;/em&gt;&lt;/strong&gt; olan dosya içeriğinde tek satır bir metin tutmaktadır, o da şöyledir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;web: java -jar -Dserver.port=$PORT target/HerokuDemoProject-1.0.0.jar&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki ifade aslında bizim lokalde bir Spring Boot projesini main class üzerinden çalıştırdığımızda yapılan iştir. pom.xml dosyasında herhangi bir
packaging-type yok, bu da uygulamanın derlenmesi (mvn clen install) sonucunda bir jar’ın ortaya çıkması demektir. java -jar isim.jar komutu ile de bu jar’ı 
çalıştırmış oluruz. &lt;strong&gt;&lt;em&gt;-Dserver.port=$PORT&lt;/em&gt;&lt;/strong&gt; ifadesi ile biz bir Java parametresi geçmiş olduk ve bir port ataması yaptırdık. Komutun en başındaki
&lt;strong&gt;&lt;em&gt;web:&lt;/em&gt;&lt;/strong&gt; ifadesi de Heroku tarafında uygulamanın bir web uygulaması olduğunu anlaması ve bir web dyno’su ayağa kaldırması için kullandığımız komuttur.&lt;/p&gt;

&lt;p&gt;Akabinde kaynak kodları ile beraber uygulamayı Github’a yüklemek gerekmektedir (ben bu yazı için Github üzerinden anlatmayı tercih ettim). 
Ben uygulamayı https://github.com/ilkgunel/HerokuDemoProject adresine yükledim.
Uygulamayı Procfile dosyası ile beraber Github üzerinde paylaştıktan sonra https://www.heroku.com/ adresi üzerinden Heroku’ya ücretsiz kayıt olabilirsiniz. 
Bizim çalıştıracağımız uygulama da tamamen ücretsiz bir şekilde çalışacaktır.&lt;/p&gt;

&lt;p&gt;Kayıt işleminizi gerçekleştirdikten sonra https://dashboard.heroku.com/apps adresindenki Create New App butonuna tıklayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/2.png&quot;&gt;
&lt;img src=&quot;/images/heroku/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bir sonraki gelen ekranda &lt;strong&gt;&lt;em&gt;App name&lt;/em&gt;&lt;/strong&gt; alanına istediğimiz bir değeri girebiliriz fakat Heroku girdiğimiz değerin uygun olup olmadığını da kontrol 
edecektir. Ben &lt;strong&gt;&lt;em&gt;herokudemoproject&lt;/em&gt;&lt;/strong&gt; ismini verdim. &lt;strong&gt;&lt;em&gt;Choose a region&lt;/em&gt;&lt;/strong&gt; bölümünden de Europe seçelim ve Create App butonuna tıklayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/3.png&quot;&gt;
&lt;img src=&quot;/images/heroku/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Gelen bir sonraki ekranda &lt;strong&gt;&lt;em&gt;Deployment method&lt;/em&gt;&lt;/strong&gt; seçeceğiz. Az önce de söylediğim gibi ben bu yazı için Github üzerinden anlatmayı seçtim, o yüzden
Deployment method kısmından Github’ı seçiyorum. Bu kısımda ben daha Heroku hesabımı Github hesabıma bağladığım için direk Github hesabım göründü fakat
siz bu adıma geldiğinizde Heroku sizden Gthub hesabınızı bağlamanızı isteyecek ve çok basit bir işlem ile Heroku hesbaınız ve Github hesabınız birbirine
bağlanmış olacak. Search butonunun hemen solundaki text alanına projemin Github üzerindeki repo adını giriyorum. Github üzerinde projemin repo adı
&lt;strong&gt;&lt;em&gt;HerokuDemoProject&lt;/em&gt;&lt;/strong&gt; şeklinde. Ardından Search butonuna tıklayıp altta gelen search sonucundan da Connect butonuna tıklıyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/4.png&quot;&gt;
&lt;img src=&quot;/images/heroku/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu adımdan sonra sayfanın en altında &lt;strong&gt;&lt;em&gt;Manual deploy&lt;/em&gt;&lt;/strong&gt; adında bir alan açılacak. O alanda yer alan &lt;strong&gt;&lt;em&gt;Deploy Branch&lt;/em&gt;&lt;/strong&gt; butonuna tıklayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/5.png&quot;&gt;
&lt;img src=&quot;/images/heroku/5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Bu butona bastığımızda Heroku üzerinde bizim için uygulama derlenecek, derleme sonucu orataya çıkan jar Procfile dosyasındaki komut ile çalıştırılacak,
bu da uygulamanın kurulumunu ve çalıştırılmasını sağlayacak. Eğer sorunsuz bir şekilde derleme ve deploy işlemi gerçekleşirse 4 yeşil tik ve View
butonunu göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/6.png&quot;&gt;
&lt;img src=&quot;/images/heroku/6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi uygulamamız &lt;strong&gt;&lt;em&gt;verdiğimizAppName&lt;/em&gt;&lt;/strong&gt;.herokuapp.com adresi üzerinde çalışmaya başladı. Biz de App Name olarak herokudemoproject’i belirlediğimiz 
için https://herokudemoproject.herokuapp.com adresi üzerinde çalışacak.&lt;/p&gt;

&lt;p&gt;Şimdi Postman üzerinden https://herokudemoproject.herokuapp.com/herokudemoproject/records adresine bir GET isteği gönderelim. Aşağıdaki çıktıda 
görebileceğimiz gibi localhosttaki sonucun aynısını Heroku üzerinde çalışan bir ortamda da aldık ve uygulamayı çalıştırdık.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/heroku/7.png&quot;&gt;
&lt;img src=&quot;/images/heroku/7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Başka yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Jan 2019 20:30:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2019/deoploy-java-web-application-to-heroku/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2019/deoploy-java-web-application-to-heroku/</guid>
        
        <category>heroku</category>
        
        <category>deploy app to heroku</category>
        
        <category>deploy java app to heroku</category>
        
        <category>deploy hava application to heroku</category>
        
        <category>how to deploy an application to heroku</category>
        
        <category>how to deploy a java application to heroku</category>
        
        <category>herokuya uygulama nasıl deploy edilir</category>
        
        <category>herokuya uygulama nasıl yüklenir</category>
        
        <category>herokuya java uygulaması nasıl yüklenir</category>
        
        <category>heroku üzerinde uygulama çalıştırma</category>
        
        
      </item>
    
      <item>
        <title>Angular 6 Ders 2 - Angular İçin BootStrap Kurulumu</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda Angular için Bootstrap kurulumunu ele alacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap yazılım geliştiricilerine responsive yani tüm cihazlarla uyumlu şekilde tasarım yapılmasını sağlayan açık kaynak kodlu bir CSS 
framework’üdür. Barındırdığı bileşenler sayesinde hem görünüm hem uyumluluk konusunda avantajlar sağlar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Angular İçin Bootstrap Nasıl Kurulur?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Angular için Bootstrap kurulumunda da yine npm’den yardım alacağız. Öncelikle cd komutu ile ilk yazıda oluşturduğumuz Angular6Project içine geçelim
ve &lt;strong&gt;&lt;em&gt;npm install bootstrap@4.2.1 jquery –save&lt;/em&gt;&lt;/strong&gt; komutu ile Bootstrap’ın bu yazı yazılırkenki en güncel sürümü olan 4.2.1 sürümünün kurulumu
gerçekleştirelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson2/1.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson2/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Akabinde Angular6Project dizinimizde yer alan package.json açalım ve &lt;strong&gt;&lt;em&gt;dependencies&lt;/em&gt;&lt;/strong&gt; alanında yer alan &lt;strong&gt;&lt;em&gt;bootstrap&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;jquery&lt;/em&gt;&lt;/strong&gt; 
kütüphanelerinin düzgün versiyon ile kurulup kurulmadığını kontrol edelim. Aşağıdaki ekran görüntüsünde görebileceğimiz gibi Bootstrap bende 4.2.1
versiyonu ile ve jquery de 3.3.1 versiyonu ile kurulmuş durumda.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson2/2.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson2/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap’ın Angular CLI Konfigürasyonu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap kurulumunun ardından projemizde kullanabilmek üzere konfigüre etmemiz gerekmetedir. Bunun için de proje dizinimizde yer alan package.json
dosyası üzerinde değişiklik yapmamız gerekmektedir. package.json dosyasını açtığımızda içerisinde &lt;strong&gt;&lt;em&gt;styles&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;scripts&lt;/em&gt;&lt;/strong&gt; alanları mevcuttur.
Biz ilgili alanları aşağıdaki gibi değiştirelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&quot;styles&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
              &lt;span class=&quot;s1&quot;&gt;&quot;src/styles.css&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s1&quot;&gt;&quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
              &lt;span class=&quot;s1&quot;&gt;&quot;node_modules/jquery/dist/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s1&quot;&gt;&quot;node_modules/bootstrap/dist/js/bootstrap.min.js&quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bootstrap’a ait CSS ve JS dosyalarının konfigürasyona eklenmesinin ardından app.component.html dosyasını açalım ve aşağıdaki gibi 
yeni bir li elementi ekleyim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Bootstrap&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki kodda basitçe bir button elemanı ekliyoruz ve butonun CSS class özelliğine Bootstrap’dan gelen btn ve btn-primary değerlerini atıyoruz. Şimdi
ng s -o komutu ile uygulamamızı çalıştıralım. Aşağıdaki ekran görüntüsünden görebileceğimiz gibi eklenen buton Bootstrap’ın CSS özelliklerini kullanmış.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson2/3.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson2/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Bir sonraki yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Jan 2019 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2019/installing-bootstrap-for-angular/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2019/installing-bootstrap-for-angular/</guid>
        
        <category>angular 6 web service</category>
        
        <category>angular 6 rest get</category>
        
        <category>angular 6 rest post</category>
        
        <category>angular 6 rest</category>
        
        <category>angular 6 calling web service</category>
        
        <category>angular 6 giriş</category>
        
        <category>angular 6 tutorials</category>
        
        <category>angular 6 hello world</category>
        
        <category>angular 6 dersleri</category>
        
        <category>angular 6 kaynak</category>
        
        <category>angular 6 türkçe kaynak</category>
        
        <category>angular 6 türkçe dersleri</category>
        
        <category>angular 6 bootstrap</category>
        
        <category>angular 6 installing bootstrap</category>
        
        <category>angular 6 install bootstrap</category>
        
        <category>angular 6 how to install bootstrap</category>
        
        
      </item>
    
      <item>
        <title>Angular 6 Ders 1 - Giriş Ve Kurulum</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Günümüz yazılım dünyasında bana göre önemi ve popülerliği giderek artan bir JS framework’ü olan Angular’ın 6. versiyonunu kendimi geliştirmek ve ilerisi için yatırım yapmak adına öğrenmeye
başladım. Bu yazı ile beraber de öğrendiklerimi sizlerle paylaşmaya başlayacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Angular 6 Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Angular 6, Angular 2 ile birlikte gelen TypeScript yapısının devam ettirildiği bir Client Side MVC yazılımıdır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Başlamak İçin Gereksinimler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İlk olarak bilgisayarımızda &lt;strong&gt;&lt;em&gt;node&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;npm&lt;/em&gt;&lt;/strong&gt;‘in kurulu olması gerekmektedir arkadaşlar.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mac OS X ortamında &lt;strong&gt;brew install node&lt;/strong&gt; komutu ile kurulumları gerçekleştirebilirsiniz.&lt;/li&gt;
  &lt;li&gt;Linux tabanlı işletim sistemleri için ilgili paket yöneticinizin kurulumunu bulmanız gerekecektir.&lt;/li&gt;
  &lt;li&gt;Windows ortamı için ise https://nodejs.org/en/#download adresinden kurulum dosyasını indirip kurmanız yeterlidir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kurulumdan sonra Terminal’e/Komut Satırı’na &lt;strong&gt;node -v&lt;/strong&gt; ve &lt;strong&gt;npm -v&lt;/strong&gt; komutlarını girip aşağıdakine benzer çıktı alıyorsanız kurulum tamamlanmış demektir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/1.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Node.js kurulumunun ardından Angular 6 tabanlı bir projeler oluşturabilmek için bilgisayarımıza Angular CLI’ın 6.x.x versiyon numaralı
sürümünü kurmamız gerekecek. Bu yazıyı yazdığım gün itibari ile Angular 7’nin karalı sürümleri yayınlanmaya başlamıştı ve Angular
6’nın da son sürümü 6.2.8’di. Angular CLI’ın kurulumu için de terminalde/komut satırında &lt;strong&gt;&lt;em&gt;npm install -g @angular/cli@6.2.8&lt;/em&gt;&lt;/strong&gt;
yazıp çalıştırmamız gereklidir arkadaşlar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/2.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Angular CLI’ın kurulumunun ardından doğru versiyonun düzgün şekilde kurulup kurulmadığını öğrenmek için de terminalde/komut 
satırında &lt;strong&gt;&lt;em&gt;ng -v&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırarak kontrol edebilirsiniz. Aşağıdaki çıktıda görebileceğiniz gibi Angular CLI versiyonu
6.2.8 olarak gözükmekte.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/3.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Uygulamayı Çalıştıralım Ve Değişiklik Yapalım&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Angular CLI kurulumunun ardından şimdi yeni bir Angular 6 projesi oluşturma adımına geçebiliriz.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;ng new projectName -d&lt;/em&gt;&lt;/strong&gt; komutu ile oluşturulacak projede hangi dosyaların yer alacağını listeleyebiliriz. Bu komut projeyi oluşturmayacak, sadece
listeleme yapacaktır. Aşağıdaki ekran görüntüsünde bu komutun çıktısını göreceğiz.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;ng new projectName –skip-tests&lt;/em&gt;&lt;/strong&gt; komutu ile yukarıda oluşturulacak dosyaları listelettiğimizde görünen &lt;strong&gt;&lt;em&gt;spec&lt;/em&gt;&lt;/strong&gt; yani test için kullanılacak
dosyaların oluşumunu şimdilik atlayabiliriz. Bu komut projeyi fiziksel dizinimizde oluşturacaktır.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ng new projectName -d komutunun çıktısı içerisinde görebileceğiniz gibi spec isimli dosyalar da mevcut ve onlar test için varlar:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/4.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ng new projectName –skip-tests komutunun çıktısı:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/5.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Projemiz başarı ile oluşturulduktan sonra cd komutu ile projemizin içine girelim ve projemizi çalıştırmak için &lt;strong&gt;&lt;em&gt;ng serve –open&lt;/em&gt;&lt;/strong&gt; ya da bu komuta
karşılık gelen &lt;strong&gt;&lt;em&gt;ng s -o&lt;/em&gt;&lt;/strong&gt; komutunu terminalimizde çalıştıralım. Bu komuttaki ng Angular CLI kurulumundan komut, s komutu serve yani sunucu üstünde
bu projeyi çalıştır, –open (o) komutu da projeyi tarayıcı üzerinde aç demektir.&lt;/p&gt;

&lt;p&gt;ng s -o komutunun çıktısı:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/6.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Komut başarı ile çalıştığında localhost:4200 adresi üzerinde projemiz açılıyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/7.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ben bu yazılar sırasında Angular kodlarını yazmak ve düzenlemek için Visual Studio Code kullanacağım. Siz de Visual Studio Code uygulamasında Open 
Folder diyerek az önce oluşturduğumuz Angular6Project klasörünü açabilirsiniz.&lt;/p&gt;

&lt;p&gt;Projeyi Visual Studio Code üzerinde açtıktan sonra src klasörünün altında bir app klasörü göreceksiniz ve onun içinde de &lt;strong&gt;&lt;em&gt;app.component.html&lt;/em&gt;&lt;/strong&gt;
adında bir dosya göreceksiniz. Bu dosya az önce localhost:4200 üzerinde projeyi çalıştırdığımızda gördüğümüz sayfadır arkadaşlar. Dosyayı açtığınızda 
hemen yukarıda şu kod parçacığını göreceksiniz:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    Welcome to {{ title }}!
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tarayıcımızda gördüğümüz &lt;strong&gt;&lt;em&gt;Welcome to Angular6Project!&lt;/em&gt;&lt;/strong&gt; satırı buradan gelmektedir. İki süslü parantezler arasındaki title ise Angular’ın ts dosylarından
gelmektedir ve buna &lt;strong&gt;&lt;em&gt;interpolation&lt;/em&gt;&lt;/strong&gt; denmektedir. Şimdi buradaki Welcome to ifadesini &lt;strong&gt;&lt;em&gt;Welcome my friend to&lt;/em&gt;&lt;/strong&gt; olarak değiştirelim ve title olduğu
gibi kalsın. Değişimden sonra sadece dosyayı kaydedelim ve tarayıcıyı kontrol edelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/8.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/8.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Gördüğümüz gibi sayfa kendiliğinden değişip yeniden yüklendi. Biz projeyi çalıştırdıktan sonra proje watch modda çalışıyor ve herhangi bir değişim olduğu
anda yeniden derlenip yükleniyor, bizim dosyadaki değişiklikleri kaydetmekten başka yapmamız gereken bir şey yok.&lt;/p&gt;

&lt;p&gt;Az önce bahsettiğim gibi title ifadesi ts dosyasından geliyor bu dosya da yine src/app altındaki app.component.ts dosyasıdır. Dosyayı açtığınızda 
&lt;strong&gt;&lt;em&gt;export class AppComponent&lt;/em&gt;&lt;/strong&gt; satırının hemen altında title parametresine &lt;strong&gt;&lt;em&gt;Angular6Project&lt;/em&gt;&lt;/strong&gt; değerinin atandığını göreceksiniz. Biz şimdi
Angular6Project değerini &lt;strong&gt;&lt;em&gt;Angular6Project Tutorial&lt;/em&gt;&lt;/strong&gt; değeri ile değiştirip dosyayı kaydedelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angular6/lesson1/9.png&quot;&gt;
&lt;img src=&quot;/images/angular6/lesson1/9.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tarayıcıyı kontrol ettiğimizde yine yaptığımız değişikliğin direk yüklendiğini görmekteyiz.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Angular 6’ya giriş yapmış olduk. Bir sonraki yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Jan 2019 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2019/angular-6-lesson-1/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2019/angular-6-lesson-1/</guid>
        
        <category>angular 6 web service</category>
        
        <category>angular 6 rest get</category>
        
        <category>angular 6 rest post</category>
        
        <category>angular 6 rest</category>
        
        <category>angular 6 calling web service</category>
        
        <category>angular 6 giriş</category>
        
        <category>angular 6 tutorials</category>
        
        <category>angular 6 hello world</category>
        
        <category>angular 6 dersleri</category>
        
        <category>angular 6 kaynak</category>
        
        <category>angular 6 türkçe kaynak</category>
        
        <category>angular 6 türkçe dersleri</category>
        
        
      </item>
    
      <item>
        <title>Factory Design Pattern Ve Java İle Örneklemesi</title>
        <description>
</description>
        <pubDate>Wed, 10 Oct 2018 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2018/factory-design-pattern-example-with-java/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2018/factory-design-pattern-example-with-java/</guid>
        
        <category>angular 6 web service</category>
        
        <category>angular 6 rest get</category>
        
        <category>angular 6 rest post</category>
        
        <category>angular 6 rest</category>
        
        <category>angular 6 calling web service</category>
        
        <category>angular 6 giriş</category>
        
        <category>angular 6 tutorials</category>
        
        <category>angular 6 hello world</category>
        
        <category>angular 6 dersleri</category>
        
        <category>angular 6 kaynak</category>
        
        <category>angular 6 türkçe kaynak</category>
        
        <category>angular 6 türkçe dersleri</category>
        
        
      </item>
    
      <item>
        <title>Factory Design Pattern Ve Java İle Örneklemesi</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda sizlere Factory Design Pattern’ı ve Java ile örneklemesini anlatmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Factory Design Pattern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dünyadaki OOP yönelimli programlama dillerinde en çok kullanılan Design Pattern olduğu tahmin edilen Factory Design Pattern nesne üretimi konusunda
nesneye ihtiyacı olan kodun direkt olarak kendisi new operatörü ile oluşturması yerine 	bir factory mekanizmasından yeni bir nesne talep etmesi mantığı üzerine 
kuruludur. Bu factory mekanizması da abstraction kullanarak işlemini halletmeyi hedefler. Aşağıda yapacağımız örnekle bu açıklamayı pekiştirelim.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-format=&quot;fluid&quot; data-ad-layout-key=&quot;-fb+5w+4e-db+86&quot; data-ad-client=&quot;ca-pub-0980023289791742&quot; data-ad-slot=&quot;8632723594&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shape.java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shape bizim interface’imiz ve içerisinde implement edilmek üzere bir &lt;strong&gt;&lt;em&gt;draw()&lt;/em&gt;&lt;/strong&gt; metodu tutuyor.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Circle, Rectangle ve Square Sınıfları&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Circle, Rectangle ve Square sınıfları Shape arabirimini uygulayan ve içerisinde draw() metodunu kendilerine göre override eden sınıflardır.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Inside Circle::draw() method.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Inside Rectangle::draw() method.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Square&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Inside Square::draw() method.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;ShapeEnum.java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shape arabirimini implente etmiş sınıflarımızı bir de ShapeEnum enum’ı içerisinde tutuyoruz. Bu enum’ı oluşturmadaki amaç factory mekanizması için çalışacak kodun SOLID
prensiplerinden Open/Closed prensibine yani direk iş yapan kodda değişiklik yapımaması fakat kodun da geliştirmeye açık olması prensibine uygun olmasını sağlamaktır.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShapeEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;RECTANGLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;SQUARE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CIRCLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShapeEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shapeName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getShapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getClassType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;ShapeFactory.java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ShapeFactory sınıfımız bizim Factory Design Pattern mekanizmamızı üstlenen kısımdır. Kod içerisinde az önce bahsettiğim gibi Open/Closed prensibine uygun olsun 
diye &lt;strong&gt;&lt;em&gt;getShape(…)&lt;/em&gt;&lt;/strong&gt; metodu ShapeEnum tipinde bir parametre alıyor.getShape metodu aynı zamanda yine Open/Closed prensibine uygun olması amacı ile
Reflection’dan da yararlanılarak yazılmıştır. Aksi takdir de if-else’ler ile nesne oluşturup döndürümü gerekecekti.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShapeFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShapeEnum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getShapeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getConstructors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;FactoryPatternDemo.java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;FactoryPatternDemo sınıfımız da bizim main metodumuzu koşturduğumuz sınıfımız. Koddan göreceğimiz üzere elde ettiğimiz bir ShapeFactory nesnesi üzerinden getShape
metodu çağırımlarında ShapeEnum enum’ındaki alanlardan birisini parametre olarak geçiriyoruz ve akabinde draw() metodunu çağırıyoruz. Nesne elde edimi
(circle,rectangle,square nesneleri) direkt olarak new operatörü ile değil ShapeFactory üzerinden yapılıyor ve böylece Factory Design Pattern kullanılmış oluyor.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;designpatterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FactoryPatternDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ShapeFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShapeEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CIRCLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShapeEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RECTANGLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;Shape&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;square&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getShape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShapeEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SQUARE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu yazıda anlatacağım da bu kadar arkadaşlar. Factory Design Pattern’ın ne olduğunu öğrenmiş ve Java ile örneklemiş olduk.&lt;/p&gt;

&lt;p&gt;Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p&gt;Görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Yazıda kullandığım 2 kaynak:
https://www.tutorialspoint.com/design_pattern/factory_pattern.htm
https://kodcu.com/2014/08/design-patterns-1-giris-factory-ve-abstract-factory-tasarim-kaliplari-2/&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Oct 2018 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2018/factory-design-pattern-example-with-java/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2018/factory-design-pattern-example-with-java/</guid>
        
        <category>factory design pattern</category>
        
        <category>factory design pattern with java</category>
        
        <category>factory design pattern example with java</category>
        
        <category>java generic class</category>
        
        <category>java generic</category>
        
        <category>how to use java generic class</category>
        
        <category>java generic nedir?</category>
        
        <category>java generic class nasıl kullanılır</category>
        
        <category>Singleton pattern</category>
        
        <category>Singleton pattern in java</category>
        
        <category>utc date in java</category>
        
        <category>utc date time in java</category>
        
        <category>utc date time in java 8</category>
        
        
      </item>
    
      <item>
        <title>Schedules Tasks With Spring Boot</title>
        <description>
</description>
        <pubDate>Sat, 04 Aug 2018 00:00:00 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2018/schedules-tasks-with-spring-boot/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2018/schedules-tasks-with-spring-boot/</guid>
        
        
      </item>
    
      <item>
        <title>Solid Prensipleri Nelerdir</title>
        <description>
</description>
        <pubDate>Sat, 30 Jun 2018 00:00:00 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2018/solid-prensipleri-nelerdir/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2018/solid-prensipleri-nelerdir/</guid>
        
        
      </item>
    
      <item>
        <title>Member Rest Api Project</title>
        <description>
</description>
        <pubDate>Sat, 09 Jun 2018 00:00:00 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2018/member-rest-api-project/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2018/member-rest-api-project/</guid>
        
        
      </item>
    
  </channel>
</rss>
