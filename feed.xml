<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>İlkay Günel - Blog</title>
    <description>İlkay Günel Blog</description>
    <link>http://ilkaygunel.com/</link>
    <atom:link href="http://ilkaygunel.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 10 Jun 2017 16:37:04 +0300</pubDate>
    <lastBuildDate>Sat, 10 Jun 2017 16:37:04 +0300</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Maven Yazıları 1 - Giriş</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazı ile birlikte birkaç yazı yazacağım Maven yazılarına başlamış oluyoruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maven Nedir&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maven Apache Vakfı tarafından geliştirilen ve projenin inşası ile yönetimini kolaylaştırmayı amaçlayan bir araçtır. İlk olarak dışarıya kapalı şekilde Apache’nin bir başka projesi olan
Jakarta Alexandria projesinin inşa aşamalarının basitleştirme adına geliştirilmeye başlanmıştır fakat ilerleyen zamanlarda Apache Vakfı bu yazılımı açık kaynak olarak tüm yazılımcılara
sunmuştur.&lt;/p&gt;

&lt;p&gt;Maven projenin ihtiyaç duyduğu bağımlılıkları
yönetme vazifesini üzerine alır ve proje geliştiricileri arasında muhtemel bağımlılık farklarından ortaya çıkacak çakışmaları veyahut olmayan bağımlılık problemlerini ortadan kaldırır.
Ayrıca Maven projenin IDE bağımlı geliştirilmesinin önüne geçmeye çalışır. Teoride Maven projenin IDE bağımsız geliştirilmesini amaçlar fakat pratikte geliştirme aşamasında kullanılan 
diğer araçlar projenin yine IDE bağımlı olmasına sebep olabilir.&lt;/p&gt;

&lt;p&gt;Ayrıca Meven’ın üzerine aldığı diğer sorumluluk da projenin versiyon kontrolü’nü basitize etmek ve kolaylaştırmaktır.&lt;/p&gt;

&lt;p&gt;Yani en basit tabiri ile proje geliştirme sürecini basitize etmeye amaçlayan bir araçtır.&lt;/p&gt;

&lt;p&gt;Maven’dan önceleri yine Apache’nin bir başka build tool’u olan ANT kullanılıyordu fakat Maven’ın popülerleşmesi ile ANT kullanımı da bir hayli azalmış.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sistem Gereksinimleri ve Kurulum Aşaması&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maven cross-paltform bir araç olmasındna ötürü onu Windows, Mac OS ve GNU/Linux işletim sistemlerinde kullanabilirsiniz. Fakat öncelikli olarak bilgisayarınızda JDK’nın (JRE değil buraya dikkat,
JDK olacak) kurulu olması gerekmektedir. Maven’ın 3.3 ve sonraki sürümleri bilgisayarınızda JDK 1.7 ve üzerinin kurulu olmasını istemektedir. Yazılarımız boyunca maven 3.3 üzerini kullanacağımız
için sisteminizde JDK 1.7 veya üzeri bir JDK olduğundan emin olmanız gerekmektedir. Bilgiyarınız konsol/terminal ekranında &lt;strong&gt;&lt;em&gt;java -version&lt;/em&gt;&lt;/strong&gt; yazmanız halinde size kurulu olan JDK bilgisini
verecektir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/1.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bende JDK 1.8 kurulu olduğu için JDK taraflı bir engel yok.&lt;/p&gt;

&lt;p&gt;Maven memory açısından herhangi bir minimum gereklilik tutmuyor.&lt;/p&gt;

&lt;p&gt;Disk kapasitesi olarak kurulum için 10 MB bir disk alanının olması gerekiyor fakat proje geliştirme aşamasında Maven bizim için birçok kütüphane indirip koyacağı için Maven’ın sitesinde
en azından 500 MB bir disk alanının Maven Local Repo için gerekli olduğu bildiriliyor.&lt;/p&gt;

&lt;p&gt;Son olarak da Maven kurulmadan önce JAVA_HOME parametresinin işletim sisteminde ayarlanmış olması gerekiyor. Eğer ayarlanmış değilse bunu araştırıp ayarlayıp yazıya o şekilde devam etmelisiniz.&lt;/p&gt;

&lt;p&gt;Kurulum işlemleri de şu şekilde:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Windows İçin&lt;/strong&gt;: &lt;a href=&quot;https://maven.apache.org/download.cgi&quot;&gt;https://maven.apache.org/download.cgi&lt;/a&gt; adresinden şu anki en güncel sürüm olan 3.5 için apache-maven-3.5.0-bin.tar.gz ya da 
apache-maven-3.5.0-bin.zip dosyalarından birisini indirin ve herhangi bir yerde klasöre çıkartın. Ardından Control Panel -&amp;gt; System And Security -&amp;gt; System -&amp;gt; Advanced System Settings yolu ile gelişmiş
ayarlar ekranını açın. Ardından Environment Variables butonuna tıklayın. System Environments alanındaki New butonuna tıklayarak &lt;strong&gt;&lt;em&gt;M2_HOME&lt;/em&gt;&lt;/strong&gt; adında ve değeri de az önce 
indirip klasöre çıkarttığınız maven klasörünün yeri olacak şekilde bir variable tanımlayın. Bu adımdan sonra zaten tanımlı &lt;strong&gt;&lt;em&gt;PATH&lt;/em&gt;&lt;/strong&gt; variable’ını bulup Edit deyin ve sonuna 
&lt;strong&gt;&lt;em&gt;;%M2_HOME%\bin&lt;/em&gt;&lt;/strong&gt; ekleyip kaydedin. Son olarak konsol ekranından &lt;strong&gt;&lt;em&gt;mvn -v&lt;/em&gt;&lt;/strong&gt; deyip çıktı alabiliyorsanız maven kurulumu başarılı olmuş demektir.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Linux ve Mac OS&lt;/strong&gt;: Linux ve Mac OS ortamlarında ise &lt;strong&gt;&lt;em&gt;export PATH=/açılan yer/apache-maven-3.5.0/bin:$PATH&lt;/em&gt;&lt;/strong&gt; diyerek maven’ı kurabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kurulum sonrası şu şekilde bir çıktı almalısınız:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/2.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlk Maven Projesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Şimdi Maven’ı sistemimize kurduk ve ilk projemizi oluşturabiliriz. Genel ve Maven projesini tanıma amaçlı bir proje oluşturalım. Bunun için terminalde &lt;strong&gt;&lt;em&gt;mvn archetype:generate&lt;/em&gt;&lt;/strong&gt;
komutunu çalıştıralım. Komut bizim için bir adet basit, genel amaçlı bir Maven projesi oluşturacak. Bu komutu ilk kez verdiğinizde Maven proje oluşturma için bazı gerekli kütüphaneleri indirecektir. Ayrıca size konsol ekranında bazı sorular soracaktır.
Choose a number sorularını enterlayıp default’u seçerek geçebilirsiniz.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Define value for property ‘groupId’:&lt;/em&gt;&lt;/strong&gt; sorusunda projenizin bağlı olacağı bir grubun id bilgisini girmiş olursunuz.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Define value for property ‘artifactId’:&lt;/em&gt;&lt;/strong&gt; sorusunda bu projeyi tanımlayıcı bir anahtar girmiş olursunuz. Proje ismi de budur.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Define value for property ‘version’:&lt;/em&gt;&lt;/strong&gt; sorusunda projeniz için versiyon bilgisi girmiş olursunuz.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Define value for property ‘package’:&lt;/em&gt;&lt;/strong&gt; sorusunda ise projeniz için default oluşturulacak bir bir paket ismi girmiş olursunuz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu işlemler başarı ile tamamlandığında konsolda &lt;strong&gt;BUILD SUCCESS&lt;/strong&gt; yazısını görürüz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/3.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proje oluşturulduktan sonra şöyle bir dizin yapısı bizi karşılar. Burada src klasörü Source kelimesinin kısaltmasından gelmektedir ve proje geliştirilirken yazılan kodlar bu klasör altında
yer alır.&lt;strong&gt;&lt;em&gt;main&lt;/em&gt;&lt;/strong&gt; klasörü projenin kendisine ait kodları barındıracak kısım olurken &lt;strong&gt;&lt;em&gt;test&lt;/em&gt;&lt;/strong&gt; klasörü de projenin testi için yazılmış kodları barındıracaktır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/4.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi Maven ile projenin &lt;strong&gt;&lt;em&gt;compile&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;test&lt;/em&gt;&lt;/strong&gt; işlemlerini yapalım. Öncelikle terminalden projenizin içine, pom.xml’in yer aldığı dizine geçiş yapın. Ardından &lt;strong&gt;&lt;em&gt;mvn compile&lt;/em&gt;&lt;/strong&gt;
komutunu verin. Bu komut önce gerekli olan bağımlılıklar var mı, indireyim mi diye bakacak ardından da proje içerisindeki Java sınıflarını derleyecektir. BUILD SUCCESS yazısını gördü isek olay tamamdır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/5.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mvn compile komutu Java compiler’ı tetikleyecektir ve FirstMavenProject içerisinde derleşnmiş Java sınıflarının tutulacağı bir &lt;strong&gt;&lt;em&gt;target&lt;/em&gt;&lt;/strong&gt; klasörünün oluşmasını sağlayacaktır.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/7.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Target 
klasörü içinde ileride göreceğimiz şekilde &lt;em&gt;.jar ya da *.war uzantılı dosyalarımız da olacak. Biz şimdi derlenmiş olan App sınıfını çalıştıralım. java komutu ile derlenmiş Java sınıflarını 
çalıştırabildiğimiz için terminal üzerinde &lt;strong&gt;*Hello World!&lt;/strong&gt;&lt;/em&gt; yazısını görebildik.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/8.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/8.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terminal üzerinden &lt;strong&gt;&lt;em&gt;mvn test&lt;/em&gt;&lt;/strong&gt; komutu verildiğinde de proje için yazılmış test kodları koşulur. Aşağıdaki ekran çıktısında göreceğiniz üzere test kodları koşulmadan önce gerekli test 
kütüphanesi bağımlılıkları indirildi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/maven/1/6.png&quot;&gt;
&lt;img src=&quot;/images/maven/1/6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Benim bu ilk yazıda anlatacaklarım bu kadar arkadaşlar. Gelecek yazıda pom.xml dosyasından ve Build Life Cycles konularından bahsedeceğiz.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Jun 2017 20:41:20 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/maven-introduction/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/maven-introduction/</guid>
        
        <category>microsoft sql jdbc driver</category>
        
        <category>microsoft jdbc driver</category>
        
        <category>how to add microsoft sql jdbc driver to local maven repository</category>
        
        <category>add microsoft sql jdbc driver to maven repository</category>
        
        <category>microsoft jdbc driver maven</category>
        
        <category>microsft jdbc driver nasıl kullanılır</category>
        
        <category>microsoft sql jdbc driver nasıl kullanılır</category>
        
        <category>microsoft jdbc driver nasıl kullanılır</category>
        
        <category>maven nedir?</category>
        
        <category>maven windows nasıl kurulur?</category>
        
        <category>maven linux nasıl kurulur?</category>
        
        <category>maven mac os x nasıl kurulur?</category>
        
        <category>apache maven</category>
        
        <category>maven kurulumu</category>
        
        <category>ilk maven projesi</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Tutorials 8 - Structural Directives</title>
        <description>&lt;p&gt;Merhabalar.&lt;/p&gt;

&lt;p&gt;Bu yazıda Structural Directives konusunu öğreneceğiz.&lt;/p&gt;

&lt;p&gt;Angular 2 içerisinde 3 adet directive tipi vardır. Bunlardan birisi daha önce öğrendiğimiz ve öğrenmeye devam ettiğimiz Component konusu idi. İkincisi ise bu yazıda öğreneceğimiz Structural Directives olacak. Üçüncüsü ise Attribute Directives ve onu gelecek yazılarda öğreneceğiz.&lt;/p&gt;

&lt;p&gt;Structural Directives dediğimiz yapı Angular 2 içeirsinde DOM manipulation yapılmasından sorumlu olan bir yapıdır. Biz bu yazı içerisinde Structural Directive’in 3 parçasını göreceğiz. Bunlar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ngIf&lt;/li&gt;
  &lt;li&gt;ngSwitch&lt;/li&gt;
  &lt;li&gt;ngFor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Şimdi &lt;strong&gt;&lt;em&gt;ngIf&lt;/em&gt;&lt;/strong&gt; konusuna değinelim. ngIf directive’i isminden de anlaşılabileceği gibi sayfamızda belirli şartlara göre bir akış sağlamamıza yarayan bir directive’dir. Basit bir örnekle pratiğe dökelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngIf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;showElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;`,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Component’imizin template özelliği içerisinde bir p tag’i tanımlı. Bu p tag’inde *ngIf ifadesi ile p tag’inin görünür olup olamayacağına karar veriliyor. *ngIf özelliğine ise class içerisinde tanımlı showElement nesnesi atanıyor. *ngIf özelliği bu element’in değerine göre p tag’inin görünür ya da görünür olmama durumuna karar verecek.&lt;/p&gt;

&lt;p&gt;Anasayfayı çalıştırdığımızda şu şekilde bir ekran çıktısı geliyor:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kod içerisinde showElement false olduğu için Show Element textine sahip p tag’i görünmedi. Şimdi showElement nesnesine true değer atayıp sayfayı kontrol ediyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi p tag’i görünür oldu.&lt;/p&gt;

&lt;p&gt;Şimdi &lt;strong&gt;&lt;em&gt;ngSwitch&lt;/em&gt;&lt;/strong&gt; konusunu işleyelim. ngSwitch konusu klasik programlama dillerinde yer alan switch-case mantığında bir yapı. Bu olursa şu olsun, şu olursa bu olsun şekilde çalışacak bir yapı ngSwitch. Yukarıdaki örneğimize eklemeler yaparak ngSwitch’i örnekleyelim.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngIf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;showElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchWhen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;#39;red&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Red&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchWhen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;#39;blue&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Blue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invalid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Colour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;`,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Template’mize bir div tag’i ekledik ve bu tag içerisinde köşeli parantezler arasında &lt;strong&gt;&lt;em&gt;ngSwitch&lt;/em&gt;&lt;/strong&gt; özelliğimizi kullandık. ngSwitch özelliğimize class içerisinde tanımlı color nesnesini atadık. Div tag’inin içerisinde 3 adet p tag’i kullandık ve bu p tag’lerinde ngSwitchWhen ile ngSwitchDefault kullandık. ngSwitch özelliği kendisine atanan color değerinin kontrolünü gerçekleştiriyor ve akabinde içerideki ngSwitchWhen’lere göre işlemin gerçekleştirilmesini yapıyor. Eğer gelen color’ın değeri red ise birinci p tag’i yazdırılıyor. Eğer blue ise ikinci p tag’i yazdırılıyor. Eğer red ya da blue dışında bir renk gelirse ngSwitchDefault’a yönlendiriyor ve son sıradaki p tag’i yazdırılıyor. Color nesnesini değeri red olacak şekilde gönderelim ve ekran çıktısına bakalım:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Color nesnesinin değerini red olarak gönderdik ve &lt;strong&gt;&lt;em&gt;Red paragraph is shown!&lt;/em&gt;&lt;/strong&gt; metni görüntülendi.&lt;/p&gt;

&lt;p&gt;Şimdi color’ı blue yapıp gönderelim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/4.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Blue paragraph is shown!&lt;/em&gt;&lt;/strong&gt; metni ekranda görüntülendi.&lt;/p&gt;

&lt;p&gt;Son olarak da color’ı green olarak gönderelim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/5.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gönderdiğimiz color nesnesi değeri red ya da blue olmadığı için ngSwitch işlemi ngSwitchDefault özelliği kullanılan p tag’ine yönlendirdi ve &lt;strong&gt;&lt;em&gt;Invalid Colour!&lt;/em&gt;&lt;/strong&gt; metni görüntülendi.&lt;/p&gt;

&lt;p&gt;Şimdi bu yazımıdaki son directive’miz olan &lt;strong&gt;&lt;em&gt;ngFor&lt;/em&gt;&lt;/strong&gt; directive’ini öğrenelim. ngFor directive’de bize bir döngü döndürme imkanı sunuyor. ngFor’u örnekleyelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngIf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;showElement&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchWhen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;#39;red&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Red&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchWhen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;#39;blue&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Blue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngSwitchDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invalid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Colour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/p&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;let driver of drivers&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/li&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/ul&amp;gt;`,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drivers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Michael Schumacher&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Mika Hakkinen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Rubens Barichello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;David Coulthard&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Class içerisinde bir drivers array’i tanımladık ve içerisine değerler koyduk. Template içerisinde de ul tag’i içerisinde li tag’i ile array içindeki değerleri ekrana yazdıracağız. Normalde array içinde 4 değer olduğu için ul içerisinde 4 li kullanarak yazıdrabilirdik ama ngFor sayesinde tek satırda, tek li tag’i ile işi halledeceğiz. Kod içerisinde &lt;em&gt;ngFor ifadesi ile bir döngü, repeat işlemi yapılacağını söylüyoruz. ngFor’a atanan &lt;strong&gt;*let driver of drivers&lt;/strong&gt;&lt;/em&gt; ifadesi ile klasik programlama dillerindeki forEach döngüsüne benzer şekilde drivers içinde dönerken her birini driver olarak kabul edip işlem yapacak. Ekrana yazdırma kısmında ise daha önce öğrendiğimiz interpolation devreye giriyor ve driver’ı yazdırıyoruz.&lt;/p&gt;

&lt;p&gt;Ekran çıktımız da şu şekilde:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson8/6.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson8/6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gördüğümüz gibi Drivers array’i içindeki değerler ekrana yazdırıldı.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. 3 directive ifadesi ile Structural Directives konusunu öğrenmiş olduk. Gelecek yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Mon, 29 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/structural-directives/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/structural-directives/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 ngIf</category>
        
        <category>angular 2 ngSwitch</category>
        
        <category>angular 2 ngSwitchWhen</category>
        
        <category>angular 2 ngSwitchDefault</category>
        
        <category>angular 2 ngFor</category>
        
        <category>angular 2 Structural Directives</category>
        
        
      </item>
    
      <item>
        <title>Formula 1 2017 Monaco GP Ardından</title>
        <description>&lt;p&gt;Formula 1 2017 sezonunda 6. yarış olan Monaco GP Monte Carlo caddelerinde gerçekleştirildi ve Tifosi için müthiş mutluluk verici bir sonuçla tamamlandı.&lt;/p&gt;

&lt;p&gt;Önce Cumartesi günü yapılan sıralama turlarına bir göz atalım.&lt;/p&gt;

&lt;p&gt;Mercedes pilotu Lewis Hamilton Perşembe günü yapılan antremanda her ne kadar hızlı gözüküp 1. sırayı elde etmiş olsa da Mercedes’in uzun dingil mesafesi yüzünden burada sıkıntı yaşaması
bekleniyordu ve Hamilton devam eden 2. ve 3. antremanlarda geride kaldı.Takım arkadaşı Bottas ise yine makul sayılabilecek dereceler elde etti. İş sıralama turlarına geldiğinde ise
Hamilton adına durum da ha kötüye gitti. Q2 içerisinde üst üste kötü turlar atıp Q3’e geçememe tehlikesi beliren Hamilton son hakkında Q3’e kalabilecek bir dereceye çok yaklaşmışken 
McLaren pilotu Vandoorne’un kaza yapması ile turunu bırakmak zorunda kaldı ve Q2’de 14. olarak sıralamalara veda etti. Bottas ise Q3’de 3. sırayı aldı.&lt;/p&gt;

&lt;p&gt;Ferrari pilotları ise 2. antremandan itibaren yakaladıkları momentumu daha ileri taşıyarak sıralama turlarında başarılı turlar atarak bu seneki Rusya GP’nin ardından ikinci kez 
1-2 sra başlangıcı yapmaya hak kazandılar. Kimi Raikkonen 2008 Fransa GP’den bu yana ilk kez pole pozisyonu kazanarak F1 fanlarına nostalji yaşattı. Sebastian Vettel ise kendini
Bottas’ın önünde tutmayı başardı ve 2. sırayı aldı.&lt;/p&gt;

&lt;p&gt;Q3 sonucunda Bottas’ı Red Bull pilotları Verstappen ve Ricciardo takip ettiler.&lt;/p&gt;

&lt;p&gt;Carlos Sainz gayet başarılı sıralama geçirerek 6. sırayı aldı, onu Perez ve Grosjean takip ettiler. McLaren pilotları Jenson Button ve Vandoorne motor gücünün az öneme indiği bu pistte
McLaren’i Q3’e taşıdılar. Fakat Vandoorne Q2 sonunda yaptığı kaza nedeni ile Q3’de tur atamadı. Button ise Q3’ü son sırada tamamlamasına karşın parça değişim cezaları ile yarışa
pit yolundan başlama cezası aldı.&lt;/p&gt;

&lt;p&gt;Sıralamaların bitiş sonucu şöyle oldu fakat Button cezası nedeni ile son sıraya indiği için Hamilton 13. sıraya yükseldi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/f12017/monaco/1.png&quot;&gt;
&lt;img src=&quot;/images/f12017/monaco/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yarışta ise start anında Kimi ve Sebastian yerlerini korudular. İlk pit stoplara kadar Kimi 1. sıradaki yerini korurken Sebastin Vettel’den önce pit-stop yaptı ve önü açılan Vettel
oldukça hızlı turlar attı ve üst üste 2 turda en hızlı tur kaydı yaptı. Raikkonen’den 5 tur sonra pit’e gelen Vettel arada açtığı farkın da yardımı ile piste Raikkonen’in önünde döndü
ve yarış sonuna kadar yerini koruyarak zafere ulaştı. Raikkonen ise 2. sıradaki yerini muhafaza etti ve Ferrari 2010 Hockenheim’dan 7 yıl sonra ilk dublesini yapmış oldu.&lt;/p&gt;

&lt;p&gt;Mercedes pilotu Valtteri Bottas pit-stoplar sayesinde Red Bull pilotu Daniel Ricciardo’ya geçildi ve podyumu elinden kaçırarak 4. oldu. Red Bull’un diğer pilotu Max Verstappen ise
tüm yarışı Bottas’ın ardında geçirerek 5. oldu. Sainz ise sıralamalardaki başarısını devam ettirdi ve 6. sırada yer aldı. 13. sıradan start alan Hamilton ise Mercedes’in de deyimi ile
yarışı en optimum seviye olan 7. sırada tamamladı.&lt;/p&gt;

&lt;p&gt;Son zamanlarda çok üst düzey bir performans sergileyen Renault pilotu Nico Hulkenberg ise ciddi bir vites kutusu problemi yüzünden yarışa veda etti.&lt;/p&gt;

&lt;p&gt;Yarışın sonuçlanması ise şöyle oldu:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/f12017/monaco/2.png&quot;&gt;
&lt;img src=&quot;/images/f12017/monaco/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ferrari bu dublesi ile Mercedes’in 17 puan önüne geçerek takımlar liderliğini devraldı. Vettel ise Hamilton ile puan farkını bir tam yarış kadar olan 25’e çıkardı.&lt;/p&gt;

&lt;p&gt;Bir sonraki yarış Kuzay Amerika’da Kanada’da 11 Haziran tarihinde koşulacak.&lt;/p&gt;

&lt;p&gt;Gelecek yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Sağlıcakla kalım.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sun, 28 May 2017 20:41:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/f1monaco2017gp/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/f1monaco2017gp/</guid>
        
        <category>formula 1 2016 brazil gp</category>
        
        <category>formula 1 brazil gp</category>
        
        <category>formula 1 2016 Brezilya gp</category>
        
        <category>formula 1 2016 Brezilya gp</category>
        
        <category>formula 1 2016 sao paolo</category>
        
        <category>formula 1 2017 monaco gp</category>
        
        <category>formula 1 monaco gp</category>
        
        <category>formula 1 2017 Monaco gp</category>
        
        <category>formula 1 2017 Monte Carlo</category>
        
        <category>formula 1 2017 Monaco Sebastian Vettel</category>
        
        <category>formula 1 2017 Monaco Kimi Raikkonen</category>
        
        <category>formula 1 2017 Monaco GP Lewis Hamilton</category>
        
        
      </item>
    
      <item>
        <title>GURUR VE ÖNYARGI - JANE AUSTEN</title>
        <description>&lt;p&gt;&lt;a href=&quot;/images/gururveonyargi.jpeg&quot;&gt;
&lt;img src=&quot;/images/gururveonyargi.jpeg&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Merhabalar.&lt;/p&gt;

&lt;p&gt;Henüz yeni bitirdiğim ve yaklaşık 200 yıldır dünya üzerinde kendisine çokça okur bulan bir kitaptan size bahsetmek istiyorum.&lt;/p&gt;

&lt;p&gt;Kitab’ın yazarı İngiliz bir bayan olan Jane Austen. Kitaplarında aşk ve bu aşkın çevresinde gelişen olayları başarı ile okuruna anlatabilen bir yazar Jane Austen. Kendisi 16 Aralık 1775 - 
18 Temmuz 1817 tarihleri arasında yaşamış ve genç bir yaşta, 42 yaşında bir hastalıktan ötürü hayatını kaybetmiş. Kitaplarında genel olarak evlilik aşamasındaki kızların yaşadıkları çevresinde
dönüyor.&lt;/p&gt;

&lt;p&gt;2005 yılında tüm zamanların en romantik kitabı da seçilmiş olan Gurur ve Önyargı kitabı karakter bakımından oldukça zengin bir kitap. Açıkçası okurken zaman karakterleri karıştırdığım, 
hatırlayamadığım zamanlar oldu. Ancak kitabın okunurluğu ve güzelliği yanında bu durumun çok da bir negatif yönü yok. Kitaptaki en belli başlı, akılda en çok iz edici karakterler şu şekilde:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mr. &amp;amp; Mrs. Bennet&lt;/li&gt;
  &lt;li&gt;Jane Bennet&lt;/li&gt;
  &lt;li&gt;Elizabeth Bennet&lt;/li&gt;
  &lt;li&gt;Mr. Bingley&lt;/li&gt;
  &lt;li&gt;Mr. Darcy&lt;/li&gt;
  &lt;li&gt;Lady Catherine de Bourgh&lt;/li&gt;
  &lt;li&gt;Mr. Collins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu karakterlerin yanında komşular, kız kardeşler, teyze ve dayı gibi karakterler de yer alıyor.&lt;/p&gt;

&lt;p&gt;Karakter ile birlikte kitabın içeriğinden özet şeklinde bahsedeyim.&lt;/p&gt;

&lt;p&gt;Mr. &amp;amp; Mrs. Bennet 5 kız çocuğuna sahip bir anne baba. Mr. Bennet sakinlikten, sessizlikten ve kitapları ile vakit geçirmekten zevk alan birisi iken karısı Mrs. Bennet en büyük arzusu kızlarını
evlendirmek olan bir bayan. Kitapta tasvir edildiği kadarı ile görgüsüz ve çoğu durumda birilerini mahçup edecek davranışlar sergileyebiliyor.&lt;/p&gt;

&lt;p&gt;Olay örgüsü Mr. Bingley’in Netherfield Korusu’nu tutup Longbourn’a komşu olması ile başlıyor. Bu komşuluk Bennet ailesinin hayatına Mr. Bingley ile beraber 
birçok kişi getiriyor ve Bennet ailesi olaylar yaşamaya başlıyor. Mr. Bingley ile beraber gelen kişilern başında ise ileride Mr. Bennet’ın damadı olacak olan Mr. Darcy yer alıyor. Bu komşuluk
aynı zamanda Bennet ailesinin kızlarından olan Jane ve Elizabeth’in hayatına da büyük değişiklikler ile yön veriyor.&lt;/p&gt;

&lt;p&gt;Netherfiedl korusuna Mr. Bingley’in gelmesi akabinde ile Jane Bennet arasında bir ilişki, aşk başlıyor ve birbirine aşık bu iki kişinin birbirleri ile evleneceğine kesin gözü ile bakılırken 
ansızın Mr. Bingley Netherfield korusundan ayrılıp Londra’ya gidiyor ve herkes artık Jane ile Mr. Bingley arasında bir daha sevgililik evlilik gibi konuların olamıyacağının umutsuzluğuna kapılıyor.
Jane ile Mr. Bingley arasında bu noktadan sonra bir şey olup olmadığı konusunu sizin kitabı okumanıza bırakıyorum. 😉&lt;/p&gt;

&lt;p&gt;Mr. Bingley ile beraber Bennet ailesinin hayatına giren Mr. Darcy ise herkesin onayladığı şekilde gururlu, kibirli ve hırslı bir adam olarak görünüyor. Kahramanlarımızdan Elizabeth ve Mr. Darcy
arasında her ne kadar kitabın başlarında müthiş bir iticlik ve birbirlerinden uzak durma isteği yaşanılıyor olsa da kitabın ilerleyen yerleri bu ikili arasında şaşılacak şeylerin yaşanmasına sebep
oluyor.&lt;/p&gt;

&lt;p&gt;Kitabımızın iz edici bir diğer karakteri olan Mr. Collins ise Bennet’lerin çocuklarının kuzeni. Mr. Collins’i önemli kılan detay ise Bennet ailesinin içinde yaşadığı evlerinin Mr. Bennet öldüğü 
zaman Mr. Collins’e kalacak olması ve bu konuda Mrs. Bennet’ın serzenişleri. Mr. Collins bir vakit için Bennet ailesine misafir oluyor ve Bennet’ların kızlarından birisi için evlenme talebini
iletiyor. Bu teklifin sonucunun ne olduğu ve akabinde gelişen olayları da kitabı okumanıza bırakıyorum. 😉&lt;/p&gt;

&lt;p&gt;Kitabımızda yer alan bir diğer karakter ise Lady Catherine de Bourgh. Oldukça zengin ve saygın bir insan olan Lady Catherine de Bourgh Mr. Darcy’nin çok yakın bir akrabası ve onun hayatına 
yön verme amaçlı planlar içerisinde olan bir kadın. Kitabı okuduğunuzda bu planların neler olduğunu, nasıl bir kadın olduğunu anlamış olacaksınız.&lt;/p&gt;

&lt;p&gt;Kitap ana tema olarak sevigniz aşkınız varsa gururunuzun, önyargılarınızın sizi yanlış yönlere sevk edebileceğinin, kendinize üzüntü, hüzün ve pişmanlık verebilecek şeyler yaşabileceğiniz olgusu
üzerinde duruyor.&lt;/p&gt;

&lt;p&gt;Başka bir okuduğum kitaba ait yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Bol kitap okuyun.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Fri, 26 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/gurur-ve-onyargi/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/gurur-ve-onyargi/</guid>
        
        <category>gurur ve önyargı</category>
        
        <category>jane austen</category>
        
        <category>jane austen gurur ve önyargı</category>
        
        
      </item>
    
      <item>
        <title>GoLang Yazıları 1 - Giriş, Kurulum ve Hello World</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda GoLang diline bir giriş yapacağız, kurulum işlemlerinden bahsedeceğiz ve bir Hello World uygulamasu yapacağız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GoLang Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Geliştirilmesinin başlangıcı 2007 yılına dayanan, ilk duyurulması 2009 yılında olan ve geliştirilmesi işlemi Google tarafından yapılan bir dildir GoLang. Açık kaynak kodlu olarak geliştirilmesi
devam edilen bir dil olan GoLang’ın geliştirilmeye başlanılması sırasında çalışan abilerden birisi bize oldukça tanıdık gelecek bir isimdir: Ken Thompson&lt;/p&gt;

&lt;p&gt;Ken Thompson, Dennis Ritchie ile birlikte C dili ve UNIX işletim sisteminin geliştiricileri arasındadır.&lt;/p&gt;

&lt;p&gt;Go dili aynı zamanda cross-platform olarak söyleyebileceğimiz şekilde Windows, Linux ve MacOS ortamlarında çalışabilmektedir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kurulum&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İlk olarak &lt;a href=&quot;https://golang.org/dl/&quot;&gt;https://golang.org/dl/&lt;/a&gt; adresinden işletim sistemimize uygun sürümü indirip kurulum işlemimizi gerçekleştiriyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/1.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Akabinde bir de Go dili kodlarımızı yazacağımız ortama ihtiyacımız var. Ben bu noktada size JetBrains tarafından geliştirilen &lt;strong&gt;&lt;em&gt;Gogland&lt;/em&gt;&lt;/strong&gt; IDE’sini önereceğim arkadaşlar. Bu IDE’ye
&lt;a href=&quot;https://www.jetbrains.com/go/download/&quot;&gt;https://www.jetbrains.com/go/download/&lt;/a&gt; adresinden ulaşabilirsiniz. Verdiğim adres &lt;strong&gt;&lt;em&gt;Early Access Program&lt;/em&gt;&lt;/strong&gt; adındaki bir program üzerinden size bu IDE’yi
kullanma imkanı sunmaktadır. Benim bildiğim kadarı ile JetBrains ücretli IDE’leri kararlı hale gelip satın alınacak hale gelinene kadar bu tarz programlar ile hem ücretsiz kullanıma sunuluyor 
hem de kullanıcıdan geliştirme feedback’leri alıyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/2.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gogland IDE’sini açtığımızda gelen ekrandan &lt;strong&gt;&lt;em&gt;New Project&lt;/em&gt;&lt;/strong&gt; linkine tıklıyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/3.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Location kısmındaki son alana yani son &lt;strong&gt;/&lt;/strong&gt; işareti sonrasına proje adını giriyoruz. Sdk kısmına ise az indirip kurduğumuz GoLang SDK’nın yerini gösteriyoruz. MacOS ortamında bu dosya /usr/local
altına girmektedir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/4.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create butonuna tıklayıp projemi oluşturuyorum. Akabinde projeye sağ tıklayıp önce &lt;strong&gt;&lt;em&gt;New –&amp;gt; Directory&lt;/em&gt;&lt;/strong&gt; deyip &lt;strong&gt;&lt;em&gt;main&lt;/em&gt;&lt;/strong&gt; isminde bir paket 
oluşturuyorum . Ardından da main paketine sağ tıklayıp &lt;strong&gt;&lt;em&gt;New –&amp;gt; Go File&lt;/em&gt;&lt;/strong&gt; diyerek bir Go dili dosyası ekleyeceğim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/5.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dosyanın adını MainFile olarak girip Kind olarak &lt;strong&gt;&lt;em&gt;Empty File&lt;/em&gt;&lt;/strong&gt;‘ı seçili bırakıyorum. Akabinde dosya içine çok basit olan şu Hello World kodunu ekliyorum.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Merhaba GoLang Dünyası!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Kod içerisinde ilk dikkat çeken nokta noktalı virgüller yok! Klasik nesne yönelimli dillerin olmazsa olmazı olan &lt;strong&gt;;&lt;/strong&gt; işareti burada yok. Geliştiricileri basitliği hedeflemişler.&lt;/li&gt;
  &lt;li&gt;Java dilinde konsola basit çıktı vermek için System.out.println kullanıyoruz. Burada da &lt;strong&gt;&lt;em&gt;fmt&lt;/em&gt;&lt;/strong&gt; üzerinden aynı işlemi gerçekleştirilebiliyoruz. Bunun için fmt’yi import etmemiz yeterli.&lt;/li&gt;
  &lt;li&gt;Println metodu ile içine verdiğimiz String ifadeyi konsola basabiliriz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MainFile dosyasına sağ tıklıyorum ve &lt;strong&gt;&lt;em&gt;Run&lt;/em&gt;&lt;/strong&gt; sekmesine tıklıyorum. Akabinde konsolda çıktımı görüyorum:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/goLang/lesson1/6.png&quot;&gt;
&lt;img src=&quot;/images/goLang/lesson1/6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda GoLang dilinden bahsettik, kurulumunu yaptık ve Hello World’ümüzü yaptık.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sat, 20 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/golang-introduction/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/golang-introduction/</guid>
        
        <category>go lang tutorial</category>
        
        <category>goLang Türkçe Kaynak</category>
        
        <category>goLang yazıları</category>
        
        <category>golang nedir</category>
        
        <category>golang dersleri</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Tutorials 7 - Two Way Bindings</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda &lt;strong&gt;&lt;em&gt;Two Way Bindings&lt;/em&gt;&lt;/strong&gt; konusunu öğreneceğiz.&lt;/p&gt;

&lt;p&gt;Two Way Data Binding dediğimiz olay Event Binding ve Data Binding işlemlerinin birlikte yapılabilmesidr.&lt;/p&gt;

&lt;p&gt;Şu şekilde elimizde oldukça sade bir Angular2Tutorials component’imiz olsun:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;`,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Burada bizim Two Way Binding olarak bahsettiğimiz olay da şudur ki aynı anda hem data binding hem de event binding yapabilmektir. Örneğin elimizde iki adet input olsun, bu inputlara girilen veri hemen
arkadaki değişkenlere atansın ve ardından du değişkenlerden alınıp ekrana yazdırılsın.&lt;/p&gt;

&lt;p&gt;Şimdi bunu örnekleyecek şekilde component’imizi değiştirelim.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Angular2Tutorials component’imiz içerisinde template kısmında güncelleme yaptık. 2 input ekledik. Bu input’ların ngModel kısımlarında yukarıda bahsettiğimiz Two Way Binding olayını işlemiş oluyoruz.
Kullanıcı bu ngModel özellikleri tanımlanmış input’lara değerleri girildiğinde ngModel’a atanmış ve class içinde tanımlı olan nesnelere değerler atanır. &lt;strong&gt;&lt;em&gt;[()]&lt;/em&gt;&lt;/strong&gt; ifadeleri iki yönlü bağlama olayını
gerçekleştirir. Kullanıcıdan değeri alır, class içindeki property’e atar. Bu data binding kısmı. Kullanıcı input’lara farklı değer girdiğinde ekranda metin de güncellenir. Bu da event binding kısmı.&lt;/li&gt;
  &lt;li&gt;Template kısmında ayrıca &lt;a href=&quot;http://ilkaygunel.com/blog/2017/interpolation-and-property-data-binding/&quot;&gt;Interpolation&lt;/a&gt; yazısından hatırlayacağımız &lt;em&gt;** {{}} **&lt;/em&gt; işaretlerini kullandık.
Sınıf içerisindeki nesnelerden değerleri alıp direk ekrana yazdırıyoruz.&lt;/li&gt;
  &lt;li&gt;Angular2Tutorials sınıfı içerisinde de ngModel özelliklerine atanacak nesneleri tanımladık.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ekran çıktımızda iki adet input eklenmiş vaziyette. Şimdi bunlara değerler girelim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson7/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson7/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gördüğümüz gibi inputlara değerler girilir girilmez ekrana yazdırılıyor. Bu olayın Property Data Binding kısmını temsil eidyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson7/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson7/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Input’lardaki değerleri değiştirip başka şeyler girdiğimde de hemen veriler değişiyor. Bu da olayın Event Binding kısmını temsil ediyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson7/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson7/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Two Way Data Binding konusunu görmüş olduk. Gelecek yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sat, 20 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/two-way-bindings/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/two-way-bindings/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 styling components</category>
        
        <category>angular 2 component&#39;e style atanması</category>
        
        <category>angular 2 component styles</category>
        
        <category>angular 2 Interpolation and Property Data Binding</category>
        
        <category>angular 2 Property Data Binding</category>
        
        <category>angular 2 Interpolation</category>
        
        <category>CSS class binding in Agular 2</category>
        
        <category>CSS style binding in Agular 2</category>
        
        <category>style binding in Agular 2</category>
        
        <category>class binding in Agular 2</category>
        
        <category>Event Binding and References in agular 2</category>
        
        <category>Event Binding in Angular 2</category>
        
        <category>References in Angular 2</category>
        
        <category>angular 2 two way binding</category>
        
        <category>angular 2 ngModel</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Tutorials 6 - Event Binding and References</title>
        <description>&lt;p&gt;Hi everyone. In this tutorial, I’m gonna talk about &lt;strong&gt;&lt;em&gt;Event Binding and References&lt;/em&gt;&lt;/strong&gt; topic in Angular 2.&lt;/p&gt;

&lt;p&gt;Event Binding means that some actions occur in view and these actions trigger our components. Now, let’s define a button in template attribute of our component.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;clickEvent()&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;`,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clickEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;The Button Clicked!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In our template attribute of our component, we defined a button and defined an event between parenthesis. In Angular 2, when we use events, we defines it between parenthesis like 
&lt;strong&gt;&lt;em&gt;(click)&lt;/em&gt;&lt;/strong&gt;. Here, we defined a click event that is triggered when button clicks. Also, we assigned the clickEvent() method to this event. When we clicked the button, 
&lt;strong&gt;&lt;em&gt;The Button Clicked!&lt;/em&gt;&lt;/strong&gt; text will be written to browser’s console.&lt;/p&gt;

&lt;p&gt;After I opened browser console and clicked the button, I could see the text.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson6/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson6/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s take a look at the &lt;strong&gt;&lt;em&gt;References&lt;/em&gt;&lt;/strong&gt; topic.&lt;/p&gt;

&lt;p&gt;I developing web applications with Angular 2, we need to pass element values to our components and In Angular 2, References is easy.&lt;/p&gt;

&lt;p&gt;We will change template of our component and clickEvent() method. Like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;clickEvent(inputTag.value)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clickEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Above,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we added an input tag to our template and defined it with  &lt;strong&gt;&lt;em&gt;#inputTag&lt;/em&gt;&lt;/strong&gt; expression. When we use References in Angular 2, we define our reference with &lt;strong&gt;&lt;em&gt;#&lt;/em&gt;&lt;/strong&gt; and then use it in
where we want. Here, we passed it’s value to clickEvent method by using &lt;strong&gt;&lt;em&gt;inputTag.value&lt;/em&gt;&lt;/strong&gt; expression.&lt;/li&gt;
  &lt;li&gt;We also changed clickEvent method that accepts a value to write console. When we click the button, the value of input (#inputTag) will be passed to this method that writes the value
to the console.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I opened main page, entered a text, clicked the button and checked the console of browser.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson6/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson6/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, what happens when we send only inputTag instead of inputTag.value to the clickEvent method?&lt;/p&gt;

&lt;p&gt;If we do this, reference element will be sent to clickEvent method instead of it’s value. Like this screen output:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson6/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson6/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we wat to detect or send the event type to our method, we can use &lt;strong&gt;&lt;em&gt;$event&lt;/em&gt;&lt;/strong&gt; expression. Now, change the template attribute like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;clickEvent($event)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this template attribute, when the mouse come on the button, event type will be sent to clickEvent method and clickEvent method will write that to console.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson6/4.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson6/4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, we learnt&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Event Binding&lt;/li&gt;
  &lt;li&gt;Reference Value&lt;/li&gt;
  &lt;li&gt;Reference Element&lt;/li&gt;
  &lt;li&gt;Event From Reference Element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Until the next article, take you care.&lt;/p&gt;

&lt;p&gt;See you.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;With Greetings And Love&lt;/p&gt;
</description>
        <pubDate>Sat, 13 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/event-binding-and-references/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/event-binding-and-references/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 styling components</category>
        
        <category>angular 2 component&#39;e style atanması</category>
        
        <category>angular 2 component styles</category>
        
        <category>angular 2 Interpolation and Property Data Binding</category>
        
        <category>angular 2 Property Data Binding</category>
        
        <category>angular 2 Interpolation</category>
        
        <category>CSS class binding in Agular 2</category>
        
        <category>CSS style binding in Agular 2</category>
        
        <category>style binding in Agular 2</category>
        
        <category>class binding in Agular 2</category>
        
        <category>Event Binding and References in agular 2</category>
        
        <category>Event Binding in Angular 2</category>
        
        <category>References in Angular 2</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Tutorials 5 - Class and Style Bindings</title>
        <description>&lt;p&gt;Hi everyone. In this tutorial I’m gonna talk about &lt;strong&gt;&lt;em&gt;Class and Style Bindings&lt;/em&gt;&lt;/strong&gt; in Angular 2.&lt;/p&gt;

&lt;p&gt;Let’s remember, in &lt;a href=&quot;http://ilkaygunel.com/blog/2017/interpolation-and-property-data-binding/&quot;&gt;previous tutorial&lt;/a&gt;, we wrote a component like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;imageLink&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ilkgunel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Header 4 From Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imageLink&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://pbs.twimg.com/profile_images/598551481181155329/DqwnzkIE.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;courseName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we will change template and styles properties and define a new property in Angular2Tutorials class.&lt;/p&gt;

&lt;p&gt;Firstly, let’s take a look at the class binding.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;applyClass&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;`,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;We defined a div tag in template property. In this div tag, we calling our css class in square brackets like &lt;strong&gt;&lt;em&gt;[class.myClass]&lt;/em&gt;&lt;/strong&gt; and assigning a value, applyClass, to this css property.&lt;/li&gt;
  &lt;li&gt;In styles property we defined a css class that is &lt;strong&gt;&lt;em&gt;myClass&lt;/em&gt;&lt;/strong&gt;. This class only changes color of text to red.&lt;/li&gt;
  &lt;li&gt;In Angular2Tutorials class, we defined a property that is applyClass and used it in template property. &lt;strong&gt;&lt;em&gt;[class.myClass]=”applyClass”&lt;/em&gt;&lt;/strong&gt; definition checks value of applyClass. 
If applyClass is equal to true, &lt;strong&gt;&lt;em&gt;myClass&lt;/em&gt;&lt;/strong&gt; css property is assigned to class property of div. If it is false, nothing happens.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I check the main page, I see this. The applyClass property is equal to true and color of text is red.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson5/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson5/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s take a look at style binding. We will define another div tag in template attribute and another property in class. Our component will be like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;applyClass&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;applyBlue ? &amp;#39;blue&amp;#39; : &amp;#39;orange&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;`,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyBlue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;We defined another div tag which has a color style. The color of text is changing according to value of applyBlue. We used again square brackets and called our &lt;strong&gt;&lt;em&gt;applyBlue&lt;/em&gt;&lt;/strong&gt; property.&lt;/li&gt;
  &lt;li&gt;We used an if-else expression like in programming languages in template attribute. If the value of applyBlue property is equal to true, the color of text will be blue. If not, the
color of text will be orange.&lt;/li&gt;
  &lt;li&gt;In class body initially, we defined value of applyBlue as true.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I look at the main page, I see this screen. The color of text that’s in second div is blue.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson5/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson5/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, I change value of applyBlue property to false and check again the main page.The color ot text is orange.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson5/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson5/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we finished this tutorial&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We learned CSS class binding in Agular 2&lt;/li&gt;
  &lt;li&gt;We learned CSS style binding in Agular 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Until the next article, take you care.&lt;/p&gt;

&lt;p&gt;See you.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;With Greetings And Love&lt;/p&gt;
</description>
        <pubDate>Fri, 12 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/class-and-style-bindings/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/class-and-style-bindings/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 styling components</category>
        
        <category>angular 2 component&#39;e style atanması</category>
        
        <category>angular 2 component styles</category>
        
        <category>angular 2 Interpolation and Property Data Binding</category>
        
        <category>angular 2 Property Data Binding</category>
        
        <category>angular 2 Interpolation</category>
        
        <category>CSS class binding in Agular 2</category>
        
        <category>CSS style binding in Agular 2</category>
        
        <category>style binding in Agular 2</category>
        
        <category>class binding in Agular 2</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Ders 4 - Interpolation and Property Data Binding</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda &lt;strong&gt;&lt;em&gt;Interpolation and Property Data Binding&lt;/em&gt;&lt;/strong&gt; konusunu işleyeceğiz.&lt;/p&gt;

&lt;p&gt;Bir önceki yazımızda Angular2Tutorials’ı şu şekilde yazmıştık:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;`,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi &lt;strong&gt;&lt;em&gt;template&lt;/em&gt;&lt;/strong&gt; özelliği içindeki &lt;strong&gt;Header 4 From Angular 2 Tutorials&lt;/strong&gt; bilgisini class içerisinde bir değişken tanımlayıp ona atayarak kullanalım:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Header 4 From Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Angular 2 içerisinde &lt;strong&gt;* {{ }} *** ifadesinin kullanımına Interpolation ismi veriliyor ve class’ın içinde tanımlanmış bir property’nin bu ifade içerisinde kullanılarak view’a bağlanmasına 
**&lt;em&gt;Data Binding&lt;/em&gt;&lt;/strong&gt; ismi verilmektedir. Yukarıdaki kullanım şekli ile template içerisinde class içerisinde tanımlanan nesnelere erişip kullanabiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson4/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson4/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında kırmızı renkli yazımız önceki yazıda olduğu gibi ekranda yazdı.&lt;/p&gt;

&lt;p&gt;Şimdi &lt;strong&gt;&lt;em&gt;Data Binding&lt;/em&gt;&lt;/strong&gt; konusunun bir diğer kullanım şekline bakalım. Template içerisinde bir img tag’i kullanalım ve class içerisinde resim linki tanımlayarak data binding yapalım.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;&lt;/span&gt;
                
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;imageLink&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Header 4 From Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imageLink&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://pbs.twimg.com/profile_images/598551481181155329/DqwnzkIE.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Angular2Tutorials sınıfı içerisinde bir fotoğraf linki tanımladım. Template özelliği içerisinde ise bir img etiketi tanımladık ve img etiketinin src property’sini köşeli parantezler içine alarak
ona değer ataması yaptım. [src]=”imageLink” ifadesinde sağ kısımda sanki string atıyormuş gaibi yazdık fakat sol taraftaki köşeli parantezlerden ötürü data binding uygulanacak ve sınıf içerisindeki
imageLink source adres olarak kullanılacak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson4/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson4/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında gördüğümüz gibi ikinci data binding kullanım şekli de düzgün şekilde çalışabiliyor.&lt;/p&gt;

&lt;p&gt;Burada aklımızın bir köşesinde durması gereken bir konu var arkadaşlar. HTML elementlerinin &lt;strong&gt;&lt;em&gt;property&lt;/em&gt;&lt;/strong&gt; ve &lt;strong&gt;&lt;em&gt;attribute&lt;/em&gt;&lt;/strong&gt; özellikleri vardır. Attrubute özelliği HTML içinde oluşturulurken
property özelliği DOM içerisinde oluşturulur. İşte bizim de burada [src]=”imageLink” ifadesi ile yaptığımız tanımlama img elementinin src property’sine atama yapar. JS üzerinde best practice
uygulamalarda element’in attribute ile değil de property’si üzerinden işlem yapmak tavsiye edilen durumdur. İşte Angular 2 de bu felsefe üzerinden gitmiş ve elemnt’in property değeri üzerinde 
işlem yapıyor.&lt;/p&gt;

&lt;p&gt;Şimdi Angular2Tutorials’ın template kısmına bir input ekleyelim ve class içerisinde &lt;strong&gt;&lt;em&gt;courseName&lt;/em&gt;&lt;/strong&gt; tanımlayıp input’un value’suna atayalım:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
    			
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;&lt;/span&gt;
                
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;imageLink&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;courseName&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Header 4 From Angular 2 Tutorials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imageLink&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://pbs.twimg.com/profile_images/598551481181155329/DqwnzkIE.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;courseName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Angular2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yine aynı şekilde value özelliğini köşeli parantezler arasına aldık ve değer olarak da sınıf içinde tanımlı courseName’i atadık.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson4/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson4/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında bir input tag’i oluştu ve içeriğinde &lt;strong&gt;&lt;em&gt;Angular2&lt;/em&gt;&lt;/strong&gt;‘yi görüyoruz. Fakat ilgili öğeyi inceleyip baktığımızda value attribute’nun olmadığını görüyoruz. Fakat 
&lt;strong&gt;&lt;em&gt;value = “ilkaygunel”&lt;/em&gt;&lt;/strong&gt; gibi bir atama yapılmış olsa idi element’i inspect ettiğimzide value attribute’unu orada görecektik. Yani anlatmak istediğim olay eğer data binding yolu ile value
atanması yoluna gidilirse element’in value property’si üzerinde işlem yapılacaktır.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Interpolation and Property Data Binding basitçe görmüş olduk. Gelecek yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Tue, 09 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/interpolation-and-property-data-binding/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/interpolation-and-property-data-binding/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 styling components</category>
        
        <category>angular 2 component&#39;e style atanması</category>
        
        <category>angular 2 component styles</category>
        
        <category>angular 2 Interpolation and Property Data Binding</category>
        
        <category>angular 2 Property Data Binding</category>
        
        <category>angular 2 Interpolation</category>
        
        
      </item>
    
      <item>
        <title>Angular 2 Ders 3 - Component&#39;e Style Atanması</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. &lt;a href=&quot;http://ilkaygunel.com/blog/2017/angular-2-lesson-2-create-component/&quot;&gt;http://ilkaygunel.com/blog/2017/angular-2-lesson-2-create-component/&lt;/a&gt; yazımızda kendi Component’imizi 
oluşturmayı ve AppComponent içinden onu ekranda göstermeyi görmüştük. Bu yazıda ise bu kendi oluşturduğumuz Component’e Style ataması yapacağız.&lt;/p&gt;

&lt;p&gt;Github üzerinden direk Angular 2 çalışmaya başlamak için edindiğimiz bir Template projemiz vardı ve biz onu kullanıyorduk. O proje içerisinde &lt;strong&gt;&lt;em&gt;style.css&lt;/em&gt;&lt;/strong&gt; adında ve index.html içinde kullanılan
bir dosyamız vardı. O dosyayı editörünüz üzerinde açınız.&lt;/p&gt;

&lt;p&gt;Bir önceki yazıda yazdığımız Angular2Tutorials component’imiz şu şekilde idi:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;h2&amp;gt;Angular 2 Tutorials&amp;lt;/h2&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi bu Component’imizin template kısmında bir de &lt;strong&gt;&lt;em&gt;h4&lt;/em&gt;&lt;/strong&gt; tag’ini kullanalım ve bu h4 tag’ine style ataması yapalım.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;angular2Tutorials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;`,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Angular2Tutorials component’imizin template özelliği içerisinde tek tırnaklar arasında olan Template özelliğini yan tırnaklar arasına aldık (&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;h4 HTML tag’i ile bir metin tanımladık.&lt;/li&gt;
  &lt;li&gt;Bir component’e style özelliği atamak istediğimiz zaman @Component içerisinde onun &lt;strong&gt;&lt;em&gt;styles&lt;/em&gt;&lt;/strong&gt; özelliğinden faydalanıyoruz. Bu özelliğe değer atandığı kısımda ise hangi tag’in style özelliği
ile oynanmak isteniyorsa ona uygun değer ataması yapıyoruz. Bizim örneğimizde h4 HTML tag’inin rengi kırmızı olacak şekilde ayarlandı.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sunucu çalışmıyorsa npm start verdikten sonra, çalışıyor ise tarayıcıya direk gidip baktığımızda bu Component içerisinde h4’e kırmızı rengin atandığını göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson3/1.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson3/1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Burada şunu unutmamak lazım ki bizim buradaki h4 tag’ine atadığımız style özelliği sadece bu Component’i kapsar. Yani başka Component’ler içerisinde de h4 kullanılırsa buradaki style özelliği
etkili olmayacak. Hemen bu durumu ispatlayalım.&lt;/p&gt;

&lt;p&gt;app.component.ts dosyamız içerisinde şu şekilde düzenlemeye gidelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@angular/core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./angular2tutorials.component&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;my-app&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h1&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular2Tutorials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/angular2Tutorials&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h4&amp;gt;`,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;kt&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;            
  &lt;span class=&quot;nx&quot;&gt;directives&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Angular2Tutorials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;AppComponent içerisinde Angular2Tutorials içinde yaptığımız gibi template kısmında h4 tag’ini kullandık ve styles özelliği kısmında h4 tag’ine mavi renk ataması yaptık.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson3/2.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson3/2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında gördüğümüz gibi Angular2Tutorials component’i içinden h4 kırmızı renkte iken AppComponent içinden gelen h4 mavi renkte.&lt;/p&gt;

&lt;p&gt;Son olarak da index.html içinde bir h4 tag’i kullanalım ve style.css dosyası içerisinde buna özel tanımlama yapalım.&lt;/p&gt;

&lt;p&gt;style.css dosyamız içerisinde şu satırları ekleyelim ve HTML içinde h4 tag’ini kullandığımızda rengi turuncu olsun:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;index.html dosyamızın body kısmını da şu şekilde değiştirelim ve bir h4 tag’i de HTML içinde kullanmış olalım:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Header 4 From index.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;my-app&amp;gt;&lt;/span&gt;Loading...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/my-app&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;/images/angularTutorials/lesson3/3.png&quot;&gt;
&lt;img src=&quot;/images/angularTutorials/lesson3/3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında gördüğümüz gibi her h4 tag’i kendisine nerede bir style özelliği atanmışsa oradakini kullandı.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;İlk h4 tag’i style.css içerisinde tanımlı rengini aldı çünkü index.html dosyası içerisinde doğrudan gelen (Component’ler içerisinden gelmeyen) tagler özelleliklerini style.css’den alıyor.&lt;/li&gt;
  &lt;li&gt;İkinci h4 tag’i Angular2Tutorials Component’i içerisinde tanımlı rengini aldı.&lt;/li&gt;
  &lt;li&gt;Üçüncü h4 tag’i de AppComponent içerisinde tanımlı rengini aldı.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Oluşturulan Component’e style atanması durumunu basitçe görmüş olduk. Gelecek yazıda görüşmek üzere.&lt;/p&gt;

&lt;p&gt;Görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sat, 06 May 2017 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2017/angular-2-lesson-3-styling-components/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2017/angular-2-lesson-3-styling-components/</guid>
        
        <category>angular 2 web service</category>
        
        <category>angular 2 rest get</category>
        
        <category>angular 2 rest post</category>
        
        <category>angular 2 rest</category>
        
        <category>angular 2 calling web service</category>
        
        <category>angular 2 giriş</category>
        
        <category>angular 2 tutorials</category>
        
        <category>angular 2 hello world</category>
        
        <category>angular 2 dersleri</category>
        
        <category>angular 2 kaynak</category>
        
        <category>angular 2 türkçe kaynak</category>
        
        <category>angular 2 türkçe dersleri</category>
        
        <category>angular 2 styling components</category>
        
        <category>angular 2 component&#39;e style atanması</category>
        
        <category>angular 2 component styles</category>
        
        
      </item>
    
  </channel>
</rss>
