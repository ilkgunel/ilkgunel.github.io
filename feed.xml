<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>İlkay Günel - Blog</title>
    <description>İlkay Günel Blog</description>
    <link>http://ilkaygunel.com/</link>
    <atom:link href="http://ilkaygunel.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 23 Dec 2016 21:39:22 +0300</pubDate>
    <lastBuildDate>Fri, 23 Dec 2016 21:39:22 +0300</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Git Nedir? Nasıl Kullanılır?</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda sizlere Git’in ne olduğundan ve nasıl kullanıldığından bahsetmeye çalışacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Nedir? Neden Kullanılmalı?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Günümüz yazılım dünyasında yazılıp satılan üzerinden para kazanılan projeler tek bir kişi tarafından geliştirilmiyor. Bir takım halinde geliştirilen bu projelerin senkronize bir şekilde
gitmesi gerekiyor. İşte bu noktada Git bir versiyon kontrol sistemi olarak karşımıza çıkıyor. Hem adım adım geliştirilen projelerde geliştirilen her bir adımın bir mesajla yedeklenmesi
sağlanıyor hem de projenin tutulduğu yerde bir senkronizasyon yaparak projeyi geliştirilen geliştiricilerin birbirlerinden haberdar bir şekilde gitmelerini sağlıyor.&lt;/p&gt;

&lt;p&gt;Yani Git hem projenin güvenli bir şekilde yedeklenmesi hem senkronize geliştirilmesi hem de ne zaman ne geliştirildi bilgilerine sahip olunması için kullanılması elzem bir araçtır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Nasıl Kurulur?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows kullanan arkadaşlar &lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;şuradan&lt;/a&gt; gerekli dosyayı indirip kurarlarsa git komutlarını çalıştırabilecekleri shell ekranı kurulacaktır.&lt;/li&gt;
  &lt;li&gt;Debian tabanlı GNU/Linux dağıtımı kullanan arkadaşlar &lt;strong&gt;apt-get install git-core&lt;/strong&gt; komutunu terminal üzerinden çalıştırdıklarında Git sistemlerine kurulacaktır.&lt;/li&gt;
  &lt;li&gt;macOS kullanan arkadaşlar da &lt;a href=&quot;http://sourceforge.net/projects/git-osx-installer/&quot;&gt;şuradan&lt;/a&gt; macOS için Git kurulum dosyasını indirip kurduklarında Git’i sistemlerine kurmuş olacaklardır.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;macOS kullanan arkadaşlar indirilen dosyadan kurulum yaptıktan sonra &lt;strong&gt;git –version&lt;/strong&gt; komutunu işletip şöyle bir çıktı alıyorlarsa işlem tamamdır&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git1.png&quot;&gt;
&lt;img src=&quot;/images/git/git1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Nasıl Kullanılır&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Git kullanmak için projenizi tutabileceğiniz bir uzak sunucu depolamasına ihtiyacınız vardır. Bu public de olabilir private da. Muhakkak ismini duymuşsunuzdur ki &lt;strong&gt;&lt;em&gt;Github&lt;/em&gt;&lt;/strong&gt; adında
oldukça meşhur bir versiyon kontrol sistemi sitesi var. Projelerinizin kaynak kodları açık olacak şekilde depolama yapmak isterseniz Github size ücretsiz imkan sunuyor. Private
yani kodları kapalı projeleriniz olacaksa da paralı sistemi var. Github tabanda Git sistemini kullanarak çalışıyor.
Biz bu yazı için Github’ın ücretsiz tarafını kullanarak Git’in kullanımını örnekleyeceğiz. Git’i kullanmak için masaüstü uygulamaları olsa da biz temel kullanımına ve terminal üzerinden
kullanımına değineceğiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adım 1: Git’i Konfigüre Edelim&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İlk olarak sistemde kurulu Git’e kendimizi tanıtmamız lazım. Bunun için bir username ve bir de e-mail adresi tanımlayacağız.&lt;/p&gt;

&lt;p&gt;Username tanımlamak için:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name “ilkgunel”&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki komutun &lt;strong&gt;&lt;em&gt;git config –global&lt;/em&gt;&lt;/strong&gt; Git üzerinde global bir konfigürasyon ayarlaması yapılacağını bildirir. user.name ise sizin o uzak sunucudaki kullanıcı adınızdır. Benim
Github üzerindeki kullanıcı adım &lt;strong&gt;&lt;em&gt;ilkgunel&lt;/em&gt;&lt;/strong&gt; olduğu tırnaklar arasında kullanıcı adımı parametre olarak geçiriyorum.&lt;/p&gt;

&lt;p&gt;E-mail adresi tanımlamak için:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.email ilkgunel93@gmail.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Burada da uzak sunucuya kayıtlı olduğunuz e-posta adresini ayarlara geçiriyoruz.&lt;/p&gt;

&lt;p style=&quot;text-align: center; color: red&quot;&gt;&lt;strong&gt;Adım 2: Uzak Sunucuya Dosya Gönderilmesi&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bilgisayarınızın herhangi bir yerinde bir klasör oluşturun. Ben masa üstünde &lt;strong&gt;&lt;em&gt;GitTutorial&lt;/em&gt;&lt;/strong&gt; adında bir klasör oluşturup içine bu yazının Markdown halini ekliyorum. Siz de istediğiniz
bir şeyi ekleyebilirsiniz.&lt;/li&gt;
  &lt;li&gt;Ardından terminalden bu klasör içine girin ve &lt;strong&gt;&lt;em&gt;git init&lt;/em&gt;&lt;/strong&gt; komutunu koşturun. Bu komut bu klasör üzerinde Git’in hakimiyet kurabilmesine imkan tanıyacak.&lt;/li&gt;
  &lt;li&gt;Ardından &lt;strong&gt;&lt;em&gt;git add .&lt;/em&gt;&lt;/strong&gt; komutunu koşturun. Bu komut en sondaki . vasıtası ile klasör içindeki tüm dosyaları &lt;strong&gt;&lt;em&gt;Stage&lt;/em&gt;&lt;/strong&gt; aındaki bir bölgeye alacak. Stage demek henüz mesajı
tanımlanmamış ancak uzak sunucuya gönderilmek için seçilmiş dosyalar demektir aslında.&lt;/li&gt;
  &lt;li&gt;Ardından &lt;strong&gt;&lt;em&gt;git commit -m “İlk Commit”&lt;/em&gt;&lt;/strong&gt; komutunu koşturalım. Bu komut az önce Stage kısmına alınmış dosyaların tümü için bir mesaj belirleyecek ve Head bölgesine taşıyacak. Tırnaklar arasına duruma göre
istediğinizi yazabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yukarıdaki işlemler localimiz üzerindeki işlemlerdi. Şimdi bu reponun uzak sunucuya atılmasına sıra geldi.&lt;/p&gt;

&lt;p&gt;Öncelikle &lt;a href=&quot;https://github.com/new&quot;&gt;https://github.com/new&lt;/a&gt; üzerinden yeni bir repo oluşturalım. Repo adına localdeki klasörümüz ile aynı ismi verelim. Ben şöyle oluşturuyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git2.png&quot;&gt;
&lt;img src=&quot;/images/git/git2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create butonuna tıkladığımızda Github bizim için HTTPS ve SSH üretecektir. Biz burada HTTPS’i kullanacağız. Projenin ismi GitTutorial olduğu için Github bana
&lt;strong&gt;&lt;em&gt;https://github.com/ilkgunel/GitTutorial.git&lt;/em&gt;&lt;/strong&gt; şeklinde bir HTTPS üretti.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Şimdi terminal üzerinde &lt;strong&gt;&lt;em&gt;git remote add origin https://github.com/ilkgunel/GitTutorial.git&lt;/em&gt;&lt;/strong&gt; komutunu koşturalım. Bu komut Github’ın ürettiği HTTPS ile bizim local projemizi
ilişkilendirecek ve artık uzak depolama sunucu adresimiz burası olacak.&lt;/li&gt;
  &lt;li&gt;Şimdi de &lt;strong&gt;&lt;em&gt;git push -u origin master&lt;/em&gt;&lt;/strong&gt; komutunu koşturalım. Bu komut da az önce ilişkilendirdiğimiz adrese bizim localdeki projemizi yükleyecek. Komutu koşturduğunuzda 
  &lt;strong&gt;&lt;em&gt;Username for ‘https://github.com’&lt;/em&gt;&lt;/strong&gt; şeklinde bir girdi beklentisi oluşacak. Github kullanıcı adınızı girip enterlayın. Akabinde Github reponuzun parolasını soracak. Parolanızı da
girip enterlayın.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sorunsuz bir şekilde uzak sunucuya atılması durumunda şöyle bir sonuç alacağız.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git3.png&quot;&gt;
&lt;img src=&quot;/images/git/git3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ilkgunel/GitTutorial&quot;&gt;https://github.com/ilkgunel/GitTutorial&lt;/a&gt; adresine gidip baktığımda local klasör içindeki dosyanın gerçekten de uzak sunucuya atılmış olduğunu
görüyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git4.png&quot;&gt;
&lt;img src=&quot;/images/git/git4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki işlemler varsayılan olarak &lt;strong&gt;&lt;em&gt;master&lt;/em&gt;&lt;/strong&gt; isminde bir branch oluşturup dosyamızı oraya attı. Fakat iş hayatında farklı dallar üzerinde çalışmanız, kod geliştirmeniz gerekebilir. 
Bunu ayrı modüller geliştirmeye benzetebiliriz. Bu durumda
öncelikle farklı bir dal oluşturmalı, işinizi yapmalı akabinde bu oluşturduğunuz dalı master dalı ile merge etmelisiniz. Şimdi bunların nasıl yapıldığına bakalım.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitTutorial klasörünün içinde yeni bir klasör oluşturalım. Ben NewBranchFolder isminde bir klasör oluşturuyorum ve içine herhangi bir şey koyuyorum.&lt;/li&gt;
  &lt;li&gt;Şimdi yeni bir branch oluşturmak için &lt;strong&gt;&lt;em&gt;git checkout -b newBranch&lt;/em&gt;&lt;/strong&gt; komutu ile yeni bir branch oluşturalım. Bu komut aynı zamanda master branch’ından newBranch branch’ına da 
geçirir.&lt;/li&gt;
  &lt;li&gt;Akabinde git add NewBranchFolder diyerek bu yeni branch’a göndeirlmek üzere yeni oluşturduğumuz klasörü Stage kısmına ekleyelim.&lt;/li&gt;
  &lt;li&gt;Şimdi git commit -m “Yeni Branch Eklendi” diyerek Head kısmına alalım.&lt;/li&gt;
  &lt;li&gt;Son olarak da bu branch’ı uzak repoya yollayalım. &lt;strong&gt;&lt;em&gt;git push origin newBranch&lt;/em&gt;&lt;/strong&gt; komutunu koşturarak uzak sunucuda NewBranchFolder’ını barındıran yeni bir branch oluşturmuş oluruz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ilkgunel/GitTutorial&quot;&gt;https://github.com/ilkgunel/GitTutorial&lt;/a&gt; adresine tekrar gidip baktığımda branch’ın eklenmiş olduğunu görüyorum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git6.png&quot;&gt;
&lt;img src=&quot;/images/git/git6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diyelim ki bu dal üzerinde çalıştınız, işinizi bitirdiniz, en son aşamada master ile bu branch’ı birleştirmeniz gerekir.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bunun için öncelikle &lt;strong&gt;&lt;em&gt;git checkout master&lt;/em&gt;&lt;/strong&gt; komutu ile terminalden master branch’ına geçelim.&lt;/li&gt;
  &lt;li&gt;Akabinde &lt;strong&gt;&lt;em&gt;git merge newBranch&lt;/em&gt;&lt;/strong&gt; diyerek master ve newBranch branch’larını merge edelim.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;git push origin master&lt;/em&gt;&lt;/strong&gt; komutu ile de uzak sunucuya yollayalım.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ilkgunel/GitTutorial&quot;&gt;https://github.com/ilkgunel/GitTutorial&lt;/a&gt; adresine tekrar baktığımda daha önce master’da olmayan NewBranchFolder’ın master’a eklenmiş olduğunu
yani master ile newBranch’ın merge edilmiş olduğunu gördüm.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/git/git7.png&quot;&gt;
&lt;img src=&quot;/images/git/git7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 20:40:22 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/git-nedir/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/git-nedir/</guid>
        
        <category>git nedir?</category>
        
        <category>git nasıl kullanılır?</category>
        
        <category>git kullanımı</category>
        
        <category>git neden kullanılmalı</category>
        
        <category>neden git kullanılmalı</category>
        
        <category>git yeni brach açma</category>
        
        <category>git merge etme</category>
        
        <category>git yeni branch nasıl açılır</category>
        
        <category>git branchlar nasıl birleştirilir</category>
        
        
      </item>
    
      <item>
        <title>Sırça Köşk</title>
        <description>&lt;p&gt;&lt;a href=&quot;/images/sirca-kosk.jpg&quot;&gt;
&lt;img src=&quot;/images/sirca-kosk.jpg&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Merhabalar.&lt;/p&gt;

&lt;p&gt;Bu yazıda size bugün bitirdiğim bir Sabahattin Ali kitabı olan &lt;strong&gt;&lt;em&gt;Sırça Köşk&lt;/em&gt;&lt;/strong&gt;‘ten bahsetmek istiyorum.&lt;/p&gt;

&lt;p&gt;Üstadımızın kaleminde çıkan ve bir öykü-masal kitabı olan bu kitapta Sabahattin Ali’nin öyküleri ve masalları bir araya toplanmıştır. Yapı Kredi Yayınları tarafından basılan bu
kitap’ta 13 adet öykü ve 4 adet masal yer almaktadır. Kitap ismini içerisinde yer alan bir masaldan almaktadır. Kitaba ismini veren Sırça Köşk masalı kitabın sonunda yer almaktadır.&lt;/p&gt;

&lt;p&gt;Yapı Kredi Yayınlarına ait kitap linki şöyledir: 
&lt;a href=&quot;http://alisveris.yapikredi.com.tr/tanim.asp?sid=RLY5QI41LK2KW4SF2UFH&quot;&gt;http://alisveris.yapikredi.com.tr/tanim.asp?sid=RLY5QI41LK2KW4SF2UFH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kitapta yer alan öyküler her ne kadar 1945-1947 arası yazılmış olsa da kitabı elinize alıp okuduğunuzda günümüz için de ne kadar geçerli olduğunu göreceksiniz. Öyküler zaman zaman
yüzünüzde gülümsemelere sebebiyet verirken zaman da sizi hüzünlendiren anlara sahip.&lt;/p&gt;

&lt;p&gt;Sırası ile öyküler şöyledir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Portakal: Vinççi İsmail’in gemide karşılaştığı durumlar ve kendisi anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Beyaz Bir Gemi: Ressam Tevfik Aravurgun’un sahilde yaptığı bir gemi resmi ve sonrasında olananlar anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Katil Osman: Katil olmadığı halde lakabı katil olan Osman’ın gerçekten katil oluşu anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Böbrek: Avni Akbulut’un başındaki böbrek taşı derdi ile başına gelenler anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Cıgara: Yazarın kendi ağzından, Beyoğlun’da kavga eden bazı çocuklarla arasında geçen konuşma ve durumlar anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Millet Yutmuyor: Yazarın ağzından bir panayırda bir türlü müşteri çekemeyen bir mekan anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Bahtiyar Köpek: Yazarın ağzından ironik bir şekilde bir köpeğin saadeti anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Çilli: Yazar’ın ağzından eski bir öğrencisi ile karşılaşması ve onun durumu anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Dekolman: Yazarın ağzından bir hastanede gerçekleştirilecek göz ameliyatı öncesi kendisi ve doktorların durumu anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Hakkımızı Yedirmeyiz: Yazarın ağzından çalıştığı bir yerdeki çok dindar görünen ancak gerçek yüzünü para ile gösteren bir kişi ile arasındaki olay anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Cankurtaran: Genç yaşta, 15’inde İbrahim tarafından kaçırılıp, evlenip hamile kalan Asiye’nin doğum sancıları ile başlayan olaylar anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Çirkince: Yazarın ağzından bugünkü adın Şirince olan ama yazarın çocukluğunda Çirkince diye bildiği yere tekrar gidişini ve gördüklerini anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Kurtla Kuzu: Yazarın ağzından karakolda ve karakoldan çıktından sonraki durumlar anlatılıyor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sırası ile masallar da şöyledir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bir Aşk Masalı: Yurdunda dertli kimse olmasın isteyen kadın hükümdar olan melike ve derviş’in durumu anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Devlerin Ölümü: Dünya üzerinde hiçbir gücün kalıcı olmadığına dair bir masal.&lt;/li&gt;
  &lt;li&gt;Koyun Masaları: Koyunların çobanlardan kurtulup daha fenasına yakalanması anlatılıyor.&lt;/li&gt;
  &lt;li&gt;Sırça Köşk: Kitaba ismini veren, yıkılmaz, çok sağlam zannedilen Sırça Köşk’ün inşası ve yıkılışı anlatılıyor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Niçin hep acı şeyler yazayım? Dostlar, yufka yürekli dostlar bundan hoşlanmıyorlar. ‘Hep kötü, sakat şeyleri mi göreceksin?’ diyorlar. 
‘Hep açlardan, çıplaklardan, dertlilerden mi bahsedeceksin? Geceleri gazete satıp izmarit toplayan serseri çocuklardan; bir kaşık toprak, bir bakraç su için birbirlerini öldürenlerden;
cezaevlerinde ruhları kemirile kemirile eriyip gidenlerden; doktor bulamayanlardan; hakkını alamayanlardan başka yazacak şeyler, iyi güzel şeyler kalmadı mı? Niçin yazılarındaki bütün 
insanların benzi soluk, yüreği kederli? Bu memlekette yüzü gülen, bahtiyar insan yok mu?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Bahtiyar Köpek” adlı öyküden.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kitap resmi linki: &lt;a href=&quot;http://i.idefix.com/cache/600x600-0/originals/0000000143252-1.jpg&quot;&gt;http://i.idefix.com/cache/600x600-0/originals/0000000143252-1.jpg&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/sirca-kosk/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/sirca-kosk/</guid>
        
        <category>sabahattin ali</category>
        
        <category>sabahattin ali sırça köşk</category>
        
        <category>sırça köşk</category>
        
        <category>sırça köşk öykü kitabı</category>
        
        
      </item>
    
      <item>
        <title>Gson Kütüphanesi İle Java&#39;dan Json&#39;a ve Json&#39;dan Java&#39;ya Dönüşüm Yapma</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Bu yazıda sizlere Java kullanarak yazdığımız uygulamarda Java nesnesinden JSON’a ve JSON’dan Java nesnesine kolaylıkla dönüşüm yapmamızı sağlayan bir kütüphane olan &lt;strong&gt;&lt;em&gt;GSON&lt;/em&gt;&lt;/strong&gt; 
kütüphanesini size anlatmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;Öncelikle bu yazıdaki uygulamanın kaynak koduna &lt;a href=&quot;https://github.com/ilkgunel/GsonExample&quot;&gt;https://github.com/ilkgunel/GsonExample&lt;/a&gt; adresi üzerinden ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;Şimdi IDE’nizde bir Maven projesi açın ya da isterseniz yukarıdaki projeyi indirip IDE’nizde açın. Bu yazı için Eclispe IDE kullanıyor olacağım. Projeyi açtıktan sonra pom.xml 
dosyanıza şu bağımlılık kodu ekleyin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.google.code.gson&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gson&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.8.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Eğer herhangi bir ayarı değiştirilmedi ise Eclipse IDE pom.xml’i kaydettiğimizde kütüphaneyi indirip classpath’e koyar.&lt;/p&gt;

&lt;p&gt;Bu yazı için kullanacağımız POJO sınıfımız şöyle olacak:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Person sınıfımız gördüğünüz gibi son derece basit. id, name, surname alanları ve onların get set metotları yer alıyor.&lt;/p&gt;

&lt;p&gt;Akabinde &lt;strong&gt;&lt;em&gt;FromJavaToJson&lt;/em&gt;&lt;/strong&gt; adında bir class oluştalım ve kodunu şöyle düzenleyelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.GsonBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FromJavaToJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Eyüp&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bağdaş&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gsonBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GsonBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsonBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;FromJavaToJson sınıfındaki main metodu içerisinde öncelikle Person sınıfından bir obje oluşturup set metotları ile alanlarına değer tanımları yapıyoruz. Akabinde&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gsonBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GsonBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;satırı ile JSon’dan Java’ya ve Java’dan Json’a dönüşüm yapma yeteneği olan &lt;strong&gt;&lt;em&gt;gsonBuilder&lt;/em&gt;&lt;/strong&gt; objemizi oluşturuyoruz.&lt;/p&gt;

&lt;p&gt;Son olarak gsonBuilder nesnesi vasıtası ile çağırdığımız toJson metodune bu person nesnesini parametre olarak verip çıkan sonucu ekrana yazdırıyoruz.&lt;/p&gt;

&lt;p&gt;Bu sınıfı çalıştırdığımızda gördüğünüz gibi bir Json objesi elde ettik.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/gson/gson1.png&quot;&gt;
&lt;img src=&quot;/images/gson/gson1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki örnekte bir objeyi JSon’a çevirdik. Şimdi birden fazla objeyi içeren bir Json nasıl oluşturabiliriz ona bakalım.&lt;/p&gt;

&lt;p&gt;FromJavaToJson sınıfını şu şekilde güncelleyelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FromJavaToJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Eyüp&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bağdaş&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Perihan&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;İmamoğlu&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Toker&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;person3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Turgut&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Önceki örnekten farklı olarak burada toJson metodunu kullanacağımız nesneyi GsonBuilder().create() üzerinden değil direk &lt;strong&gt;&lt;em&gt;new Gson&lt;/em&gt;&lt;/strong&gt; diyerek elde ediyoruz. Fakat bu değişimin listeyi
ya da birden fazla objeyi Json’a çevirme ile ilgisi yok. Bunu sadece bu şekilde de kullanabilirsiniz demek için buraya aldım. Yoksa new GsonBuilder().create(); ifadesi de aynı işi görüyor.&lt;/p&gt;

&lt;p&gt;Kodu çalıştırdığımızda konsol çıktısı şöyle oluyor:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/gson/gson2.png&quot;&gt;
&lt;img src=&quot;/images/gson/gson2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi bir Json dosyasından dönüşüm nasıl yaparız ona değinelim.&lt;/p&gt;

&lt;p&gt;Az önceki Json çıktısını &lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt;https://jsonformatter.curiousconcept.com/&lt;/a&gt; adresi üzerinden formatlayalım. Uzantısı .json olan bir dosya oluşturup
formatladığımız Json’ı içine kopyalayalım. Benim dosyam şu şekilde:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Perihan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;surname&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;İmamoğlu&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Sümeyye&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;surname&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Demirel&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Toker&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;surname&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Turgut&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yukarıdaki Json’dan okuma yaparak Java objelerine çevirecek FromJsonToJava sınıfımız da şu şekilde:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.FileNotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.FileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.JsonArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.google.gson.JsonParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FromJsonToJava&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;FileReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileReader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src/main/resources/jsonFile.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;JsonParser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAsJsonArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bir Hata Meydana Geldi! Hata:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;p:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;personList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sınıfımızı inceleyelim.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Öncelikle Json dosyasından okuma yapıp Person objelerini tutacak bir personList nesnesi oluşturuyoruz.&lt;/li&gt;
  &lt;li&gt;Java’da dosya okuma işlemlerinden hatırlayacağınız bir FileReader nesnesini json dosyasını parametre vererek oluşturuyoruz.&lt;/li&gt;
  &lt;li&gt;fromJson metodunu kullanacağımız bir Gson nesnesi oluşturuyoruz.&lt;/li&gt;
  &lt;li&gt;Json dosyası üzerinde parçalama yapacak bir JsonArray nesnesi oluşturuyoruz.&lt;/li&gt;
  &lt;li&gt;Json dosyamız birden person objesine karşılık gelecek bilgi tuttuğu için bir JsonArray tanımlıyoruz ve bu JsonArray’i parser nesnesinin &lt;strong&gt;&lt;em&gt;parse&lt;/em&gt;&lt;/strong&gt; metodu ile oluşturuyoruz. Bu parse
metoduna parçalanacak Json ile ilgili bir şey verilmesi lazım, biz de fileReader nesnesini veriyoruz. Son olarak getAsJsonArray JsonArray elde ediyoruz.&lt;/li&gt;
  &lt;li&gt;Elde ettiğimiz JsonArray’in size’ı kadar dönecek bir for döngüsü oluşturup içinde Person nesneleri oluşturuyoruz. Person nesnelerini gson nesnesindeki &lt;strong&gt;&lt;em&gt;fromJson&lt;/em&gt;&lt;/strong&gt; metodunu
kullanarak oluşturuyoruz. fromJson metoduna iki parametre veriyoruz. Birincisi Java objesine çevirilecek Json objesi, ikincisi ise hangi sınıfa göre çevirim yapılacağı. Birinci 
JsonArray’in ilgili gözündeki parametre olarak veriyoruz zira JsonArray’in herbir gözü bir Json objesidir. İkinci parametre de bildiğiniz gibi Person sınıfıdır.&lt;/li&gt;
  &lt;li&gt;Kodun son aşamasında ise elde ettiğimiz listeyi konsola yazdırıyoruz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kodu çalıştırınca çıktımız şu şekilde:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/gson/gson3.png&quot;&gt;
&lt;img src=&quot;/images/gson/gson3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eğer Json dosyamız şu şekilde tek bir person objesine denk gelen bir veri tutuyorsa kodu şu şekilde güncelleyebiliriz:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
	&lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Emre&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;surname&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Uysal&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;FileReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileReader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src/main/resources/jsonFile2.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bir Hata Meydana Geldi! Hata:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;/images/gson/gson4.png&quot;&gt;
&lt;img src=&quot;/images/gson/gson4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p&gt;Görüşmek üzere.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/gson-tutorial/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/gson-tutorial/</guid>
        
        <category>gson kütüphanesi</category>
        
        <category>java gson</category>
        
        <category>java gson nasıl kullanılır</category>
        
        <category>javadan jsona obje dönüşümü</category>
        
        <category>jsondan javaya obje dönüşümü</category>
        
        <category>gson java&#39;dan jsona dönüştürme</category>
        
        <category>gson jsondan javaya dönüştürme</category>
        
        <category>java json dönüştürme</category>
        
        <category>javada json işlemleri</category>
        
        
      </item>
    
      <item>
        <title>Scala 2 - Unified Types</title>
        <description>&lt;p&gt;Merhabalar. Scala’ya Giriş yazısında Scala’nın ne olduğundan bahsetmiştik ve Hello World uygulamamızı yapmıştık. Bu yazıda da &lt;strong&gt;&lt;em&gt;Unified Types&lt;/em&gt;&lt;/strong&gt; konusuna değineceğiz.&lt;/p&gt;

&lt;p&gt;Önceki yazıda da değindiğim gibi Scala’da primitive tip-nesne ayrımı yoktur. Scala’da her şey nesnedir. Scala mimarisi sınıf tabanlı olmasından ötürü de tüm değerler bir sınıf
instance’dır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scala Class Hierarchy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scala-class-hierarchy.png&quot;&gt;
&lt;img src=&quot;/images/scala/scala-class-hierarchy.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki resim Scala dilinin sınıf hiyerarşisini anlatıyor. Scala’da en üst sınıf yani tüm sınıfların atası &lt;strong&gt;&lt;em&gt;scala.Any&lt;/em&gt;&lt;/strong&gt; sınıfıdır. scala.Any iki alt sınıfa sahiptir. scala.AnyVal
ve scala.AnyRef. scala.AnyVal sınıfı Java’daki primitive tiplere karşılık gelen değerlerin yer aldığı sınıfları kendi altında tutar. Buradaki sınıflar tipinde olabilecek verile ön tanımlıdır.
Yani bir number, bir boolean değer ön tanımlı olarak bize gelir ve bunlar da object’tir. scala.AnyRef ise diğer tüm sınıfları altına
toplayan bir sınıftır. Scala ile kod yazarken bizim tanımlayacağımız sınıflar da scala.AnyRef altındaki scala.ScalaObject sınıfını extend ederek oluşur. Scala’yı biz JRE üzerinde 
çalıştırdığımız için scala.AnyRef sınıfı aslında java.lang.Object sınıfına karşılık gelmektedir.&lt;/p&gt;

&lt;p&gt;Ayrıca yukarıdaki diyagramdan göreceğimiz bir şey de şudur ki scala.AnyVal atındaki sınıflar arasındaki dönüşümler otomatik olarak Scala içinde gerçekleşiyor.&lt;/p&gt;

&lt;p&gt;Scala dili 1 + 2 * 3 / x artimetik işlemini her şeyi obje olarak gördüğünden (1).+(((2).*(3))./(x)) ifadesine çevirip işlemini yapar.&lt;/p&gt;

&lt;p&gt;Şimdi basit bir örnek yapalım.&lt;/p&gt;

&lt;p&gt;Önceki yazıda sağ tıklayıp Object eklediğimiz gibi şimdi de App isminde Class ekleyin projenize ve içeriğini sadece main metodunu barındıracak şu şekilde düzenleyin:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App.scala&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;package com.ilkaygunel.scalatutorials&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi de bir object ekleyin ve içeriğini şöyle değiştirin:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UnifiedTypes.scala&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.ilkaygunel.scalatutorials&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnifiedTypes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;LinkedHashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;This is a string&amp;quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// add a string&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;732&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;// add a number&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;-Symbol&quot;&gt;&amp;#39;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;// add a character&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// add a boolean value&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// add the main function&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;UnifiedTypes object’ini ilk olarak main metodu barındıran App sınıfından kalıtıyoruz. İçerisinde ise Java’daki Set interface’ine benzer bir set tanımlıyoruz. Set’in tutacağı
değer tipleri için yukarıdaki diyagramın en tepesinde gördüğümüz &lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt; sınıfını kullanıyoruz. Bu set’e += ifadeleri ile değerler ekliyoruz. Eklediğimiz değerlere dikkat edersek 
String, number, karakter, boolean ve fonksiyon tipindeki değerler yer alıyor. Hepsi de Any sınıfından dolayı sorunsuzca set’e eklenebiliyor ve bunların her birisi Scala için bir nesne.&lt;/p&gt;

&lt;p&gt;Örneğin Java dili için 732 integer bir değerken, true boolean bir değerken yani ikisi de primitive bir değerken Scala için ikisi de object’tir. 732 değeri Scala’daki Int sınıfından
türerken Java’daki en tabandaki primitive int gibi çalışır fakat yaptığı iş Int sınıfı üzerinden türemektir. Keza true değeri de burada Java’daki primitive tip gibi kullanılabilirken
aslında scala.Boolean sınıfından türeyerek kullanılıyor.&lt;/p&gt;

&lt;p&gt;val iter: Iterator[Any] = set.iterator ifadesi ile Any sınıfı tipinde değerler üzerinde dönecek bir Iterator sınıfından bir nesne tanımlayıp bu set nesnesinden alınan iterator ile 
&lt;strong&gt;&lt;em&gt;iter&lt;/em&gt;&lt;/strong&gt; nesnesi oluşturuyoruz. Akabinde while döngüsü ile de set içinde dönüyoruz.&lt;/p&gt;

&lt;p&gt;UndefinedTypes’ı çalıştırdığımızda konsol çıktımız şöyle oluyor:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scala2-1.png&quot;&gt;
&lt;img src=&quot;/images/scala/scala2-1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım da bu kadar arkadaşlar. Basitçe Scala’da sınıf hiyerarşisine değinmiş olduk. Gelecek yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;

&lt;p&gt;NOT: Diyagramın alındığı kaynak: 
&lt;a href=&quot;http://1.bp.blogspot.com/-is7hpMTwGkc/VS6gzAxOQfI/AAAAAAAADPk/zmkBv7GlTo4/s1600/class-hierarchy.png&quot;&gt;http://1.bp.blogspot.com/-is7hpMTwGkc/VS6gzAxOQfI/AAAAAAAADPk/zmkBv7GlTo4/s1600/class-hierarchy.png&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/scala-unified-types/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/scala-unified-types/</guid>
        
        <category>scala nedir?</category>
        
        <category>scala programlama dili</category>
        
        <category>scala türkçe tutorial</category>
        
        <category>scala dersleri</category>
        
        <category>scala türkçe kaynak</category>
        
        <category>scala tutorial</category>
        
        <category>scala on netbeans</category>
        
        <category>how write scala code on netbeans</category>
        
        <category>netbeans de scala kodu nasıl yazılır</category>
        
        <category>scala ve netbeans kullanımı</category>
        
        
      </item>
    
      <item>
        <title>Scala Giriş - Scala Nedir? Scala İle Hello World</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Bir süredir Java’nın yanına başka bir programalama dili koymak için niyetli idim ve bu niyeti Scala dilininden yana kullandım. Scala programalama dilini öğrenmeye karar verdim ve
öğrenirken de paylaşımlarda bulunacağım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scala Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hepsinden önce Scala Java SE gibi bir programlama dilidir. Java sadece nesne yönelimli kod yazmaya imkan tanırken Scala C++ gibi hem nesne yönelimli hem de fonksiyonel programlama yapmaya
imkan tanıyan bir dildir. Yani bu ifade Scala’nın Hybrit bir dil olduğu anlamına gelir. Scala Java SE gibi JVM (Java Virtual Machine) üzerinde çalışan bir programlama dilidir.&lt;/p&gt;

&lt;p&gt;Java SE dilinde bir tarafta nesneler diğer tarafta ise primitive tipler yer almaktadır. Scala dili ise primitive tip kavramını bünyesinde barındırmayan bir dildir. Yani Scala’da 
primitive tip diye bir tanım yoktur. Bu da primitive tip- nesne tipi arasında casting, geçişler vs. gibi işlemler yapma gerekliliğini ortadan kaldırır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scala İle Hello World İçin Adımlar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scala’nın ne olduğunu az çok anladıktan sonra şimdi Scala ile &lt;strong&gt;&lt;em&gt;Hello World&lt;/em&gt;&lt;/strong&gt; uygulaması yapalım. Ben bu yazıda Scala ile Hello World için iki yol anlatacağım. Birinci yol, Scala’nın
binary dosyalarını indirip PATH’e atıp derleme yolu ile Hello World olacak. İkinci yol ise NetBeans IDE üzerinde Scala uygulaması açmak olacak.&lt;/p&gt;

&lt;p style=&quot;text-align: center;color: red&quot;&gt;&lt;strong&gt;Birinci Yol&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Birinci yolu uygulamak için tabii ki önce Scala’yı indirmemiz gerekecek. 😊&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scala-lang.org/download/&quot;&gt;http://scala-lang.org/download/&lt;/a&gt; adresinden 1 numaralı kısımdan Scala’nın sisteminize uygun sürümünü indirin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris1.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İndirmiş olduğunuz sıkıştırılmış dosyayı herhangi bir yere açın. Şimdi bilgisayarımızın PATH’ine Scala’yı eklememiz gerekiyor. MacOS çalıştıran bilgisayarlar için $HOME dizini 
altındaki &lt;strong&gt;&lt;em&gt;.bash_profile&lt;/em&gt;&lt;/strong&gt; dosyasını güncellemeniz gerekiyor. Şu iki satırı .bash_profile dosyanıza eklemeniz yeterli:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;export SCALA_HOME=/Users/ilkaygunel/Downloads/scala-2.12.1
export PATH=$SCALA_HOME/bin:$PATH&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;PATH ayarının düzgün yapılıp yapılmadığını anlamak için komut satırına gelip &lt;strong&gt;&lt;em&gt;scalac -version&lt;/em&gt;&lt;/strong&gt; komutunu çalıştırın. Şöyle bir çıktı almanız gerekiyor:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris2.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eğer komut satırından doğru çıktıyı alabildi iseniz Scala kodu yazmaya hazırız demektir. Şimdi komut satırı üzerinde bir &lt;strong&gt;&lt;em&gt;Hello World&lt;/em&gt;&lt;/strong&gt; uyglaması yazalım.&lt;/p&gt;

&lt;p&gt;İlk olarak komut satırında &lt;strong&gt;&lt;em&gt;scala&lt;/em&gt;&lt;/strong&gt; komutunu vererek Scala’yı çalıştırmış olalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris3.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Akabinde şu satırları komut satırında yazmak sureti ile ilk örnek uygulamamızı yapmış olalım:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bu kodları komut satırında yazdıktan sonra Scala bize &lt;strong&gt;&lt;em&gt;defined object HelloWorld&lt;/em&gt;&lt;/strong&gt; şeklinde bir mesaj dönecek. Buradaki &lt;strong&gt;&lt;em&gt;object&lt;/em&gt;&lt;/strong&gt; keywordü Java SE’deki sınıf gibi düşünülebilir.
Scala’da Java SE’deki gibi &lt;strong&gt;&lt;em&gt;class&lt;/em&gt;&lt;/strong&gt; keywordü de mevcuttur. Object ile Class arasındaki fark ise Class Java SE’de bildiğimiz gibi OOP mantığında çalışırken Object ise sanki dana önce
oluşturulmuş bir sınıfdan nesne üretiyorumuş gibi ve Singleton mantığı üzerinde çalışır. Yani Object ile oluşturduklarımızın bellek üzerinde sadece bir örneği yaşar. Class ile oluşturulanların
ise tıpkı Java’daki gibi new’lenerek birden fazla örneğinin yaşaması sağlanabilir. 
&lt;strong&gt;&lt;em&gt;def&lt;/em&gt;&lt;/strong&gt; keywordü ise definition’dan geliyor ve adı üzerinde bir tanımla yapmak için kullanılıyor. def’in akabinde tanımlama yapacağımız metodun ismi yazılıyor, biz de main metodu 
tanımladık. Java SE’de main metodu String[] args şeklinde bir parametre alıyordu. Scala’da da benzer şekilde args: Array[String] şeklinde. println komutu da yazdırma işlemi için 
kullanılıyor. C dilinde &lt;strong&gt;&lt;em&gt;printf&lt;/em&gt;&lt;/strong&gt;, C++’da &lt;strong&gt;&lt;em&gt;cout&lt;/em&gt;&lt;/strong&gt;, Java’da &lt;strong&gt;&lt;em&gt;println&lt;/em&gt;&lt;/strong&gt; yazdırma işlemleri için kullanılabilen metotlardan bazıları. Scala’da da println’i kullanabiliriz.&lt;/p&gt;

&lt;p&gt;defined object … yazısını gördükten sonra metodumuzu koşturabiliriz. Bunun için tanımlanan object adı.metot adı şekinde çağırım yapabiliriz. Yani bizim için 
&lt;strong&gt;&lt;em&gt;HelloWorld.main(Array())&lt;/em&gt;&lt;/strong&gt; şeklinde bir çağırım yeterli olacaktır. Bu çağırım akabinde konsolda &lt;strong&gt;&lt;em&gt;Hello, world!&lt;/em&gt;&lt;/strong&gt;‘ü göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris4.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peki bir dosya üzerinde Scala kodu çalıştırmak istesek? Onun için de uzantısı &lt;strong&gt;&lt;em&gt;.scala&lt;/em&gt;&lt;/strong&gt; olan bir dosyaya kodumuzu yazdıktan sonra onu derlememiz ve çalıştırmamız gerekiyor.&lt;/p&gt;

&lt;p&gt;Şimdi herhangi bir yerde yukarıdaki Hello World kodunun barındığı .scala uzantılı bir dosya oluşturun. Bendeki dosyanın adı &lt;strong&gt;&lt;em&gt;HelloWorld.scala&lt;/em&gt;&lt;/strong&gt; şeklinde.&lt;/p&gt;

&lt;p&gt;Akabinde komut satırından bu dosyanın olduğu yere gelin ve&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;scalac&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;komutunu çalıştırın. scalac komutu bizim elimizdeki Scala dosyamızı derleyecek ve &lt;strong&gt;&lt;em&gt;.class&lt;/em&gt;&lt;/strong&gt; uzantılı bir dosya oluşturacak.&lt;/p&gt;

&lt;p&gt;Şimdi de&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;şeklinde bir komut çalıştıralım. Az önce biz HelloWorld$.class isminde bir dosya edindik. Buraki HelloWorld’ü scala komutuna vererek HelloWorld.scala içindeki main metodunu çalıştırmış
olacağız.&lt;/p&gt;

&lt;p&gt;Aşağıdaki ekran görüntüsünden de görebileceğiniz gibi yine Hello World çıktısını aldık.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris5.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align: center;color: red&quot;&gt;&lt;strong&gt;İkinci Yol&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sisteminizde kurulu değilse NetBeans IDE’yi kurunuz. Akabinde NetBeans IDE’yi açıp Tools -&amp;gt; Plugins penceresini açın ve öncelikle &lt;strong&gt;&lt;em&gt;Check For Newest&lt;/em&gt;&lt;/strong&gt; butonuna tıklayın. Güncel ve
kurulmaya uygun eklentiler listesini güncelledikten sonra sağ üstteki arama kutucuğuna Scala yazın ve çıkan tün sonuçları işaretleyin, ardından Install butonuna tıklayın.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris6.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Karşınıza gelen pencereleri Next deyip geçebilirsiniz. Bir pencerede kullanım şartlarınızı kabul etmenizi isteyecek. Kabul tikine tıklayıp Install dediğinizde eklentiler kurulmaya başlanacak.&lt;/p&gt;

&lt;p&gt;Eklentiler kurulduktan sonra NetBeans IDE’yi yeniden başlatın. IDE açıldıktan sonra File -&amp;gt; New Project deyip sol kısımdan Maven’ı sağ kısımdan da &lt;strong&gt;&lt;em&gt;Project from Achetype&lt;/em&gt;&lt;/strong&gt; seçeneğini 
seçin ve Next deyin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris7.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris8.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris8.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gelen ekranda arama kutusuna Scala yazın ve çıkan seçeneklerden maven-archetype-scala-executable’ı seçin, akabinde Next deyin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris9.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris9.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi gelen ekranda projeye ait bilgileri girebilirsiniz. Ben proje adı olarak ScalaTutorials diyorum. Finish butonuna tıklayarak projeyi oluşturuyoruz.&lt;/p&gt;

&lt;p&gt;Proje açıldıktan sonra hemen Project Files altındaki pom.xml dosyasına gidiyoruz ve&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.scala-lang&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;scala-library&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.9.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;şeklinde olan bağımlılıkdaki version kısmını şu anki en güncel sürüm olan 2.12.1 ile değiştiriyoruz. Akabinde pom.xml’i kaydediyoruz ve projeye sağ tıklayıp &lt;strong&gt;&lt;em&gt;Clean&amp;amp;Build&lt;/em&gt;&lt;/strong&gt; diyoruz.&lt;/p&gt;

&lt;p&gt;Proje için gerekli ve güncel kütüphaneler eklendikten sonra projedeki &lt;strong&gt;&lt;em&gt;Scala Packages&lt;/em&gt;&lt;/strong&gt; altındaki pakete sağ tıklayıp New seçip &lt;strong&gt;&lt;em&gt;Scala Object&lt;/em&gt;&lt;/strong&gt;‘i seçiyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris10.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris10.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gelen ekranda Class Name alanına &lt;strong&gt;&lt;em&gt;HelloWorld&lt;/em&gt;&lt;/strong&gt; yazıp Finish diyoruz ve gelen kodu yukarıda konsolda kullandığımız kod ile değiştiriyoruz. Kodu değiştirdikten sonra projeye sağ
tıklayıp &lt;strong&gt;&lt;em&gt;Build&lt;/em&gt;&lt;/strong&gt; diyoruz ve akabinde Build işlemi bitince HelloWorld.scala’ya sağ tıklayıp &lt;strong&gt;&lt;em&gt;Run File&lt;/em&gt;&lt;/strong&gt; diyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/scala/scalaGiris11.png&quot;&gt;
&lt;img src=&quot;/images/scala/scalaGiris11.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi Hello, world! çıktısını aldık.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. Scala’ya bir giriş yaptık, binary dosyalar ile komut satırı üzerinden derleme yaptık, NetBeans IDE üzerinde Scala kodunun nasıl
yazılabileceğini görmüş olduk. Gelecek derslerde ben NetBeans IDE üzerinden devam edeceğim ve bu ScalaTutorials projesi üzerinden dersleri anlatacağım.&lt;/p&gt;

&lt;p&gt;Başka bir yazıda görüşenece kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/scala-nedir-giris/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/scala-nedir-giris/</guid>
        
        <category>scala nedir?</category>
        
        <category>scala programlama dili</category>
        
        <category>scala türkçe tutorial</category>
        
        <category>scala dersleri</category>
        
        <category>scala türkçe kaynak</category>
        
        <category>scala tutorial</category>
        
        <category>scala on netbeans</category>
        
        <category>how write scala code on netbeans</category>
        
        <category>netbeans de scala kodu nasıl yazılır</category>
        
        <category>scala ve netbeans kullanımı</category>
        
        
      </item>
    
      <item>
        <title>Bir Karşı Ütopya - Cesur Yeni Dünya</title>
        <description>&lt;p&gt;&lt;a href=&quot;/images/cyd.jpg&quot;&gt;
&lt;img src=&quot;/images/cyd.jpg&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Aldous Huxley’in kaleminden çıkmış ve karşı ütopya olan &lt;strong&gt;&lt;em&gt;Cesur Yeni Dünya&lt;/em&gt;&lt;/strong&gt; kitabını okumayı yeni tamamladım ve bu kitap hakkında da bir yazı yazmak istedim.&lt;/p&gt;

&lt;p&gt;Orjinal adı &lt;strong&gt;&lt;em&gt;Brave New World&lt;/em&gt;&lt;/strong&gt; olan bu kitabın isimlendirmesi Sheakespeare’in Fırtına isimli eserinde yer alan Miranda karakterinin bir sözünden gelmektedir. Beşinci perde, birinci
sahnede Miranda &lt;strong&gt;&lt;em&gt;Brave New World&lt;/em&gt;&lt;/strong&gt; şeklinde bir seslenişte bulunur. Buradaki Brave kelimesi söylendiğinde ilk akla gelen Cesur kelimesi olsa da Sheakespeare eserinde bu kelimeyi
&lt;strong&gt;&lt;em&gt;Güzel&lt;/em&gt;&lt;/strong&gt; anlamında kullanmıştır. Dolayısı ile kitabın isminin aslında &lt;strong&gt;&lt;em&gt;Güzel Yeni Dünya&lt;/em&gt;&lt;/strong&gt; olması gerektiği de iddia edilmektedir.&lt;/p&gt;

&lt;p&gt;Sayın Barış Özcan’ın &lt;strong&gt;OKU&lt;/strong&gt; serisinde bu kitaba değindiği şu videoyu da izlemenizi öneririm: &lt;a href=&quot;https://www.youtube.com/watch?v=DeLny1x-wZA&quot;&gt;https://www.youtube.com/watch?v=DeLny1x-wZA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kitabımız mekan olarak Londra’da ve zaman olarak kitap içinde &lt;strong&gt;&lt;em&gt;Ford’dan sonra 632&lt;/em&gt;&lt;/strong&gt; yılında yani 26. yüzyılda geçmektedir.&lt;/p&gt;

&lt;p&gt;Kitabımızın konusuna gelecek olursak, kitabımız dinin, ahlakın, ailenin, delicesine sevilen eşlerin, çocukların olmadığı bir dünya, hastalık, tasa vs. dertlerin önüne geçmek için
kullanılan &lt;strong&gt;&lt;em&gt;Soma&lt;/em&gt;&lt;/strong&gt;, yapay üretilen insanlar yani doğumun olmadığı, herkesin herkese ait olduğu bir dünya kitabımızın konusu.&lt;/p&gt;

&lt;p&gt;Kitabımızda &lt;strong&gt;&lt;em&gt;Kuluçka Şartlandırma Merkezi&lt;/em&gt;&lt;/strong&gt; adında bir kurum yer almaktadır. Bu kurum insan üretimi yapılan ve üretilen bu insanları şartlandıran bir kurumdur. İnsanlar üretildikten
sonra yukarıda bahsettiğim özelliklerden, hissiyatlardan arınacak şekilde şartlandırılırlar. Sürekli tüketim yapmaya yönlendirilirler. Örneğin bir eşyanın başına bir şey geldiğinde
onu onarmak yerine atıp yenisini almak gibi.&lt;/p&gt;

&lt;p&gt;Bu şartlandırılmış dünyada Tanrı inancının yerini de Ford almış ve artık &lt;strong&gt;&lt;em&gt;Ford Aşkına&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Aman Ford’um&lt;/em&gt;&lt;/strong&gt; gibi söyleyişler türetilmiştir.&lt;/p&gt;

&lt;p&gt;Kitap içerisinde Ford’un bu derece baz alınmasında etkin kişi Henry Ford’dur ve bu etkinliğinin altında dünyada ilk seri üretimi yaptıran kişi olmasıdır. İnsanlar da seri üretimle
üretildiği için Henry Ford kitap içerisinde adeta bir milattır.&lt;/p&gt;

&lt;p&gt;Kitabımızı yönlendiren en ana 3 karakter mevcut. Bunlar Bernard Marx, Lenina Crowne ve John (Vahşi). Bunlardan Vahşi karakteri kitabımızın ortalarına kadar ortalarda olmayandır. Bernard
ve Lenina ise kitabın başından sonuna kadar bizimle beraberdir.&lt;/p&gt;

&lt;p&gt;Şartlandırılmış ve mutlu insanların aksine sorunlu ve mutsuz olan, adeta hatalı üretilmiş olan Bernard bu mutsuzluğuna çare olması amacı ile &lt;strong&gt;&lt;em&gt;Uygar Dünya&lt;/em&gt;&lt;/strong&gt; olarak adlandırılan bu 
alandan farklı olarak eski koşullarda yaşamını devam ettiren insanların yaşadığı New Mexico’ya Lenina ile birlikte kısa süreli bir gezi için gider. Bu gezi sırasında kendisinin ilerideki
yaşamı için önemli olacak ve o yaşamı etkileyecek John (Vahşi) ve Annesi Linda ile tanışır. Bu tanışıklığın ardından Bernard, Lenina, Bernard’ın arkaşı Helmholtz Watson, John ve 
John’un annesi Linda hayatlarında büyük değişim ve olaylar yaşamaya başlarlar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;BEN KEYİF ARAMIYORUM…&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;GERÇEK TEHLİKE İSTİYORUM, ÖZGÜRLÜK İSTİYORUM, GÜNAH İSTİYORUM&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Şu linkteki yazı da hoşuma gitti, burada paylaşayım:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sedolinka.com/index.php/2015/09/30/1109/&quot;&gt;http://www.sedolinka.com/index.php/2015/09/30/1109/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Başka bir kitap yazısında görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;

&lt;p&gt;Kitap resiminin alıntılandığı link: 
&lt;a href=&quot;http://www.idefix.com/Kitap/Cesur-Yeni-Dunya/Aldous-Huxley/Edebiyat/Roman/Bilim-Kurgu/urunno=0000000066424&quot;&gt;http://www.idefix.com/Kitap/Cesur-Yeni-Dunya/Aldous-Huxley/Edebiyat/Roman/Bilim-Kurgu/urunno=0000000066424&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/cesur-yeni-dunya/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/cesur-yeni-dunya/</guid>
        
        <category>jsoup nedir?</category>
        
        <category>jsoup nasıl kullanılır</category>
        
        <category>jsoup ile html parse etme</category>
        
        <category>jsoup ile html nasıl parse edilir?</category>
        
        <category>jsoup kullanımı</category>
        
        <category>jsoup html parsing</category>
        
        <category>jsoup java</category>
        
        <category>html parsing with jsoup</category>
        
        <category>javada html parse etme</category>
        
        
      </item>
    
      <item>
        <title>Java Ve Jsoup Kütüphanesi İle HTML Parse Etme</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Bu yazıda sizlere JSoup kütüphanesini kullanarak Java dili ile HTML parse etme işlemini basit bir uygulama ile anlatmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;Web üzerinde olsun, mobil üzerinde olsun çokça proje geliştiriliyor ve bu projelerin bir kısmı başka bir sistemde üretilmiş verileri alıp, biçimlendirip değiştirip kendi kullanıcılarına
sunuyorlar. Buna en iyi örnek web servisler olur. Bir web servis sizin projeniz bir yerlerde veriler üretmiş durumda olabilir ve size de bu web servisden bilgileri alıp kendi
kullanıcılarınıza sunmak kalır. Bu işlem tabii ki kolay değildir, kendi içinde zorlukları vardır.&lt;/p&gt;

&lt;p&gt;JSoup da size var olan bir web sayfasının tarayıcımız tarafından yorumlanan HTML kodunu parse ederek o web sayfasındaki bilgileri kendi uygulamanızda kullanmanızı ve kullanıcılarınıza
sunmanızı sağlar.&lt;/p&gt;

&lt;p&gt;Şimdi örneğimize başlayalım  💪&lt;/p&gt;

&lt;p&gt;Öncelikle IDE’nizde bir Maven projesi açın ve JSoup kütüphanesini projenizin classpathine ekleyecek olan şu bağımlılık kodunu pom.xml dosyanıza ekleyin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.jsoup&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jsoup&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.10.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi HTML parse etme konusuna gelelim. Biz bu yazı için &lt;a href=&quot;https://www.kanald.com.tr/yayin-akisi&quot;&gt;https://www.kanald.com.tr/yayin-akisi&lt;/a&gt; adresi üzerindeki yayın akışı bilgilerini HTML’i
parçalayıp alacağız.&lt;/p&gt;

&lt;p&gt;Yukarıda bahsettiğim gibi JSoup ile HTML parse edeceğimiz için gidip browserdan yayın akışı bilgilerinin yer aldığı sayfanın kodlarını inceleyip nasl bir taktik izlememiz gerektiğine bakmamız
gerekiyor. Örneğin yayın akışının tamamı id özelliği olan bir div içinde tanımlanmış. Bu div içinde table, onun altında tbody ve onun içinde de tr etiketleri ile hangi saatte ne 
yayınlanacağı, yayının resmi ve canlı mı tekrar yayın mı gibi bilgiler belirtilmiş.  Şu resimde durumu daha belirgin hale getirelim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/jsoup1.png&quot;&gt;
&lt;img src=&quot;/images/jsoup1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Şimdi bizim yapacağımız örneğmizde de JSoup kullanarak bu id bilgisine sahip div altından tr etiketli elementleri alalım. Ardından bu tr içindeki saat, yayın adı gibi bilgilerin
barındığı elementleri alarak bilgileri konsola basalım.&lt;/p&gt;

&lt;p&gt;Bir adet time, imageUrl, title ve tag özelliklerine sahip &lt;strong&gt;&lt;em&gt;Broadcast&lt;/em&gt;&lt;/strong&gt; isminde sınıfımız olsun:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Broadcast.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;samplejsoupproject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Broadcast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getImageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setImageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;imageUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;   
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi HTML parse işlemini yapacağımız main metodunu barındıran sınıfımıza ve açıklamasına bakalım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JsoupUsage.java&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;samplejsoupproject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.jsoup.Jsoup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.jsoup.nodes.Document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.jsoup.nodes.Element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.jsoup.select.Elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsoupUsage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcastList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jsoup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://www.kanald.com.tr/yayin-akisi&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Elements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcasts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#day-061216 tr&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcasts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElementsByClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElementsByClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setImageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElementsByTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;img&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;data-src&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElementsByClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;broadcastList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broadcastList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getImageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;List&lt;broadcast&gt; broadcastList = new ArrayList&amp;lt;&amp;gt;(); satırı ile yayın akışındaki her bir satır yayını tutacak nesneleri barındıracak listeyi tanımlıyoruz.&lt;/broadcast&gt;&lt;/li&gt;
  &lt;li&gt;try-catch bloğunun içinde Document document = Jsoup.connect(“https://www.kanald.com.tr/yayin-akisi”).get(); satırı ile Kanal D’nin yayın akışı sayfasının tarayıcıda görünen o HTML
kodlarını Document objesi tipinde alıyoruz.&lt;/li&gt;
  &lt;li&gt;Elements broadcasts = document.select(“#day-061216 tr”); satırı ile select metoduna verilen &lt;strong&gt;&lt;em&gt;CSS Selector&lt;/em&gt;&lt;/strong&gt; şartını sağlayan elementleri barındıracak Elements tipinde bir nesne
tanımlıyoruz. Bizim şartımız &lt;strong&gt;&lt;em&gt;day-061216&lt;/em&gt;&lt;/strong&gt; id’sine sahip eleman altındaki tr’leri getirmesidir. # işareti CSS Selector konusunda id anlamına gelmektir. . işareti de class name.&lt;/li&gt;
  &lt;li&gt;Akabinde for döngüsü ile broadcasts nesnesi içerisinde dönüyoruz. Döngü içerisinde önce bir Broadcast nesnesi oluşturuyoruz. Broadcast sınıfından ürettiğimiz bu nesnenin set metotlarını
kullanarak ilgili alanları set ediyoruz. Yukarıda resimde gördüğünüz gibi tr etiketinin içindeki elementler kendilerine ait class özellikleri ile tanımlanmışlar. Bu elementler class
özellikleri ile çekilebilirler. Biz de element.getElementsByClass(“time”) diyerek CSS Selector’e yazarak aldığımız tr etiketinin içindeki class özelliği time olan elementi çekiyoruz. Bu ifade bize 
  &lt;strong&gt;&lt;em&gt;&amp;lt;th class=&quot;time&quot;&amp;gt;05.30&amp;lt;/th&amp;gt;&lt;/em&gt;&lt;/strong&gt; şeklinde bir değer döndürür. Yani direk elemanın HTML halini. Biz ise aradaki 05.30 değerini elde etmek istiyoruz. Bunun için en sonunda &lt;strong&gt;&lt;em&gt;text()&lt;/em&gt;&lt;/strong&gt; 
metodunu kullanıyoruz.&lt;/li&gt;
  &lt;li&gt;for döngüsünün devamı da aynı mantıktadır. Yalnız imageUrl’i aldığımız kısımda class name özelliği yerine direk tag name olan img ile elementi çekiyoruz ve &lt;strong&gt;&lt;em&gt;attr()&lt;/em&gt;&lt;/strong&gt; metodu ile 
o elementin &lt;strong&gt;&lt;em&gt;data-src&lt;/em&gt;&lt;/strong&gt; özelliğini alıyoruz. Örneğin&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/img&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;şeklindeki HTML etiketinde src bir özelliktir. Biz de attr() metodu ile bunun gibi özellikleri çekebiliriz.
* İkinci for döngüsü içerisinde de doldurduğumuz broadcastList listesi içinde dolanıp değerleri konsola yazdırıyoruz.&lt;/p&gt;

&lt;p&gt;Uygulamayı çalıştırdığımızda konsol çıktımız şu şekilde olur:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/jsoup2.png&quot;&gt;
&lt;img src=&quot;/images/jsoup2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gördüğünüz gibi HTML’den parse işlemi ile yayın akışı bilgilerini elde ettik, akabinde de konsola yazdırdık.&lt;/p&gt;

&lt;p&gt;Bu yazıda basitçe JSoup’un nasıl kullanılabileceğine değinmiş olduk arkadaşlar. Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/html-parsing-in-java-with-jsoup/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/html-parsing-in-java-with-jsoup/</guid>
        
        <category>jsoup nedir?</category>
        
        <category>jsoup nasıl kullanılır</category>
        
        <category>jsoup ile html parse etme</category>
        
        <category>jsoup ile html nasıl parse edilir?</category>
        
        <category>jsoup kullanımı</category>
        
        <category>jsoup html parsing</category>
        
        <category>jsoup java</category>
        
        <category>html parsing with jsoup</category>
        
        <category>javada html parse etme</category>
        
        
      </item>
    
      <item>
        <title>Sonar İle Kod Kalitesini Arttırın</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar.&lt;/p&gt;

&lt;p&gt;Bu yazıda Java projesi geliştirirken Eclipse IDE üzerinde kod kalitesini arttırmaya yardımcı olan &lt;strong&gt;&lt;em&gt;Sonar&lt;/em&gt;&lt;/strong&gt; eklentisinin Eclipse IDE üzerinde kurulum ve basitçe kullanımı konusunu anlatmaya
çalışacağım. Basitçe bir kaç örnekle de Sonar’ın analizini örneklendirmeye çalışacağım.&lt;/p&gt;

&lt;p&gt;İlk olarak Eclipse’de &lt;strong&gt;&lt;em&gt;Help -&amp;gt; Eclipse Marketplace&lt;/em&gt;&lt;/strong&gt; Eclipse’in mağazasını açalım ve arama kutusuna &lt;strong&gt;&lt;em&gt;Sonar&lt;/em&gt;&lt;/strong&gt; yazalım. &lt;strong&gt;&lt;em&gt;Go&lt;/em&gt;&lt;/strong&gt; butonuna tıklayarak aratalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar1.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arama işleminin ardından &lt;strong&gt;&lt;em&gt;SonarLint 2.4.0&lt;/em&gt;&lt;/strong&gt; eklentisini Install butonuna tıklayarak IDE’mize kuralım. Sürüm sizin bu yazıyı okuduğunuz zamanda değişebilir.&lt;/p&gt;

&lt;p&gt;Bu ekranda ikisini de işaretleyelim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar2.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu ekranda da şartları kabul edip &lt;strong&gt;&lt;em&gt;Finish&lt;/em&gt;&lt;/strong&gt; butonuna tıklayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar3.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar3.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eclipse bir süre sürecek şekilde eklentiyi kuracak. Kurulum işlemi bittiğinde Eclipse sizden IDE’yi Restart etmenizi isteyecek. IDE’yi yeniden başlatın.&lt;/p&gt;

&lt;p&gt;Şimdi bir proje açın ve main metodunu barındıran bir Java sınıfı oluşturun. Sonar hemen analiz yapmaya ve sizi kod kalitesini arttırmaya yöneltmeye başlayacak. Şu resimden de 
görebileceğiniz gibi Sonar Sonar analiz yaparken sorunlu gördüğü bölgelerin altını mavi bir çizgi ile çizip size düzeltmeniz gerektiğini söyleyecek.&lt;/p&gt;

&lt;p&gt;Eclipse’in hızlı ulaşım kutucuğu olan arama kutusuna SonarLint yazıp &lt;strong&gt;&lt;em&gt;SonarLint Issues&lt;/em&gt;&lt;/strong&gt; tabını açın. SonarLint bu tabda düzeltilmesi gereken yerleri söylüyor olacak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar4.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar4.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki mesela iki adet düzeltilmesi gereken şey olduğunu söylüyor. Birinci madde main metodu boş ve en azından yorum satırları ile niye metodun boş olduğunu bildir diyor.&lt;/p&gt;

&lt;p&gt;İkinci madde ise her Java sınıfında default olarak üretilen public constructor yerine private bir constructor bir yaz.&lt;/p&gt;

&lt;p&gt;Ben bunları yaptığımda Sonar’ın iki uyarısı da gitti.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar5.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar5.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Java’da JDK tarafından şart koşulmayan ama de-facto bir şekilde kodlama standartı olmuş şeyler vardır. Örneğin sınıf isimleri büyük harfle başlar, metot ve değişken isimleri küçük harfle
başlar gibi. Şimdi bunları yaptığımızda Sonar bir tepki veriyor mu bakalım.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;sonarTutorialClass&lt;/em&gt;&lt;/strong&gt; isminde küçük harfle başlayan bir sınıf, ismi büyük harfle başlayan bir method, ismi büyük harfle başlayan bir değişken ve bir de System.out kullanıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar6.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar6.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SonarLint Issues kısmında 4 adet düzeltilmesi gereken yer olduğunu görüyoruz.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Birinci madde System.out ya da System.err gibi şeylerin loglama yapmamız gerektiğini söylüyor.&lt;/li&gt;
  &lt;li&gt;İkinci madde local değişkenlerin adlarının küçük harfle başlaması gerektiğini ve bu yönde düzeltme yapmamızı söylüyor.&lt;/li&gt;
  &lt;li&gt;Üçüncü madde metot adlarının küçük harfle başlaması gerektiğini ve bu yönde düzeltme yapmamızı söylüyor.&lt;/li&gt;
  &lt;li&gt;Dördüncü madde sınıf isimlerinin büyük harfle başlaması gerektiğini ve küçük harfle başlaması gerektiğini ve bu yönde düzeltme yapmamızı söylüyor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Şimdi bu dediklerini düzenleyelim ve Sonar’ın analizine bırakalım. Gördüğünüz gibi hatalar gitti.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/sonar/sonar7.png&quot;&gt;
&lt;img src=&quot;/images/sonar/sonar7.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu şekilde kodunuzun içerisinde derleme zamanı için hatalı olmayan ama düzeltilmeye ihtiyaç duyulan kodları Sonar eklentisi ile görüp iyileştirebiliriz. Tabii benim yukarıda verdiğim
örneklerin basit olduğunu düşünebilirsiniz ancak Sonar’ın çalıştığını örneklemek amacı ile verdim. Bir yazılım geliştirme sırasında çok daha çeşitli durumlar ile karşılaşabilir, Sonar ile
durumların farkında olabilirsiniz.&lt;/p&gt;

&lt;p&gt;Başka bir yazıda görüşene kadar sağlıcakla kalın.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/sonar-plugin/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/sonar-plugin/</guid>
        
        <category>sonar nedir?</category>
        
        <category>sonar nasıl kullanılır?</category>
        
        <category>java sonar nedir?</category>
        
        <category>java sonar nasıl kullanılır?</category>
        
        <category>java sonar nasıl kurulur?</category>
        
        <category>sonar ile kod analizi</category>
        
        <category>eclipse sonar plugin</category>
        
        <category>sonar plugin ile kod kalitenizi arttırın.</category>
        
        <category>eclipse sonar plugin</category>
        
        
      </item>
    
      <item>
        <title>İÇİMDEN GELEN ŞİİRLER</title>
        <description>
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;SANA BİR TANE MÜJDEM VAR
SEVMİYORUM ARTIK AŞIK DEĞİLİM SANA
SEVİNEBİLİRSİN, MUTLU OLABİLİRSİN 
KURTULDUN ARTIK BENDEN
GİT KİMİ SEVİYORSAN SEV ŞİMDİ
ARTIK ZERRE UMURUMDA DEĞİLSİN&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;PIRLATALARDAN DAHA DEĞERLİ BİR KALBİN VAR HİSSEDİYORUM
EFLATUN GİBİ GÜZEL BİR AŞKIMIZ OLSUN İSTİYORUM
RESMETTİM O GÜZEL AY YÜZÜNÜ KENDİ BENLİĞİME 
İNAN Kİ BEN SANA LAYIK DEĞİLİM BİLİYORUM&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;GÜZEL BİR YAZ AKŞAMÜZERİNDE
AH BULUŞSAM GÖRÜŞSEM SENİNLE
GÜZEL BİR SAHİLDE İKİ ÇAY SÖYLESEK 
SEN YİNE O MÜTHİŞ GÜZELLİĞİNE GÜLSEN
BEN DE SEYRETSEM SENİ DOYMAMIŞÇASINA&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;AH O MÜTHİŞ GÜLÜŞÜN YOK MU
MALLARDAN MÜLKLERDEN DAHA DEĞERLİ
SENİ ÇOK SEVİYORUM
HAYATIMIN SONUNA DEK YANIMDA OL İSTİYORUM&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;KEŞKE BİR BİLSEN, BİLEBİLSEN
SENİ NE KADAR ÇOK SEVDİĞİMİ
DÜNYALARA HAYKIRMAK İSTİYORUM
SENİ SEVİYORUM DEMEK İSTİYORUM
AMA BOĞAZIM DÜĞÜMLENİYOR
ZERRE MİKTAR SESİM ÇIKAMIYOR&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/icimden-siirler/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/icimden-siirler/</guid>
        
        <category>jsoup nedir?</category>
        
        <category>jsoup nasıl kullanılır</category>
        
        <category>jsoup ile html parse etme</category>
        
        <category>jsoup ile html nasıl parse edilir?</category>
        
        <category>jsoup kullanımı</category>
        
        <category>jsoup html parsing</category>
        
        <category>jsoup java</category>
        
        <category>html parsing with jsoup</category>
        
        <category>javada html parse etme</category>
        
        
      </item>
    
      <item>
        <title>TestNG Nedir? TestNG İle Örnek Uygulama</title>
        <description>&lt;p&gt;Merhabalar arkadaşlar. Bu yazıda sizlere TestNG kütüphanesinden bahsetmek ve örnek bir uygulama yapmak istiyorum. Eğer kısmet olursa da TestNG’nin resmi dökümantasyonunu baz alarak 
bir yazı dizisi hazırlamak istiyorum. O nedenle bu yazıyı TestNG kütüphanesine giriş yazısı olarak da düşünebilirsiniz 😊&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TestNG Nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;İsmi &lt;strong&gt;&lt;em&gt;Next Generation Test&lt;/em&gt;&lt;/strong&gt; kelimelerinden türetilen TestNG JUnit ve NUnit kütüphanelerinden etkilenerek ve onlara göre daha fazla yetkinlik barındıran bir test kütüphanesidir. Java
dünyası içerisinde en bilindik test koşturma aracı olarak JUnit’i düşünebiliriz. TestNG de JUnit’in bu tahtına göz dikmiş olan bir test kütüphanesidir.&lt;/p&gt;

&lt;p&gt;TestNG kendini daha güçlü, daha fonksiyonel ve daha kolay olarak nitelendirmektedir. Bu özellikler için şunları örnek verebiliriz:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Notasyonlar&lt;/li&gt;
  &lt;li&gt;Testlerin kendine has Thread’lerde koşabilmesi&lt;/li&gt;
  &lt;li&gt;Multithread Safe Test Kodları&lt;/li&gt;
  &lt;li&gt;Esnek test konfigürasyonu&lt;/li&gt;
  &lt;li&gt;@DataProvider notasyonu sayesinde Data Driven Test&lt;/li&gt;
  &lt;li&gt;Parametrik yönteme destek&lt;/li&gt;
  &lt;li&gt;IDE’ler için Plugin desteği&lt;/li&gt;
  &lt;li&gt;Daha ileri esneklik için BeanShell desteği&lt;/li&gt;
  &lt;li&gt;Kendi içerisinde loglama desteği&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Şimdi IDE’nizde bir Maven projesi açın ve pom.xml dosyanıza şu bağımlılık kodunu ekleyin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.testng&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;testng&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;6.8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ben bu ve TestNG için gelecek diğer yazılarda NetBeans IDE kullanacağım. Size de tavsiye ederim 😁&lt;/p&gt;

&lt;p&gt;Şimdi NetBeans IDE üzerinde projeye sağ tıklayıp New -&amp;gt; Other dedikten sonra gelen ekranda sol kısımdan &lt;strong&gt;&lt;em&gt;Unit Tests&lt;/em&gt;&lt;/strong&gt;‘i sağ kısımdan ise &lt;strong&gt;&lt;em&gt;TestNG Case&lt;/em&gt;&lt;/strong&gt;‘i seçelim ve 
bir herhangi bir isim verdiğiniz Test sınıfı oluşturalım.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/testNG/testng1.png&quot;&gt;
&lt;img src=&quot;/images/testNG/testng1.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NetBeans bizim için şöyle bir kod üretmiş olacak:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * To change this license header, choose License Headers in Project Properties.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * To change this template file, choose Tools | Templates&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * and open the template in the editor.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;testng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.AfterClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.AfterMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.BeforeClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.BeforeMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @author ilkaygunel&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestNGTestCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TestNGTestCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// TODO add test methods here.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The methods must be annotated with annotation @Test. For example:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// @Test&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// public void hello() {}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@BeforeClass&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUpClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterClass&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDownClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@BeforeMethod&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUpMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterMethod&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDownMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Şimdi yukarıdaki bu kodu şu şekilde düzenleyelim ve inceleyelim:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ilkaygunel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;testng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.AfterClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.AfterMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.BeforeClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.BeforeMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testng.annotations.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestNGTestCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@BeforeClass&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUpClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;setUpClass() metodu çalıştı!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@BeforeMethod&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUpMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;setUpMethod() metodu çalıştı!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Test1() Metodu Çalıştı&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Test2() Metodu Çalıştı&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterMethod&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDownMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tearDownMethod() metodu çalıştı!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterClass&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDownClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tearDownClass() metodu çalıştı!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kod içerisinde test koşturumu için kullanılan bir çok notasyon arasından 5 tanesini görüyoruz. Notasyonlar şu manalara gelmektedir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;@BeforeClass&lt;/strong&gt;: Bu notasyon class’ımız build edildiğinde ve sınıf içerisinden ya da bu sınıftan kalıtılan sınıf içerisinden herhangi bir test metodu çalışmadan hemen önce devreye girer. Dikkat etmemiz gereken nokta ise bu
notasyon ile işretli metot her test için ayrı ayrı çalışmaz, bir kez çalışır.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@BeforeMethod&lt;/strong&gt;: Bu notasyon ile işaretli metot bu sınıf ve bu sınıftan kalıtılan her bir test metodunun koşumundan hemen önce çalışır. Yani her test metodu için ayrı ayrı çalışacaktır.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@Test&lt;/strong&gt;: Test case’lerimizi @Test notasyonu ile işaretli metotlarımızın içinde yazıyoruz. Bu Java sınıfımı Test sınıfı olarak koşturduğumuzda çalışacak merkezi noktalar bunlardır.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@AfterMethod&lt;/strong&gt;: Bu notasyon ile işaretli metot bu sınıf ve bu sınıftan kalıtılan her bir test metodunun koşumunun hemen ardından devreye girer. Yani her test metodu için ayrı ayrı çalışacaktır.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@AfterClass&lt;/strong&gt;: Bu notasyon artık bu sınıf içerisindeki tüm test metotları ve test metotları sonrasında koşacak metotlar bittiğinde devreye girer ve testlerin son aşamasında ne yapılması gerekiyorsa onu yapar. Örneğin 
Selenium’da web driver’ın kapatılması gibi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu sınıfa sağ tıklayıp &lt;strong&gt;&lt;em&gt;Test File&lt;/em&gt;&lt;/strong&gt; seçeneğine tıkladığımızda sınıfızdaki test case’leri koşacak. Şöyle bir ekran çıktısı gelecek:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/testNG/testng2.png&quot;&gt;
&lt;img src=&quot;/images/testNG/testng2.png&quot; style=&quot;width: 958px; height= 400px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ekran çıktısında gördüğümüz ve yukarıda bahsettiklerimiz doğrultusunda beklediğimiz gibi  setUpClass() ve tearDownClass() metotları bir kez, setUpMethod() ve tearDownMethod() metotlarımız
iki adet @Test ile işaretli metodumuz olduğu için 2 defa çalıştılar.&lt;/p&gt;

&lt;p&gt;Bu yazıda anlatacaklarım bu kadar arkadaşlar. TestNG kütüphanesine böylece bir giriş yapmış olalım. Yazının başlarında da dediğim gibi resmi dökümana göre devamını getirmeye
çalışacağım.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Görüşmek Üzere&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;Selam ve Sevgilerimle&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Nov 2016 20:40:21 +0300</pubDate>
        <link>http://ilkaygunel.com/blog/2016/testng-nedir-ornek-uygulama/</link>
        <guid isPermaLink="true">http://ilkaygunel.com/blog/2016/testng-nedir-ornek-uygulama/</guid>
        
        <category>testng nedir?</category>
        
        <category>testng nasıl kullanılır</category>
        
        <category>testng kullanımı için neler yapmak lazım</category>
        
        <category>testng kullanımı</category>
        
        
      </item>
    
  </channel>
</rss>
